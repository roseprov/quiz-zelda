@charset "UTF-8";
/**** BIBLIOTHÈQUES (dans le dossier bower_components) ****/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/**** utilitaires ****/
/**
 * @author Rose Provencher
 * ------------------
 * TABLE DES MATIÈRES
 * ------------------
 *
 * Polices de caractères
 * Palette de couleurs
 * Points de rupture
 **/
/** Polices de caractère **/
@font-face {
  font-family: 'cinzelDecorative';
  src: url("../polices/CinzelDecorative-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'crimsonTextBold';
  src: url("../polices/CrimsonText-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'crimsonText';
  src: url("../polices/CrimsonText-SemiBold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/** Palette de couleurs **/
/** Points de rupture **/
/******** Utilitaires de base (BoxSizing, Clearfix) *********/
/* BoxSizing */
/* Clearfix: pour contrer le problème des enfants flottants*/
.cf:after {
  content: " ";
  display: table;
  clear: both;
}

/******** Utilitaires pour accessibilité *********/
.visuallyhidden,
.screen-reader-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus,
.screen-reader-only.focusable:active,
.screen-reader-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}

/******** Utilitaires pour typographie *********/
/********* Mixins généraux *********/
/**** base (typo) ****/
/**
* --------------------------------------------------------
* TABLE DES MATIÈRES - Typographie responsive (Mobile First)
* --------------------------------------------------------
* Base décimale
* Hiérarchie responsive
*/
/** Base décimale **/
html {
  font-size: 62.5%;
}

body {
  /* 16px pour toutes les largeurs d'écran */
  font-size: 18px;
  font-size: 1.8rem;
  /* facteur multiplicateur de la taille de la police 1.375x16 = 22 */
  line-height: 1.375;
}

@media (min-width: 551px) {
  body {
    font-size: 18px;
    font-size: 1.8rem;
    line-height: 1.5;
  }
}

@media (min-width: 1000px) {
  body {
    line-height: 1.75;
  }
}

/** Hiérarchie responsive **/
/*  plus proche = plus petit  &  plus loin = plus grand */
/* TITRES NIVEAU 1 */
h1,
.h1 {
  /* = 32px */
  font-size: 20px;
  font-size: 2rem;
}

@media (min-width: 551px) {
  h1,
  .h1 {
    /* = 40px */
    font-size: 26px;
    font-size: 2.6rem;
  }
}

/* TITRES NIVEAU 2 */
h2,
.h2 {
  /* = 24px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h2,
  .h2 {
    /* = 32px */
    font-size: 24px;
    font-size: 2.4rem;
  }
}

/* TITRES NIVEAU 3 */
h3,
.h3 {
  /* = 18px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h3,
  .h3 {
    /* = 24px */
    font-size: 20px;
    font-size: 2rem;
  }
}

/* TITRES NIVEAU 4 */
h4,
.h4 {
  /* = 16px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h4,
  .h4 {
    /* = 18px */
    font-size: 18px;
    font-size: 1.8rem;
  }
}

/**** modules ****/
/*!
 * animate.css -http://daneden.me/animate
 * Version - 3.7.0
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 *
 * Copyright (c) 2018 Daniel Eden
 * Animations are slightly modified from the original.
 */
@-webkit-keyframes pulse {
  0%, 86%, 92%, 100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  89%, 96% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
}
@keyframes pulse {
  0%, 86%, 92%, 100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  89%, 96% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    -webkit-transition: all 1.5s ease;
    transition: all 1.5s ease;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    -webkit-transition: all 1.5s ease;
    transition: all 1.5s ease;
  }
  to {
    opacity: 1;
  }
}

@-webkit-keyframes slideInRight {
  from {
    opacity: 0;
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    -webkit-transition: all 2s ease;
    transition: all 2s ease;
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    -webkit-transition: all 2s ease;
    transition: all 2s ease;
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}

.pageAccueil .titre {
  -webkit-animation: fadeIn 2s;
  animation: fadeIn 2s;
}

.pageAccueil .introduction {
  opacity: 0;
  -webkit-animation: slideInRight 1s 1.5s;
  animation: slideInRight 1s 1.5s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.pageAccueil .btnSoumettre {
  opacity: 0;
  -webkit-animation: fadeIn 1.5s 2.5s, pulse 6.5s 9s infinite;
  animation: fadeIn 1.5s 2.5s, pulse 6.5s 9s infinite;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.titre {
  margin: 0;
  font-family: cinzelDecorative, serif;
  color: #FFFFFF;
  text-decoration: none;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.titre .zelda {
  color: #D32121;
  display: block;
}

.bouton {
  display: block;
  background-color: rgba(0, 0, 0, 0.7);
  border: 1px solid #FFFFFF;
  color: #FFFFFF;
  font-family: cinzelDecorative, serif;
  text-decoration: none;
  text-align: center;
  padding: 14px 0;
  font-size: 16px;
  font-size: 1.6rem;
  width: 100%;
  -webkit-transition: all, 200ms ease;
  transition: all, 200ms ease;
}

@media (min-width: 551px) {
  .bouton {
    width: 47.36842%;
  }
}

@media (min-width: 851px) {
  .bouton {
    width: 23.72881%;
  }
}

.bouton:hover, .bouton:focus {
  outline: none;
  -webkit-box-shadow: 0 0 0.6rem #FFFFFF;
  box-shadow: 0 0 0.6rem #FFFFFF;
}

.imgQuestion img {
  width: 47.36842%;
}

@media (min-width: 851px) {
  .imgQuestion img {
    width: 32.20339%;
  }
}

img {
  width: 100%;
}

/***** MISE EN PAGE SUSY ******/
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@media (max-width: 850px) {
  .conteneur {
    min-width: 305px;
    padding: 0 2.63158%;
    background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="url(%23susy-svg-gradient)" width="100%" %3E%3Cdefs%3E%3ClinearGradient spreadMethod="pad" id="susy-svg-gradient" x1="0%" y1="0%" x2="100%" y2="0%"%3E%3Cstop offset="0%" style="stop-color:rgba(64, 191, 64, 0.5);" /%3E%3Cstop offset="100%" style="stop-color:rgba(159, 223, 159, 0.5);" /%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x="2.08333%" width="20.83333%" height="100%"/%3E%3Crect x="27.08333%" width="20.83333%" height="100%"/%3E%3Crect x="52.08333%" width="20.83333%" height="100%"/%3E%3Crect x="77.08333%" width="20.83333%" height="100%"/%3E%3C/svg%3E') no-repeat scroll;
  }
}

@media (min-width: 851px) {
  .conteneur {
    max-width: 1280px;
    margin: 0 auto;
    background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="url(%23susy-svg-gradient)" width="100%" %3E%3Cdefs%3E%3ClinearGradient spreadMethod="pad" id="susy-svg-gradient" x1="0%" y1="0%" x2="100%" y2="0%"%3E%3Cstop offset="0%" style="stop-color:rgba(64, 191, 64, 0.5);" /%3E%3Cstop offset="100%" style="stop-color:rgba(159, 223, 159, 0.5);" /%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x="0" width="7.26744%" height="100%"/%3E%3Crect x="8.43023%" width="7.26744%" height="100%"/%3E%3Crect x="16.86047%" width="7.26744%" height="100%"/%3E%3Crect x="25.2907%" width="7.26744%" height="100%"/%3E%3Crect x="33.72093%" width="7.26744%" height="100%"/%3E%3Crect x="42.15116%" width="7.26744%" height="100%"/%3E%3Crect x="50.5814%" width="7.26744%" height="100%"/%3E%3Crect x="59.01163%" width="7.26744%" height="100%"/%3E%3Crect x="67.44186%" width="7.26744%" height="100%"/%3E%3Crect x="75.87209%" width="7.26744%" height="100%"/%3E%3Crect x="84.30233%" width="7.26744%" height="100%"/%3E%3Crect x="92.73256%" width="7.26744%" height="100%"/%3E%3C/svg%3E') no-repeat scroll;
  }
}

/** Styles **/
body {
  overflow-x: hidden;
}

.header {
  background-color: rgba(0, 0, 0, 0.7);
  height: 75px;
}

.title {
  margin: 0;
}

.pageAccueil {
  font-family: crimsonTextBold, serif;
  color: white;
  background: url("../images/bg_accueil_w800.jpg") no-repeat center center fixed;
  background-size: cover;
}

@media (min-width: 851px) {
  .pageAccueil {
    background: url("../images/bg_accueil_w1280.jpg") no-repeat center center fixed;
    background-size: cover;
  }
}

@media (min-width: 1000px) {
  .pageAccueil {
    background: url("../images/bg_accueil_w2560.jpg") no-repeat center center fixed;
    background-size: cover;
  }
}

.containerAccueil {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media (min-width: 551px) {
  .containerAccueil {
    -webkit-box-align: end;
    -ms-flex-align: end;
    align-items: flex-end;
  }
}

@media (min-width: 851px) {
  .containerAccueil {
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }
}

.containerAccueil .titre {
  margin: 2rem 0 0 0;
  color: #000000;
  font-size: 26px;
  font-size: 2.6rem;
}

@media (min-width: 551px) {
  .containerAccueil .titre {
    font-size: 34px;
    font-size: 3.4rem;
    width: 73.68421%;
  }
}

@media (min-width: 851px) {
  .containerAccueil .titre {
    font-size: 36px;
    font-size: 3.6rem;
    width: 49.15254%;
    margin-right: 8.47458%;
  }
}

@media (min-width: 1000px) {
  .containerAccueil .titre {
    width: 40.67797%;
  }
}

.containerAccueil .introduction {
  display: block;
  line-height: 26px;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 1rem 2rem;
  margin: 5rem -2rem;
  font-size: 16px;
  font-size: 1.6rem;
}

.containerAccueil .introduction p {
  padding-right: 4rem;
  padding-left: 1rem;
}

.containerAccueil .introduction p:first-child {
  margin-bottom: 2rem;
}

@media (min-width: 551px) {
  .containerAccueil .introduction {
    width: 76.31579%;
    padding-right: 2rem;
  }
}

@media (min-width: 851px) {
  .containerAccueil .introduction {
    padding-right: 6.77966%;
    margin: 5rem 0;
    width: 57.62712%;
  }
}

@media (min-width: 1000px) {
  .containerAccueil .introduction {
    width: 40.67797%;
    padding-right: 0;
    margin-right: 8.47458%;
  }
}

@media (min-width: 851px) {
  .containerAccueil .btnSoumettre {
    margin-right: 8.47458%;
  }
}

.bg_quiz {
  background: url("../images/bg_quiz.jpg") no-repeat;
  background-size: cover;
}

.pageQuiz {
  position: relative;
  font-family: crimsonText, serif;
  text-align: center;
}

@media (min-width: 851px) {
  .pageQuiz {
    text-align: left;
  }
}

.pageQuiz .indicateurQuestion,
.pageQuiz .zonePointage {
  font-family: cinzelDecorative, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-size: 14px;
  font-size: 1.4rem;
}

.pageQuiz .indicateurQuestion {
  text-align: center;
}

.pageQuiz .zonePointage {
  text-align: right;
  margin: auto 1rem;
}

.pageQuiz .instructionQuestion {
  margin: 0;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.pageQuiz .icone-pouch {
  display: inline-block;
  background: url("../images/icones/pouch_ico.svg") no-repeat;
  width: 2.5rem;
}

.pageQuiz fieldset {
  border: none;
  padding: 0;
  margin: 0;
}

@media (min-width: 851px) {
  .pageQuiz fieldset .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .pageQuiz fieldset .flex .flexitem {
    width: 40.67797%;
  }
}

.pageQuiz .question {
  font-family: crimsonTextBold, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 451px) {
  .pageQuiz .question {
    font-size: 26px;
    font-size: 2.6rem;
  }
}

@media (min-width: 851px) {
  .pageQuiz .question {
    width: 79.16667%;
  }
}

.pageQuiz .q1 .imgQuestion img {
  border: solid 2px #686868;
  width: 100%;
}

@media (min-width: 551px) {
  .pageQuiz .q1 .imgQuestion img {
    width: 47.36842%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .q1 .imgQuestion img {
    width: 79.16667%;
  }
}

.pageQuiz .choixReponses {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  list-style: none;
  text-align: left;
  padding: 0;
}

@media (min-width: 851px) {
  .pageQuiz .choixReponses {
    display: block;
  }
}

.pageQuiz .choixReponses .choix {
  border: 2px solid #686868;
  background-color: rgba(255, 255, 255, 0.5);
  margin-bottom: 0.5rem;
  width: 100%;
}

@media (min-width: 551px) {
  .pageQuiz .choixReponses .choix {
    width: 57.89474%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .choixReponses .choix {
    width: 100%;
  }
}

.pageQuiz .choixReponses .choix:hover {
  -webkit-box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.16);
  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.16);
}

.pageQuiz .choixReponses .choix .label {
  display: inline-block;
  width: 100%;
  padding: 20px 0;
}

.pageQuiz .choixReponses .choix .label span {
  padding-left: 26.31579%;
}

.pageQuiz .choixReponses .choix .input {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.pageQuiz .choixReponses .choix .input.focusable:active, .pageQuiz .choixReponses .choix .input.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}

@media (min-width: 851px) {
  .pageQuiz .reponse {
    width: 40.67797%;
  }
}

.pageQuiz .reponse .retroaction {
  margin-top: 0;
}

.pageQuiz .reponse .flex {
  display: block;
  font-size: 16px;
  font-size: 1.6rem;
  text-align: center;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin: auto;
    width: 73.68421%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .flex {
    width: 100%;
  }
}

.pageQuiz .reponse .flex .explication {
  text-align: left;
  font-family: crimsonTextBold, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.pageQuiz .reponse .flex .explication p {
  margin: 0 0 1rem 0;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .explication {
    width: 64.28571%;
  }
}

.pageQuiz .reponse .flex .imgReponse img {
  width: 47.36842%;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .imgReponse img {
    width: 100%;
  }
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .imgReponse {
    width: 28.57143%;
    margin-right: 5.26316%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .flex .imgReponse {
    width: 37.5%;
  }
}

@media (min-width: 551px) {
  .pageQuiz .reponse .btn_next {
    margin-left: 52.63158%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .btn_next {
    width: 58.33333%;
    margin-left: 41.66667%;
  }
}

.footer {
  display: block;
  width: 100%;
}

.footer .creditPhoto {
  color: #FFFFFF;
  font-size: 10px;
  font-size: 1rem;
  font-family: Cabin, Helvetica, sans-serif;
}

.footer .creditPhoto a {
  text-decoration: none;
}

.footer .fond {
  text-align: center;
  background-color: #000000;
  color: #B2B2B2;
  font-family: Cabin, Helvetica, sans-serif;
  padding: 0.25rem;
  font-size: 12px;
  font-size: 1.2rem;
}

.footer .fond .attributions {
  display: block;
  color: #B2B2B2;
  font-family: Cabin, Helvetica, sans-serif;
  font-size: 10px;
  font-size: 1rem;
}

.pageAccueil .footer {
  position: fixed;
  bottom: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
