@charset "UTF-8";
/**** BIBLIOTHÈQUES (dans le dossier bower_components) ****/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/**** utilitaires ****/
/**
 * @author Rose Provencher
 * ------------------
 * TABLE DES MATIÈRES
 * ------------------
 *
 * Polices de caractères
 * Palette de couleurs
 * Points de rupture
 **/
/** Polices de caractère **/
@font-face {
  font-family: 'cinzelDecorative';
  src: url("../polices/CinzelDecorative-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'crimsonTextBold';
  src: url("../polices/CrimsonText-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'crimsonText';
  src: url("../polices/CrimsonText-SemiBold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/** Palette de couleurs **/
/** Points de rupture **/
/******** Utilitaires de base (BoxSizing, Clearfix) *********/
/* BoxSizing */
/* Clearfix: pour contrer le problème des enfants flottants*/
.cf:after {
  content: " ";
  display: table;
  clear: both;
}

/******** Utilitaires pour accessibilité *********/
.visuallyhidden,
.screen-reader-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus,
.screen-reader-only.focusable:active,
.screen-reader-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}

/******** Utilitaires pour typographie *********/
/********* Mixins généraux *********/
/**** base (typo) ****/
/**
* --------------------------------------------------------
* TABLE DES MATIÈRES - Typographie responsive (Mobile First)
* --------------------------------------------------------
* Base décimale
* Hiérarchie responsive
*/
/** Base décimale **/
html {
  font-size: 62.5%;
}

body {
  /* 16px pour toutes les largeurs d'écran */
  font-size: 18px;
  font-size: 1.8rem;
  /* facteur multiplicateur de la taille de la police 1.375x16 = 22 */
  line-height: 1.375;
}

@media (min-width: 551px) {
  body {
    font-size: 18px;
    font-size: 1.8rem;
    line-height: 1.5;
  }
}

@media (min-width: 1000px) {
  body {
    line-height: 1.75;
  }
}

/** Hiérarchie responsive **/
/*  plus proche = plus petit  &  plus loin = plus grand */
/* TITRES NIVEAU 1 */
h1,
.h1 {
  /* = 32px */
  font-size: 20px;
  font-size: 2rem;
}

@media (min-width: 551px) {
  h1,
  .h1 {
    /* = 40px */
    font-size: 26px;
    font-size: 2.6rem;
  }
}

/* TITRES NIVEAU 2 */
h2,
.h2 {
  /* = 24px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h2,
  .h2 {
    /* = 32px */
    font-size: 24px;
    font-size: 2.4rem;
  }
}

/* TITRES NIVEAU 3 */
h3,
.h3 {
  /* = 18px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h3,
  .h3 {
    /* = 24px */
    font-size: 20px;
    font-size: 2rem;
  }
}

/* TITRES NIVEAU 4 */
h4,
.h4 {
  /* = 16px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h4,
  .h4 {
    /* = 18px */
    font-size: 18px;
    font-size: 1.8rem;
  }
}

/**** modules ****/
/*!
 * animate.css -http://daneden.me/animate
 * Version - 3.7.0
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 *
 * Copyright (c) 2018 Daniel Eden
 * Animations are slightly modified from the original.
 */
@-webkit-keyframes pulse {
  0%, 86%, 92%, 100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  89%, 96% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
}
@keyframes pulse {
  0%, 86%, 92%, 100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  89%, 96% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    -webkit-transition: all 1.5s ease;
    transition: all 1.5s ease;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    -webkit-transition: all 1.5s ease;
    transition: all 1.5s ease;
  }
  to {
    opacity: 1;
  }
}

@-webkit-keyframes slideInRight {
  from {
    opacity: 0;
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    -webkit-transition: all 2s ease;
    transition: all 2s ease;
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    -webkit-transition: all 2s ease;
    transition: all 2s ease;
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}

.pageAccueil {
  overflow-x: hidden;
}

.pageAccueil .titre {
  -webkit-animation: fadeIn 2s;
  animation: fadeIn 2s;
}

.pageAccueil .introduction {
  opacity: 0;
  -webkit-animation: slideInRight 1s 1.5s;
  animation: slideInRight 1s 1.5s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.pageAccueil .btnSoumettre {
  opacity: 0;
  -webkit-animation: fadeIn 1.5s 2.5s, pulse 6.5s 9s infinite;
  animation: fadeIn 1.5s 2.5s, pulse 6.5s 9s infinite;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.titre {
  margin: 0;
  font-family: cinzelDecorative, serif;
  color: #FFFFFF;
  text-decoration: none;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.titre .zelda {
  color: #D32121;
  display: block;
}

.bouton {
  display: block;
  background-color: rgba(0, 0, 0, 0.7);
  border: 1px solid #FFFFFF;
  color: #FFFFFF;
  font-family: cinzelDecorative, serif;
  text-decoration: none;
  text-align: center;
  padding: 14px 0;
  font-size: 16px;
  font-size: 1.6rem;
  width: 100%;
  -webkit-transition: all, 200ms ease;
  transition: all, 200ms ease;
}

@media (min-width: 551px) {
  .bouton {
    width: 47.36842%;
  }
}

@media (min-width: 851px) {
  .bouton {
    width: 23.72881%;
  }
}

.bouton:hover, .bouton:focus {
  outline: none;
  -webkit-box-shadow: 0 0 0.6rem #FFFFFF;
  box-shadow: 0 0 0.6rem #FFFFFF;
}

.imgQuestion img {
  width: 47.36842%;
}

@media (min-width: 851px) {
  .imgQuestion img {
    width: 32.20339%;
  }
}

img {
  width: 100%;
}

/***** MISE EN PAGE SUSY ******/
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@media (max-width: 850px) {
  .conteneur {
    min-width: 305px;
    padding: 0 2.63158%;
    background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="url(%23susy-svg-gradient)" width="100%" %3E%3Cdefs%3E%3ClinearGradient spreadMethod="pad" id="susy-svg-gradient" x1="0%" y1="0%" x2="100%" y2="0%"%3E%3Cstop offset="0%" style="stop-color:rgba(64, 191, 64, 0.5);" /%3E%3Cstop offset="100%" style="stop-color:rgba(159, 223, 159, 0.5);" /%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x="2.08333%" width="20.83333%" height="100%"/%3E%3Crect x="27.08333%" width="20.83333%" height="100%"/%3E%3Crect x="52.08333%" width="20.83333%" height="100%"/%3E%3Crect x="77.08333%" width="20.83333%" height="100%"/%3E%3C/svg%3E') no-repeat scroll;
  }
}

@media (min-width: 851px) {
  .conteneur {
    max-width: 1280px;
    margin: 0 auto;
    background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" fill="url(%23susy-svg-gradient)" width="100%" %3E%3Cdefs%3E%3ClinearGradient spreadMethod="pad" id="susy-svg-gradient" x1="0%" y1="0%" x2="100%" y2="0%"%3E%3Cstop offset="0%" style="stop-color:rgba(64, 191, 64, 0.5);" /%3E%3Cstop offset="100%" style="stop-color:rgba(159, 223, 159, 0.5);" /%3E%3C/linearGradient%3E%3C/defs%3E%3Crect x="0" width="7.26744%" height="100%"/%3E%3Crect x="8.43023%" width="7.26744%" height="100%"/%3E%3Crect x="16.86047%" width="7.26744%" height="100%"/%3E%3Crect x="25.2907%" width="7.26744%" height="100%"/%3E%3Crect x="33.72093%" width="7.26744%" height="100%"/%3E%3Crect x="42.15116%" width="7.26744%" height="100%"/%3E%3Crect x="50.5814%" width="7.26744%" height="100%"/%3E%3Crect x="59.01163%" width="7.26744%" height="100%"/%3E%3Crect x="67.44186%" width="7.26744%" height="100%"/%3E%3Crect x="75.87209%" width="7.26744%" height="100%"/%3E%3Crect x="84.30233%" width="7.26744%" height="100%"/%3E%3Crect x="92.73256%" width="7.26744%" height="100%"/%3E%3C/svg%3E') no-repeat scroll;
  }
}

/** Styles **/
body {
  overflow-x: hidden;
}

.header {
  background-color: rgba(0, 0, 0, 0.7);
  height: 75px;
}

.title {
  margin: 0;
}

.pageAccueil {
  overflow-x: hidden;
  font-family: crimsonTextBold, serif;
  color: white;
  background: url("../images/bg_accueil_w800.jpg") no-repeat center center fixed;
  background-size: cover;
}

@media (min-width: 851px) {
  .pageAccueil {
    background: url("../images/bg_accueil_w1280.jpg") no-repeat center center fixed;
    background-size: cover;
  }
}

@media (min-width: 1000px) {
  .pageAccueil {
    background: url("../images/bg_accueil_w2560.jpg") no-repeat center center fixed;
    background-size: cover;
  }
}

.containerAccueil {
  overflow-x: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media (min-width: 551px) {
  .containerAccueil {
    -webkit-box-align: end;
    -ms-flex-align: end;
    align-items: flex-end;
  }
}

@media (min-width: 851px) {
  .containerAccueil {
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }
}

.containerAccueil .titre {
  margin: 3rem 0 0 0;
  color: #000000;
  font-size: 26px;
  font-size: 2.6rem;
}

@media (min-width: 551px) {
  .containerAccueil .titre {
    font-size: 34px;
    font-size: 3.4rem;
    width: 73.68421%;
  }
}

@media (min-width: 851px) {
  .containerAccueil .titre {
    font-size: 36px;
    font-size: 3.6rem;
    width: 49.15254%;
  }
}

.containerAccueil .introduction {
  display: block;
  line-height: 26px;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 1rem 2rem;
  margin: 5rem -2rem;
  font-size: 16px;
  font-size: 1.6rem;
}

.containerAccueil .introduction p {
  padding-right: 4rem;
  padding-left: 1rem;
}

.containerAccueil .introduction p:first-child {
  margin-bottom: 2rem;
}

@media (min-width: 551px) {
  .containerAccueil .introduction {
    width: 76.31579%;
    padding-right: 2rem;
  }
}

@media (min-width: 851px) {
  .containerAccueil .introduction {
    padding-right: 6.77966%;
    margin: 5rem 0;
    width: 49.15254%;
  }
}

@media (min-width: 851px) {
  .containerAccueil .btnSoumettre {
    margin-right: 8.47458%;
  }
}

.bg_quiz {
  background: url("../images/bg_quiz.jpg") no-repeat center center fixed;
  background-size: cover;
}

.pageQuiz {
  position: relative;
  font-family: crimsonText, serif;
  text-align: center;
}

@media (min-width: 851px) {
  .pageQuiz {
    text-align: left;
  }
}

.pageQuiz .indicateurQuestion,
.pageQuiz .zonePointage {
  font-family: cinzelDecorative, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-size: 14px;
  font-size: 1.4rem;
}

.pageQuiz .indicateurQuestion {
  text-align: center;
}

.pageQuiz .zonePointage {
  text-align: right;
  margin: auto 1rem;
}

.pageQuiz .instructionQuestion {
  margin: 0;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.pageQuiz .icone-pouch {
  display: inline-block;
  background: url("../images/icones/pouch_ico.svg") no-repeat;
  width: 2.5rem;
}

.pageQuiz fieldset {
  border: none;
  padding: 0;
  margin: 0;
}

@media (min-width: 851px) {
  .pageQuiz fieldset .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .pageQuiz fieldset .flex .flexitem {
    width: 40.67797%;
  }
}

.pageQuiz .question {
  font-family: crimsonTextBold, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 451px) {
  .pageQuiz .question {
    font-size: 26px;
    font-size: 2.6rem;
  }
}

@media (min-width: 851px) {
  .pageQuiz .question {
    width: 79.16667%;
  }
}

.pageQuiz .q1 .imgQuestion img {
  border: solid 2px #686868;
  width: 100%;
}

@media (min-width: 551px) {
  .pageQuiz .q1 .imgQuestion img {
    width: 47.36842%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .q1 .imgQuestion img {
    width: 79.16667%;
  }
}

.pageQuiz .choixReponses {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  list-style: none;
  text-align: left;
  padding: 0;
}

@media (min-width: 851px) {
  .pageQuiz .choixReponses {
    display: block;
  }
}

.pageQuiz .choixReponses .choix {
  border: 2px solid #686868;
  background-color: rgba(255, 255, 255, 0.5);
  margin-bottom: 0.5rem;
  width: 100%;
}

@media (min-width: 551px) {
  .pageQuiz .choixReponses .choix {
    width: 57.89474%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .choixReponses .choix {
    width: 100%;
  }
}

.pageQuiz .choixReponses .choix:hover {
  -webkit-box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.16);
  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.16);
}

.pageQuiz .choixReponses .choix .label {
  display: inline-block;
  width: 100%;
  padding: 20px 0;
}

.pageQuiz .choixReponses .choix .label span {
  padding-left: 26.31579%;
}

.pageQuiz .choixReponses .choix .input {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.pageQuiz .choixReponses .choix .input.focusable:active, .pageQuiz .choixReponses .choix .input.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}

@media (min-width: 851px) {
  .pageQuiz .reponse {
    width: 40.67797%;
    margin-left: 50.84746%;
  }
}

.pageQuiz .reponse .retroaction {
  margin-top: 0;
}

.pageQuiz .reponse .flex {
  display: block;
  font-size: 16px;
  font-size: 1.6rem;
  text-align: center;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin: auto;
    width: 73.68421%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .flex {
    width: 100%;
  }
}

.pageQuiz .reponse .flex .explication {
  text-align: left;
  font-family: crimsonTextBold, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.pageQuiz .reponse .flex .explication p {
  margin: 0 0 1rem 0;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .explication {
    width: 64.28571%;
  }
}

.pageQuiz .reponse .flex .imgReponse img {
  width: 47.36842%;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .imgReponse img {
    width: 100%;
  }
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .imgReponse {
    width: 28.57143%;
    margin-right: 5.26316%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .flex .imgReponse {
    width: 37.5%;
  }
}

.pageQuiz .reponse .btn_next,
.pageQuiz .reponse .btn_soumettre {
  margin-top: 1.5rem;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .btn_next,
  .pageQuiz .reponse .btn_soumettre {
    margin-left: 52.63158%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .btn_next,
  .pageQuiz .reponse .btn_soumettre {
    width: 58.33333%;
    margin-left: 41.66667%;
  }
}

.footer {
  display: block;
  width: 100%;
}

.footer .creditPhoto {
  color: #FFFFFF;
  font-size: 10px;
  font-size: 1rem;
  font-family: Cabin, Helvetica, sans-serif;
}

.footer .creditPhoto a {
  text-decoration: none;
}

.footer .fond {
  text-align: center;
  background-color: #000000;
  color: #B2B2B2;
  font-family: Cabin, Helvetica, sans-serif;
  padding: 0.25rem;
  font-size: 12px;
  font-size: 1.2rem;
}

.footer .fond .attributions {
  display: block;
  color: #B2B2B2;
  font-family: Cabin, Helvetica, sans-serif;
  font-size: 10px;
  font-size: 1rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5jc3MiLCJzdHlsZXMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtY3NzL25vcm1hbGl6ZS5zY3NzIiwidXRpbGl0YWlyZXMvX3ZhcmlhYmxlcy5zY3NzIiwidXRpbGl0YWlyZXMvX21peGlucy5zY3NzIiwiYmFzZS9fdHlwby5zY3NzIiwibW9kdWxlcy9fYW5pbWF0aW9ucy5zY3NzIiwibW9kdWxlcy9fZ2VuZXJhbC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L19zdS1tYXRoLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCLDREQUE0RDtBQ0E1RCw0RUFBNEU7QUFFNUU7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVIO0VBQ0Usa0JBQWlCO0VBQUUsT0FBTztFQUMxQiwrQkFBOEI7RUFBRSxPQUFPO0NBQ3hDOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsVUFBUztDQUNWOztBQUVEOztHQUVHO0FBRUg7RUFDRSxlQUFjO0NBQ2Y7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxlQUFjO0VBQ2QsaUJBQWdCO0NBQ2pCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLGdDQUF1QjtFQUF2Qix3QkFBdUI7RUFBRSxPQUFPO0VBQ2hDLFVBQVM7RUFBRSxPQUFPO0VBQ2xCLGtCQUFpQjtFQUFFLE9BQU87Q0FDM0I7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPO0NBQ3hCOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQTZCO0NBQzlCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0Usb0JBQW1CO0VBQUUsT0FBTztFQUM1QiwyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLDBDQUFpQztFQUFqQyxrQ0FBaUM7RUFBRSxPQUFPO0NBQzNDOztBQUVEOztHQUVHO0FBRUg7O0VB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MXhCRDtFQTJKUSxpQkFBZ0I7RUFDaEIsb0NFcFQwQjtFRnFUMUIsMENFblN5QjtDRjZTMUI7O0FBdktQO0VBK0pVLG1CQUFpQjtDQUNsQjs7QUFDRDtFQWpLUjtJQWtLVSxpQk8vUHNDO0dQb1F6QztDRG1vQk47O0FDMXlCRDtFQTJLVSxpQk94UXNDO0NQNFF2Qzs7QUFIQztFQTVLVjtJQTZLWSxZQUFVO0dBRWI7Q0Rxb0JSOztBQ3BvQk87RUFoTFI7SUFpTFUsaUJPOVFzQztJUCtRdEMsdUJPNU5pQztHUGlPcEM7Q0Rvb0JOOztBQ3ZvQk87RUFwTFI7SUFxTFUsYU9sUnNDO0dQb1J6QztDRDBvQk47O0FDajBCRDs7RUE0TE0sbUJBQWlCO0NBU2xCOztBQVJDO0VBN0xOOztJQThMUSx1Qk8zUndDO0dQa1MzQztDRHdvQko7O0FDN29CSztFQWhNTjs7SUFrTVEsaUJPL1J3QztJUGdTeEMsdUJPaFN3QztHUGtTM0M7Q0RncEJKOztBQzNvQkQ7RUFDRSxlQUFhO0VBQ2IsWUFBVTtDQTJCWDs7QUE3QkQ7RUFLSSxlRTlWVztFQzBCYixnQkh3VXdCO0VHdlV4QixnQkFMeUI7RUg2VXZCLDBDQUF5QztDQUMxQzs7QUFYSDtFQU9NLHNCQUFxQjtDQUN0Qjs7QUFSTDtFQWNJLG1CQUFrQjtFQUNsQiwwQkV6V1U7RUYwV1YsZUFBYztFQUNkLDBDQUF5QztFQUN6QyxpQkFBZTtFR2pWakIsZ0JIa1Z3QjtFR2pWeEIsa0JBTHlCO0NIOFZ4Qjs7QUEzQkg7RUFzQk0sZUFBYTtFQUNiLGVBQWM7RUFDZCwwQ0FBeUM7RUd2VjdDLGdCSHdWMEI7RUd2VjFCLGdCQUx5QjtDSDZWdEIiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qKioqIEJJQkxJT1RIw4hRVUVTIChkYW5zIGxlIGRvc3NpZXIgYm93ZXJfY29tcG9uZW50cykgKioqKi9cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqKiogdXRpbGl0YWlyZXMgKioqKi9cbi8qKlxyXG4gKiBAYXV0aG9yIFJvc2UgUHJvdmVuY2hlclxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICogVEFCTEUgREVTIE1BVEnDiFJFU1xyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICpcclxuICogUG9saWNlcyBkZSBjYXJhY3TDqHJlc1xyXG4gKiBQYWxldHRlIGRlIGNvdWxldXJzXHJcbiAqIFBvaW50cyBkZSBydXB0dXJlXHJcbiAqKi9cbi8qKiBQb2xpY2VzIGRlIGNhcmFjdMOocmUgKiovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdjaW56ZWxEZWNvcmF0aXZlJztcbiAgc3JjOiB1cmwoXCIuLi9wb2xpY2VzL0NpbnplbERlY29yYXRpdmUtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnY3JpbXNvblRleHRCb2xkJztcbiAgc3JjOiB1cmwoXCIuLi9wb2xpY2VzL0NyaW1zb25UZXh0LUJvbGQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2NyaW1zb25UZXh0JztcbiAgc3JjOiB1cmwoXCIuLi9wb2xpY2VzL0NyaW1zb25UZXh0LVNlbWlCb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4vKiogUGFsZXR0ZSBkZSBjb3VsZXVycyAqKi9cbi8qKiBQb2ludHMgZGUgcnVwdHVyZSAqKi9cbi8qKioqKioqKiBVdGlsaXRhaXJlcyBkZSBiYXNlIChCb3hTaXppbmcsIENsZWFyZml4KSAqKioqKioqKiovXG4vKiBCb3hTaXppbmcgKi9cbi8qIENsZWFyZml4OiBwb3VyIGNvbnRyZXIgbGUgcHJvYmzDqG1lIGRlcyBlbmZhbnRzIGZsb3R0YW50cyovXG4uY2Y6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4vKioqKioqKiogVXRpbGl0YWlyZXMgcG91ciBhY2Nlc3NpYmlsaXTDqSAqKioqKioqKiovXG4udmlzdWFsbHloaWRkZW4sXG4uc2NyZWVuLXJlYWRlci1vbmx5IHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAxcHg7XG59XG5cbi52aXN1YWxseWhpZGRlbi5mb2N1c2FibGU6YWN0aXZlLCAudmlzdWFsbHloaWRkZW4uZm9jdXNhYmxlOmZvY3VzLFxuLnNjcmVlbi1yZWFkZXItb25seS5mb2N1c2FibGU6YWN0aXZlLFxuLnNjcmVlbi1yZWFkZXItb25seS5mb2N1c2FibGU6Zm9jdXMge1xuICBjbGlwOiBhdXRvO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbjogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKioqKioqKiogVXRpbGl0YWlyZXMgcG91ciB0eXBvZ3JhcGhpZSAqKioqKioqKiovXG4vKioqKioqKioqIE1peGlucyBnw6luw6lyYXV4ICoqKioqKioqKi9cbi8qKioqIGJhc2UgKHR5cG8pICoqKiovXG4vKipcclxuKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4qIFRBQkxFIERFUyBNQVRJw4hSRVMgLSBUeXBvZ3JhcGhpZSByZXNwb25zaXZlIChNb2JpbGUgRmlyc3QpXHJcbiogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuKiBCYXNlIGTDqWNpbWFsZVxyXG4qIEhpw6lyYXJjaGllIHJlc3BvbnNpdmVcclxuKi9cbi8qKiBCYXNlIGTDqWNpbWFsZSAqKi9cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgLyogMTZweCBwb3VyIHRvdXRlcyBsZXMgbGFyZ2V1cnMgZCfDqWNyYW4gKi9cbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgLyogZmFjdGV1ciBtdWx0aXBsaWNhdGV1ciBkZSBsYSB0YWlsbGUgZGUgbGEgcG9saWNlIDEuMzc1eDE2ID0gMjIgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMzc1O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICBib2R5IHtcbiAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgfVxufVxuXG4vKiogSGnDqXJhcmNoaWUgcmVzcG9uc2l2ZSAqKi9cbi8qICBwbHVzIHByb2NoZSA9IHBsdXMgcGV0aXQgICYgIHBsdXMgbG9pbiA9IHBsdXMgZ3JhbmQgKi9cbi8qIFRJVFJFUyBOSVZFQVUgMSAqL1xuaDEsXG4uaDEge1xuICAvKiA9IDMycHggKi9cbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXNpemU6IDJyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICBoMSxcbiAgLmgxIHtcbiAgICAvKiA9IDQwcHggKi9cbiAgICBmb250LXNpemU6IDI2cHg7XG4gICAgZm9udC1zaXplOiAyLjZyZW07XG4gIH1cbn1cblxuLyogVElUUkVTIE5JVkVBVSAyICovXG5oMixcbi5oMiB7XG4gIC8qID0gMjRweCAqL1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgaDIsXG4gIC5oMiB7XG4gICAgLyogPSAzMnB4ICovXG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICB9XG59XG5cbi8qIFRJVFJFUyBOSVZFQVUgMyAqL1xuaDMsXG4uaDMge1xuICAvKiA9IDE4cHggKi9cbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIGgzLFxuICAuaDMge1xuICAgIC8qID0gMjRweCAqL1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbn1cblxuLyogVElUUkVTIE5JVkVBVSA0ICovXG5oNCxcbi5oNCB7XG4gIC8qID0gMTZweCAqL1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgaDQsXG4gIC5oNCB7XG4gICAgLyogPSAxOHB4ICovXG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG59XG5cbi8qKioqIG1vZHVsZXMgKioqKi9cbi8qIVxyXG4gKiBhbmltYXRlLmNzcyAtaHR0cDovL2RhbmVkZW4ubWUvYW5pbWF0ZVxyXG4gKiBWZXJzaW9uIC0gMy43LjBcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIC0gaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggRGFuaWVsIEVkZW5cclxuICogQW5pbWF0aW9ucyBhcmUgc2xpZ2h0bHkgbW9kaWZpZWQgZnJvbSB0aGUgb3JpZ2luYWwuXHJcbiAqL1xuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlLCA4NiUsIDkyJSwgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMSwgMSwgMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xuICB9XG4gIDg5JSwgOTYlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgxLjA1LCAxLjA1LCAxLjA1KTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4wNSwgMS4wNSwgMS4wNSk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjVzIGVhc2U7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBzbGlkZUluUmlnaHQge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDEwMCUsIDApO1xuICAgIHRyYW5zaXRpb246IGFsbCAycyBlYXNlO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xuICB9XG59XG5cbi5wYWdlQWNjdWVpbCB7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLnBhZ2VBY2N1ZWlsIC50aXRyZSB7XG4gIGFuaW1hdGlvbjogZmFkZUluIDJzO1xufVxuXG4ucGFnZUFjY3VlaWwgLmludHJvZHVjdGlvbiB7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogc2xpZGVJblJpZ2h0IDFzIDEuNXM7XG4gIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuLnBhZ2VBY2N1ZWlsIC5idG5Tb3VtZXR0cmUge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IGZhZGVJbiAxLjVzIDIuNXMsIHB1bHNlIDYuNXMgOXMgaW5maW5pdGU7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xufVxuXG4udGl0cmUge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtZmFtaWx5OiBjaW56ZWxEZWNvcmF0aXZlLCBzZXJpZjtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbi50aXRyZSAuemVsZGEge1xuICBjb2xvcjogI0QzMjEyMTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ib3V0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBib3JkZXI6IDFweCBzb2xpZCAjRkZGRkZGO1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgZm9udC1mYW1pbHk6IGNpbnplbERlY29yYXRpdmUsIHNlcmlmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMTRweCAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNpdGlvbjogYWxsLCAyMDBtcyBlYXNlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLmJvdXRvbiB7XG4gICAgd2lkdGg6IDQ3LjM2ODQyJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLmJvdXRvbiB7XG4gICAgd2lkdGg6IDIzLjcyODgxJTtcbiAgfVxufVxuXG4uYm91dG9uOmhvdmVyLCAuYm91dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogMCAwIDAuNnJlbSAjRkZGRkZGO1xufVxuXG4uaW1nUXVlc3Rpb24gaW1nIHtcbiAgd2lkdGg6IDQ3LjM2ODQyJTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5pbWdRdWVzdGlvbiBpbWcge1xuICAgIHdpZHRoOiAzMi4yMDMzOSU7XG4gIH1cbn1cblxuaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qKioqKiBNSVNFIEVOIFBBR0UgU1VTWSAqKioqKiovXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDg1MHB4KSB7XG4gIC5jb250ZW5ldXIge1xuICAgIG1pbi13aWR0aDogMzA1cHg7XG4gICAgcGFkZGluZzogMCAyLjYzMTU4JTtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJ2RhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJ1cmwoJTIzc3VzeS1zdmctZ3JhZGllbnQpXCIgd2lkdGg9XCIxMDAlXCIgJTNFJTNDZGVmcyUzRSUzQ2xpbmVhckdyYWRpZW50IHNwcmVhZE1ldGhvZD1cInBhZFwiIGlkPVwic3VzeS1zdmctZ3JhZGllbnRcIiB4MT1cIjAlXCIgeTE9XCIwJVwiIHgyPVwiMTAwJVwiIHkyPVwiMCVcIiUzRSUzQ3N0b3Agb2Zmc2V0PVwiMCVcIiBzdHlsZT1cInN0b3AtY29sb3I6cmdiYSg2NCwgMTkxLCA2NCwgMC41KTtcIiAvJTNFJTNDc3RvcCBvZmZzZXQ9XCIxMDAlXCIgc3R5bGU9XCJzdG9wLWNvbG9yOnJnYmEoMTU5LCAyMjMsIDE1OSwgMC41KTtcIiAvJTNFJTNDL2xpbmVhckdyYWRpZW50JTNFJTNDL2RlZnMlM0UlM0NyZWN0IHg9XCIyLjA4MzMzJVwiIHdpZHRoPVwiMjAuODMzMzMlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQ3JlY3QgeD1cIjI3LjA4MzMzJVwiIHdpZHRoPVwiMjAuODMzMzMlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQ3JlY3QgeD1cIjUyLjA4MzMzJVwiIHdpZHRoPVwiMjAuODMzMzMlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQ3JlY3QgeD1cIjc3LjA4MzMzJVwiIHdpZHRoPVwiMjAuODMzMzMlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQy9zdmclM0UnKSBuby1yZXBlYXQgc2Nyb2xsO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAuY29udGVuZXVyIHtcbiAgICBtYXgtd2lkdGg6IDEyODBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJ2RhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGZpbGw9XCJ1cmwoJTIzc3VzeS1zdmctZ3JhZGllbnQpXCIgd2lkdGg9XCIxMDAlXCIgJTNFJTNDZGVmcyUzRSUzQ2xpbmVhckdyYWRpZW50IHNwcmVhZE1ldGhvZD1cInBhZFwiIGlkPVwic3VzeS1zdmctZ3JhZGllbnRcIiB4MT1cIjAlXCIgeTE9XCIwJVwiIHgyPVwiMTAwJVwiIHkyPVwiMCVcIiUzRSUzQ3N0b3Agb2Zmc2V0PVwiMCVcIiBzdHlsZT1cInN0b3AtY29sb3I6cmdiYSg2NCwgMTkxLCA2NCwgMC41KTtcIiAvJTNFJTNDc3RvcCBvZmZzZXQ9XCIxMDAlXCIgc3R5bGU9XCJzdG9wLWNvbG9yOnJnYmEoMTU5LCAyMjMsIDE1OSwgMC41KTtcIiAvJTNFJTNDL2xpbmVhckdyYWRpZW50JTNFJTNDL2RlZnMlM0UlM0NyZWN0IHg9XCIwXCIgd2lkdGg9XCI3LjI2NzQ0JVwiIGhlaWdodD1cIjEwMCVcIi8lM0UlM0NyZWN0IHg9XCI4LjQzMDIzJVwiIHdpZHRoPVwiNy4yNjc0NCVcIiBoZWlnaHQ9XCIxMDAlXCIvJTNFJTNDcmVjdCB4PVwiMTYuODYwNDclXCIgd2lkdGg9XCI3LjI2NzQ0JVwiIGhlaWdodD1cIjEwMCVcIi8lM0UlM0NyZWN0IHg9XCIyNS4yOTA3JVwiIHdpZHRoPVwiNy4yNjc0NCVcIiBoZWlnaHQ9XCIxMDAlXCIvJTNFJTNDcmVjdCB4PVwiMzMuNzIwOTMlXCIgd2lkdGg9XCI3LjI2NzQ0JVwiIGhlaWdodD1cIjEwMCVcIi8lM0UlM0NyZWN0IHg9XCI0Mi4xNTExNiVcIiB3aWR0aD1cIjcuMjY3NDQlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQ3JlY3QgeD1cIjUwLjU4MTQlXCIgd2lkdGg9XCI3LjI2NzQ0JVwiIGhlaWdodD1cIjEwMCVcIi8lM0UlM0NyZWN0IHg9XCI1OS4wMTE2MyVcIiB3aWR0aD1cIjcuMjY3NDQlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQ3JlY3QgeD1cIjY3LjQ0MTg2JVwiIHdpZHRoPVwiNy4yNjc0NCVcIiBoZWlnaHQ9XCIxMDAlXCIvJTNFJTNDcmVjdCB4PVwiNzUuODcyMDklXCIgd2lkdGg9XCI3LjI2NzQ0JVwiIGhlaWdodD1cIjEwMCVcIi8lM0UlM0NyZWN0IHg9XCI4NC4zMDIzMyVcIiB3aWR0aD1cIjcuMjY3NDQlXCIgaGVpZ2h0PVwiMTAwJVwiLyUzRSUzQ3JlY3QgeD1cIjkyLjczMjU2JVwiIHdpZHRoPVwiNy4yNjc0NCVcIiBoZWlnaHQ9XCIxMDAlXCIvJTNFJTNDL3N2ZyUzRScpIG5vLXJlcGVhdCBzY3JvbGw7XG4gIH1cbn1cblxuLyoqIFN0eWxlcyAqKi9cbmJvZHkge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG59XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gIGhlaWdodDogNzVweDtcbn1cblxuLnRpdGxlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4ucGFnZUFjY3VlaWwge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIGZvbnQtZmFtaWx5OiBjcmltc29uVGV4dEJvbGQsIHNlcmlmO1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9iZ19hY2N1ZWlsX3c4MDAuanBnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VBY2N1ZWlsIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvYmdfYWNjdWVpbF93MTI4MC5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gIC5wYWdlQWNjdWVpbCB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2JnX2FjY3VlaWxfdzI1NjAuanBnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbn1cblxuLmNvbnRhaW5lckFjY3VlaWwge1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cbn1cblxuLmNvbnRhaW5lckFjY3VlaWwgLnRpdHJlIHtcbiAgbWFyZ2luOiAzcmVtIDAgMCAwO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1zaXplOiAyNnB4O1xuICBmb250LXNpemU6IDIuNnJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5jb250YWluZXJBY2N1ZWlsIC50aXRyZSB7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGZvbnQtc2l6ZTogMy40cmVtO1xuICAgIHdpZHRoOiA3My42ODQyMSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5jb250YWluZXJBY2N1ZWlsIC50aXRyZSB7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGZvbnQtc2l6ZTogMy42cmVtO1xuICAgIHdpZHRoOiA0OS4xNTI1NCU7XG4gIH1cbn1cblxuLmNvbnRhaW5lckFjY3VlaWwgLmludHJvZHVjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBsaW5lLWhlaWdodDogMjZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gIG1hcmdpbjogNXJlbSAtMnJlbTtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuLmNvbnRhaW5lckFjY3VlaWwgLmludHJvZHVjdGlvbiBwIHtcbiAgcGFkZGluZy1yaWdodDogNHJlbTtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xufVxuXG4uY29udGFpbmVyQWNjdWVpbCAuaW50cm9kdWN0aW9uIHA6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLmNvbnRhaW5lckFjY3VlaWwgLmludHJvZHVjdGlvbiB7XG4gICAgd2lkdGg6IDc2LjMxNTc5JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAycmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCAuaW50cm9kdWN0aW9uIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiA2Ljc3OTY2JTtcbiAgICBtYXJnaW46IDVyZW0gMDtcbiAgICB3aWR0aDogNDkuMTUyNTQlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCAuYnRuU291bWV0dHJlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDguNDc0NTglO1xuICB9XG59XG5cbi5iZ19xdWl6IHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2JnX3F1aXouanBnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ucGFnZVF1aXoge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtZmFtaWx5OiBjcmltc29uVGV4dCwgc2VyaWY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5wYWdlUXVpeiB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuXG4ucGFnZVF1aXogLmluZGljYXRldXJRdWVzdGlvbixcbi5wYWdlUXVpeiAuem9uZVBvaW50YWdlIHtcbiAgZm9udC1mYW1pbHk6IGNpbnplbERlY29yYXRpdmUsIHNlcmlmO1xuICB0ZXh0LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXNpemU6IDEuNHJlbTtcbn1cblxuLnBhZ2VRdWl6IC5pbmRpY2F0ZXVyUXVlc3Rpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5wYWdlUXVpeiAuem9uZVBvaW50YWdlIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIG1hcmdpbjogYXV0byAxcmVtO1xufVxuXG4ucGFnZVF1aXogLmluc3RydWN0aW9uUXVlc3Rpb24ge1xuICBtYXJnaW46IDA7XG4gIHRleHQtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4ucGFnZVF1aXogLmljb25lLXBvdWNoIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvaWNvbmVzL3BvdWNoX2ljby5zdmdcIikgbm8tcmVwZWF0O1xuICB3aWR0aDogMi41cmVtO1xufVxuXG4ucGFnZVF1aXogZmllbGRzZXQge1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5wYWdlUXVpeiBmaWVsZHNldCAuZmxleCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICAucGFnZVF1aXogZmllbGRzZXQgLmZsZXggLmZsZXhpdGVtIHtcbiAgICB3aWR0aDogNDAuNjc3OTclO1xuICB9XG59XG5cbi5wYWdlUXVpeiAucXVlc3Rpb24ge1xuICBmb250LWZhbWlseTogY3JpbXNvblRleHRCb2xkLCBzZXJpZjtcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC1zaXplOiAxLjhyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0NTFweCkge1xuICAucGFnZVF1aXogLnF1ZXN0aW9uIHtcbiAgICBmb250LXNpemU6IDI2cHg7XG4gICAgZm9udC1zaXplOiAyLjZyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5wYWdlUXVpeiAucXVlc3Rpb24ge1xuICAgIHdpZHRoOiA3OS4xNjY2NyU7XG4gIH1cbn1cblxuLnBhZ2VRdWl6IC5xMSAuaW1nUXVlc3Rpb24gaW1nIHtcbiAgYm9yZGVyOiBzb2xpZCAycHggIzY4Njg2ODtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAucGFnZVF1aXogLnExIC5pbWdRdWVzdGlvbiBpbWcge1xuICAgIHdpZHRoOiA0Ny4zNjg0MiU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5wYWdlUXVpeiAucTEgLmltZ1F1ZXN0aW9uIGltZyB7XG4gICAgd2lkdGg6IDc5LjE2NjY3JTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLmNob2l4UmVwb25zZXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwYWRkaW5nOiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4ucGFnZVF1aXogLmNob2l4UmVwb25zZXMgLmNob2l4IHtcbiAgYm9yZGVyOiAycHggc29saWQgIzY4Njg2ODtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peCB7XG4gICAgd2lkdGg6IDU3Ljg5NDc0JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peDpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDNweCAzcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNik7XG59XG5cbi5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyAuY2hvaXggLmxhYmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMjBweCAwO1xufVxuXG4ucGFnZVF1aXogLmNob2l4UmVwb25zZXMgLmNob2l4IC5sYWJlbCBzcGFuIHtcbiAgcGFkZGluZy1sZWZ0OiAyNi4zMTU3OSU7XG59XG5cbi5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyAuY2hvaXggLmlucHV0IHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAxcHg7XG59XG5cbi5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyAuY2hvaXggLmlucHV0LmZvY3VzYWJsZTphY3RpdmUsIC5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyAuY2hvaXggLmlucHV0LmZvY3VzYWJsZTpmb2N1cyB7XG4gIGNsaXA6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgcG9zaXRpb246IHN0YXRpYztcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgd2lkdGg6IGF1dG87XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZVF1aXogLnJlcG9uc2Uge1xuICAgIHdpZHRoOiA0MC42Nzc5NyU7XG4gICAgbWFyZ2luLWxlZnQ6IDUwLjg0NzQ2JTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLnJldHJvYWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLnBhZ2VRdWl6IC5yZXBvbnNlIC5mbGV4IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5wYWdlUXVpeiAucmVwb25zZSAuZmxleCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDczLjY4NDIxJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5mbGV4IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmV4cGxpY2F0aW9uIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1mYW1pbHk6IGNyaW1zb25UZXh0Qm9sZCwgc2VyaWY7XG4gIHRleHQtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmV4cGxpY2F0aW9uIHAge1xuICBtYXJnaW46IDAgMCAxcmVtIDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmV4cGxpY2F0aW9uIHtcbiAgICB3aWR0aDogNjQuMjg1NzElO1xuICB9XG59XG5cbi5wYWdlUXVpeiAucmVwb25zZSAuZmxleCAuaW1nUmVwb25zZSBpbWcge1xuICB3aWR0aDogNDcuMzY4NDIlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5mbGV4IC5pbWdSZXBvbnNlIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5wYWdlUXVpeiAucmVwb25zZSAuZmxleCAuaW1nUmVwb25zZSB7XG4gICAgd2lkdGg6IDI4LjU3MTQzJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDUuMjYzMTYlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmltZ1JlcG9uc2Uge1xuICAgIHdpZHRoOiAzNy41JTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLmJ0bl9uZXh0LFxuLnBhZ2VRdWl6IC5yZXBvbnNlIC5idG5fc291bWV0dHJlIHtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5idG5fbmV4dCxcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5idG5fc291bWV0dHJlIHtcbiAgICBtYXJnaW4tbGVmdDogNTIuNjMxNTglO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZVF1aXogLnJlcG9uc2UgLmJ0bl9uZXh0LFxuICAucGFnZVF1aXogLnJlcG9uc2UgLmJ0bl9zb3VtZXR0cmUge1xuICAgIHdpZHRoOiA1OC4zMzMzMyU7XG4gICAgbWFyZ2luLWxlZnQ6IDQxLjY2NjY3JTtcbiAgfVxufVxuXG4uZm9vdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZm9vdGVyIC5jcmVkaXRQaG90byB7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IENhYmluLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG59XG5cbi5mb290ZXIgLmNyZWRpdFBob3RvIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5mb290ZXIgLmZvbmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XG4gIGNvbG9yOiAjQjJCMkIyO1xuICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgcGFkZGluZzogMC4yNXJlbTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cblxuLmZvb3RlciAuZm9uZCAuYXR0cmlidXRpb25zIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiAjQjJCMkIyO1xuICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LXNpemU6IDFyZW07XG59XG4iLCIvKioqKiBCSUJMSU9USMOIUVVFUyAoZGFucyBsZSBkb3NzaWVyIGJvd2VyX2NvbXBvbmVudHMpICoqKiovXHJcbkBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtY3NzL25vcm1hbGl6ZSc7XHJcblxyXG5AaW1wb3J0ICcuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3knO1xyXG5AaW1wb3J0ICcuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3BsdWdpbnMvc3ZnLWdyaWQnO1xyXG5cclxuLyoqKiogdXRpbGl0YWlyZXMgKioqKi9cclxuQGltcG9ydCAndXRpbGl0YWlyZXMvdmFyaWFibGVzJztcclxuQGltcG9ydCAndXRpbGl0YWlyZXMvbWl4aW5zJztcclxuXHJcblxyXG4vKioqKiBiYXNlICh0eXBvKSAqKioqL1xyXG5AaW1wb3J0ICdiYXNlL3R5cG8nO1xyXG5cclxuLyoqKiogbW9kdWxlcyAqKioqL1xyXG5AaW1wb3J0ICdtb2R1bGVzL2FuaW1hdGlvbnMnO1xyXG5AaW1wb3J0ICdtb2R1bGVzL2dlbmVyYWwnO1xyXG5cclxuLyoqKioqIE1JU0UgRU4gUEFHRSBTVVNZICoqKioqKi9cclxuQGluY2x1ZGUgYm9yZGVyLWJveC1zaXppbmc7XHJcblxyXG5AbWVkaWEobWF4LXdpZHRoOiA4NTBweCl7XHJcbiAgJHN1c3k6IChcclxuICAgICAgICAgICdjb2x1bW5zJzogc3VzeS1yZXBlYXQoNCksXHJcbiAgICAgICAgICAnZ3V0dGVycyc6IDAuMjAsXHJcbiAgICAgICAgICAnc3ByZWFkJzogJ25hcnJvdycsXHJcbiAgICAgICAgICAnY29udGFpbmVyLXNwcmVhZCc6ICd3aWRlJyxcclxuICApO1xyXG4gIC5jb250ZW5ldXIge1xyXG4gICAgLy9taW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgLy9taW4td2lkdGggZGUgMzA1IHBvdXIgZmFpcmUgMzIwcHggYXZlYyBsZXMgZ3V0dGVyXHJcbiAgICBtaW4td2lkdGg6IDMwNXB4O1xyXG4gICAgcGFkZGluZzogMCBndXR0ZXIoNCkvMjtcclxuICAgIGJhY2tncm91bmQ6IHN1c3ktc3ZnLWdyaWQoKFxyXG4gICAgICAgICAgICAnY29sdW1ucyc6IHN1c3ktcmVwZWF0KDQpLFxyXG4gICAgICAgICAgICAnZ3V0dGVycyc6IDAuMjAsXHJcbiAgICAgICAgICAgICdzcHJlYWQnOiAnbmFycm93JyxcclxuICAgICAgICAgICAgJ2NvbnRhaW5lci1zcHJlYWQnOiAnd2lkZScsXHJcbiAgICApKSBuby1yZXBlYXQgc2Nyb2xsO1xyXG4gIH1cclxufVxyXG5AbWVkaWEobWluLXdpZHRoOiA4NTFweCl7XHJcbiAgJHN1c3k6IChcclxuICAgICAgICAgICdjb2x1bW5zJzogc3VzeS1yZXBlYXQoMTIpLFxyXG4gICAgICAgICAgJ2d1dHRlcnMnOiAwLjE2LFxyXG4gICAgICAgICAgJ3NwcmVhZCc6ICduYXJyb3cnLFxyXG4gICAgICAgICAgJ2NvbnRhaW5lci1zcHJlYWQnOiAnbmFycm93J1xyXG4gICk7XHJcbiAgLmNvbnRlbmV1ciB7XHJcbiAgICAvL21pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6MTI4MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kOiBzdXN5LXN2Zy1ncmlkKChcclxuICAgICAgICAgICAgJ2NvbHVtbnMnOiBzdXN5LXJlcGVhdCgxMiksXHJcbiAgICAgICAgICAgICdndXR0ZXJzJzogMC4xNixcclxuICAgICAgICAgICAgJ3NwcmVhZCc6ICduYXJyb3cnLFxyXG4gICAgICAgICAgICAnY29udGFpbmVyLXNwcmVhZCc6ICduYXJyb3cnXHJcbiAgICApKSBuby1yZXBlYXQgc2Nyb2xsO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi8qKiBTdHlsZXMgKiovXHJcblxyXG5odG1sIHtcclxuICAvL2hlaWdodDogMTAwJTtcclxufVxyXG5cclxuYm9keXtcclxuICAvL21pbi1oZWlnaHQ6IDEwMCU7XHJcblxyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAvL3Bvc2l0aW9uOnJlbGF0aXZlO1xyXG59XHJcblxyXG4uaGVhZGVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRub2lyRm9uZDtcclxuICBoZWlnaHQ6IDc1cHg7XHJcbn1cclxuXHJcbi50aXRsZXtcclxuICBtYXJnaW46MDtcclxufVxyXG5cclxuLnBhZ2VBY2N1ZWlsIHtcclxuICAvL21pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgLy9oZWlnaHQ6MTAwJTtcclxuICBvdmVyZmxvdy14OmhpZGRlbjtcclxuICBmb250LWZhbWlseTogJGZvbnRlQm9sZDtcclxuICBjb2xvcjogd2hpdGU7XHJcblxyXG4gIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2JnX2FjY3VlaWxfdzgwMC5qcGcnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG5cclxuICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9iZ19hY2N1ZWlsX3cxMjgwLmpwZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHJcbiAgfVxyXG4gIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9iZ19hY2N1ZWlsX3cyNTYwLmpwZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9XHJcbn1cclxuXHJcbiAgLmNvbnRhaW5lckFjY3VlaWwge1xyXG4gICAgLy9taW4taGVpZ2h0OjEwMCU7XHJcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpIHtcclxuICAgICAgYWxpZ24taXRlbXM6ZmxleC1lbmQ7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDokdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICB9XHJcblxyXG4gICAgLnRpdHJlIHtcclxuICAgICAgbWFyZ2luOiAzcmVtIDAgMCAwO1xyXG4gICAgICBjb2xvcjogJG5vaXI7XHJcbiAgICAgIEBpbmNsdWRlIGZvbnRTaXplKDI2cHgpO1xyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpIHtcclxuICAgICAgICBAaW5jbHVkZSBmb250U2l6ZSgzNHB4KTtcclxuICAgICAgICB3aWR0aDogc3BhbigzIG9mIDQpO1xyXG4gICAgICB9XHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2UpIHtcclxuICAgICAgICBAaW5jbHVkZSBmb250U2l6ZSgzNnB4KTtcclxuICAgICAgICB3aWR0aDogc3Bhbig2IG9mIDEyKTtcclxuICAgICAgICAvL21hcmdpbi1yaWdodDpzcGFuKDEgd2lkZSBvZiAxMik7XHJcbiAgICAgIH1cclxuICAgICAgLy9AbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCl7XHJcbiAgICAgIC8vICB3aWR0aDogc3Bhbig1IG9mIDEyKTtcclxuICAgICAgLy99XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5pbnRyb2R1Y3Rpb24ge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRub2lyNjA7XHJcblxyXG4gICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XHJcbiAgICAgIG1hcmdpbjogNXJlbSAtMnJlbTtcclxuXHJcbiAgICAgIEBpbmNsdWRlIGZvbnRTaXplKDE2cHgpO1xyXG5cclxuICAgICAgcHtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA0cmVtO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMXJlbTtcclxuICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KSB7XHJcbiAgICAgICAgd2lkdGg6IHNwYW4oMyBvZiA0KStndXR0ZXIoKS8yO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IHNwYW4oMSBvZiAxMik7XHJcbiAgICAgICAgbWFyZ2luOiAgNXJlbSAwO1xyXG4gICAgICAgIHdpZHRoOnNwYW4oNiBvZiAxMik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3Ape1xyXG4gICAgICAvLyAgd2lkdGg6c3Bhbig1IG9mIDEyKTtcclxuICAgICAgLy8gIHBhZGRpbmctcmlnaHQ6MDtcclxuICAgICAgLy8gIG1hcmdpbi1yaWdodDogc3BhbigxIHdpZGUgb2YgMTIpO1xyXG4gICAgICAvL1xyXG4gICAgICAvL31cclxuICAgIH1cclxuICAgIC5idG5Tb3VtZXR0cmV7XHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogc3BhbigxIHdpZGUgb2YgMTIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuLmJnX3F1aXp7XHJcbiAgYmFja2dyb3VuZDp1cmwoJy4uL2ltYWdlcy9iZ19xdWl6LmpwZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xyXG4gIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcclxufVxyXG4ucGFnZVF1aXp7XHJcbiAgcG9zaXRpb246cmVsYXRpdmU7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIEBtZWRpYShtaW4td2lkdGg6JHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgfVxyXG5cclxuICAuaW5kaWNhdGV1clF1ZXN0aW9uLFxyXG4gIC56b25lUG9pbnRhZ2V7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnRlVGl0cmU7XHJcbiAgICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMTRweCk7XHJcbiAgfVxyXG5cclxuICAuaW5kaWNhdGV1clF1ZXN0aW9ue1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAuem9uZVBvaW50YWdle1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBtYXJnaW46YXV0byAxcmVtO1xyXG4gIH1cclxuXHJcbiAgLmluc3RydWN0aW9uUXVlc3Rpb257XHJcbiAgICBtYXJnaW46MDtcclxuICAgIHRleHQtc2hhZG93OiAkb21icmU7XHJcbiAgfVxyXG5cclxuICAuaWNvbmUtcG91Y2h7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2ljb25lcy9wb3VjaF9pY28uc3ZnJykgbm8tcmVwZWF0O1xyXG4gICAgd2lkdGg6Mi41cmVtO1xyXG4gIH1cclxuXHJcbiAgZmllbGRzZXR7XHJcbiAgICBib3JkZXI6bm9uZTtcclxuICAgIHBhZGRpbmc6MDtcclxuICAgIG1hcmdpbjowO1xyXG5cclxuICAgIC5mbGV4e1xyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgIC5mbGV4aXRlbXtcclxuICAgICAgICAgIHdpZHRoOnNwYW4oNSBvZiAxMik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucXVlc3Rpb257XHJcbiAgICBmb250LWZhbWlseTogJGZvbnRlQm9sZDtcclxuICAgIHRleHQtc2hhZG93OiAkb21icmU7XHJcblxyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMThweCk7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJG1vYmlsZSl7XHJcbiAgICAgIEBpbmNsdWRlIGZvbnRTaXplKDI2cHgpO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgIHdpZHRoOnNwYW4oNCBvZiA1KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xMXtcclxuICAgIC5pbWdRdWVzdGlvbntcclxuICAgICAgaW1ne1xyXG4gICAgICAgIGJvcmRlcjpzb2xpZCAycHggJGdyaXM7XHJcbiAgICAgICAgd2lkdGg6IHNwYW4oNCBvZiA0KTtcclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpe1xyXG4gICAgICAgICAgd2lkdGg6c3BhbigyIG9mIDQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICAgIHdpZHRoOnNwYW4oNCBvZiA1KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAuY2hvaXhSZXBvbnNlc3tcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOjA7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgZGlzcGxheTpibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAuY2hvaXgge1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAkZ3JpcztcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYW5jRm9uZDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xyXG4gICAgICB3aWR0aDogc3Bhbig0IG9mIDQpO1xyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQb3J0cmFpdCl7XHJcbiAgICAgICAgd2lkdGg6c3BhbigyIHdpZGVyIG9mIDQpO1xyXG4gICAgICB9XHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG4gICAgICAgIHdpZHRoOnNwYW4oNSBvZiA1KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcntcclxuICAgICAgICBib3gtc2hhZG93OiAkb21icmVIb3ZlcjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmxhYmVse1xyXG4gICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOjEwMCU7XHJcbiAgICAgICAgcGFkZGluZzogMjBweCAwO1xyXG5cclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiBzcGFuKDEgb2YgNCkrZ3V0dGVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5pbnB1dHtcclxuICAgICAgICBAaW5jbHVkZSB2aXN1YWxseWhpZGRlbjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnJlcG9uc2V7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgIHdpZHRoOnNwYW4oNSBvZiAxMik7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiBzcGFuKDYgd2lkZSBvZiAxMik7XHJcbiAgICB9XHJcblxyXG4gICAgLnJldHJvYWN0aW9ue1xyXG4gICAgICBtYXJnaW4tdG9wOjA7XHJcbiAgICB9XHJcbiAgICAuZmxleHtcclxuICAgICAgZGlzcGxheTpibG9jaztcclxuICAgICAgQGluY2x1ZGUgZm9udFNpemUoMTZweCk7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQb3J0cmFpdCl7XHJcbiAgICAgICAgZGlzcGxheTpmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjphdXRvO1xyXG4gICAgICAgIHdpZHRoOnNwYW4oMyBvZiA0KTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAuZXhwbGljYXRpb257XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnRlQm9sZDtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4gICAgICAgIHB7XHJcbiAgICAgICAgICBtYXJnaW46MCAwIDFyZW0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQb3J0cmFpdCl7XHJcbiAgICAgICAgICB3aWR0aDpzcGFuKDIgb2YgMyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5pbWdSZXBvbnNle1xyXG4gICAgICAgIGltZ3tcclxuICAgICAgICAgIHdpZHRoOnNwYW4oMiBvZiA0KTtcclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6JHRhYmxldHRlUG9ydHJhaXQpe1xyXG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiR0YWJsZXR0ZVBvcnRyYWl0KXtcclxuICAgICAgICAgIHdpZHRoOnNwYW4oMSBvZiAzKTtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDpndXR0ZXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgICAgICB3aWR0aDpzcGFuKDIgb2YgNSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYnRuX25leHQsXHJcbiAgICAuYnRuX3NvdW1ldHRyZXtcclxuICAgICAgbWFyZ2luLXRvcDoxLjVyZW07XHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KXtcclxuICAgICAgICBtYXJnaW4tbGVmdDpzcGFuKDIgd2lkZSBvZiA0KTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICAvL21hcmdpbi1sZWZ0OnNwYW4oOCBvZiAxMikrZ3V0dGVyKCkvMztcclxuICAgICAgICB3aWR0aDpzcGFuKDMgb2YgNSk7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6c3BhbigyIHdpZGUgb2YgNSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG4uZm9vdGVye1xyXG4gIGRpc3BsYXk6YmxvY2s7XHJcbiAgd2lkdGg6MTAwJTtcclxuXHJcbiAgLmNyZWRpdFBob3Rve1xyXG4gICAgY29sb3I6ICRibGFuYztcclxuICAgIGF7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDEwcHgpO1xyXG4gICAgZm9udC1mYW1pbHk6IENhYmluLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG5cclxuICAuZm9uZHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRub2lyO1xyXG4gICAgY29sb3I6ICNCMkIyQjI7XHJcbiAgICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIHBhZGRpbmc6MC4yNXJlbTtcclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDEycHgpO1xyXG5cclxuICAgIC5hdHRyaWJ1dGlvbnN7XHJcbiAgICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgICAgIGNvbG9yOiAjQjJCMkIyO1xyXG4gICAgICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgICAgQGluY2x1ZGUgZm9udFNpemUoMTBweCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcbi8vLnBhZ2VBY2N1ZWlse1xyXG4vLyAgLmZvb3RlcntcclxuLy8gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4vLyAgICBib3R0b206MDtcclxuLy8gIH1cclxuLy99IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIi8qKlxyXG4gKiBAYXV0aG9yIFJvc2UgUHJvdmVuY2hlclxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICogVEFCTEUgREVTIE1BVEnDiFJFU1xyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICpcclxuICogUG9saWNlcyBkZSBjYXJhY3TDqHJlc1xyXG4gKiBQYWxldHRlIGRlIGNvdWxldXJzXHJcbiAqIFBvaW50cyBkZSBydXB0dXJlXHJcbiAqKi9cclxuXHJcbi8qKiBQb2xpY2VzIGRlIGNhcmFjdMOocmUgKiovXHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogJ2NpbnplbERlY29yYXRpdmUnO1xyXG4gIHNyYzogdXJsKCcuLi9wb2xpY2VzL0NpbnplbERlY29yYXRpdmUtQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdjcmltc29uVGV4dEJvbGQnO1xyXG4gIHNyYzogdXJsKCcuLi9wb2xpY2VzL0NyaW1zb25UZXh0LUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiAnY3JpbXNvblRleHQnO1xyXG4gIHNyYzogdXJsKCcuLi9wb2xpY2VzL0NyaW1zb25UZXh0LVNlbWlCb2xkLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuJGZvbnRlOiBjcmltc29uVGV4dCwgc2VyaWY7XHJcbiRmb250ZUJvbGQ6IGNyaW1zb25UZXh0Qm9sZCwgc2VyaWY7XHJcbiRmb250ZVRpdHJlOiBjaW56ZWxEZWNvcmF0aXZlLCBzZXJpZjtcclxuXHJcblxyXG4vKiogUGFsZXR0ZSBkZSBjb3VsZXVycyAqKi9cclxuJHZlcnQ6ICM3Q0M2NkM7XHJcbiRncmlzOiAjNjg2ODY4O1xyXG4kcm91Z2U6ICNEMzIxMjE7XHJcbiRub2lyOiAjMDAwMDAwO1xyXG4kYmxhbmM6ICNGRkZGRkY7XHJcblxyXG4kZXJyZXVyOiAjQzAzRTNFO1xyXG5cclxuJGJsYW5jRm9uZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xyXG4kbm9pckZvbmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcclxuJG5vaXI2MDogcmdiYSgwLCAwLCAwLCAwLjYpO1xyXG5cclxuJG9tYnJlSG92ZXI6IDNweCAzcHggM3B4IHJnYmEoMCwwLDAsMC4xNik7XHJcbiRvbWJyZTogMCAxcHggM3B4IHJnYmEoMCwwLDAsMC4zKTtcclxuLy9Qb3VyIHV0aWxpc2VyIC0+IGJveC1zaGFkb3c6ICRvbWJyZVBhbGU7XHJcblxyXG4vKiogUG9pbnRzIGRlIHJ1cHR1cmUgKiovXHJcbiRtb2JpbGU6IDQ1MXB4O1xyXG4kdGFibGV0dGVQb3J0cmFpdDogNTUxcHg7XHJcbiR0YWJsZXR0ZVBheXNhZ2U6IDg1MXB4O1xyXG4kZGVza3RvcDogMTAwMHB4O1xyXG4vLyRkZXNrdG9wOiAxMjgycHg7XHJcbiIsIlxyXG5cclxuXHJcblxyXG5cclxuLyoqKioqKioqIFV0aWxpdGFpcmVzIGRlIGJhc2UgKEJveFNpemluZywgQ2xlYXJmaXgpICoqKioqKioqKi9cclxuLyogQm94U2l6aW5nICovXHJcbkBtaXhpbiBib3JkZXItYm94LXNpemluZ3tcclxuICAqIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBDbGVhcmZpeDogcG91ciBjb250cmVyIGxlIHByb2Jsw6htZSBkZXMgZW5mYW50cyBmbG90dGFudHMqL1xyXG5AbWl4aW4gY2xlYXJmaXgge1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCIgXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gIH1cclxufVxyXG5cclxuLmNme1xyXG4gIEBpbmNsdWRlIGNsZWFyZml4O1xyXG59XHJcblxyXG4vKioqKioqKiogVXRpbGl0YWlyZXMgcG91ciBhY2Nlc3NpYmlsaXTDqSAqKioqKioqKiovXHJcbi8vIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW5yZWFkZXJzOlxyXG4vLyBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XHJcbkBtaXhpbiB2aXN1YWxseWhpZGRlbiB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB3aWR0aDogMXB4O1xyXG5cclxuICAvLyBFeHRlbmRzIHRoZSAudmlzdWFsbHloaWRkZW4gY2xhc3MgdG8gYWxsb3cgdGhlIGVsZW1lbnQgdG8gYmUgZm9jdXNhYmxlXHJcbiAgLy8gd2hlbiBuYXZpZ2F0ZWQgdG8gdmlhIHRoZSBrZXlib2FyZDogaHR0cHM6Ly93d3cuZHJ1cGFsLm9yZy9ub2RlLzg5NzYzOFxyXG4gICYuZm9jdXNhYmxlOmFjdGl2ZSxcclxuICAmLmZvY3VzYWJsZTpmb2N1cyB7XHJcbiAgICBjbGlwOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gIH1cclxufVxyXG4udmlzdWFsbHloaWRkZW4sXHJcbi5zY3JlZW4tcmVhZGVyLW9ubHl7XHJcbiAgQGluY2x1ZGUgdmlzdWFsbHloaWRkZW47XHJcbn1cclxuXHJcblxyXG5cclxuLyoqKioqKioqIFV0aWxpdGFpcmVzIHBvdXIgdHlwb2dyYXBoaWUgKioqKioqKioqL1xyXG4vLyBGb25jdGlvbiBwb3VyIGNvbnZlcnRpciB1bmUgdmFsZXVyIGRlIGZvbnQtc2l6ZSBlbiBwaXhlbHMgw6Agc29uIMOpcXVpdmFsZW50IHJlbVxyXG5AZnVuY3Rpb24gY2FsY3VsYXRlUmVtKCRzaXplKSB7XHJcbiAgJHJlbVNpemU6ICRzaXplIC8gMTBweDtcclxuICBAcmV0dXJuICN7JHJlbVNpemV9cmVtO1xyXG59XHJcbi8vIE1peGluIHF1aSBpbmNsdXMgbGEgc29sdXRpb24gZGUgcmVwbGkgZW4gcGl4ZWwgc3VpdmkgcGFyIGxhIHZhbGV1ciBjYWxjdWzDqWUgZW4gcmVtXHJcbkBtaXhpbiBmb250U2l6ZSgkc2l6ZSkge1xyXG4gIGZvbnQtc2l6ZTogJHNpemU7XHJcbiAgZm9udC1zaXplOiBjYWxjdWxhdGVSZW0oJHNpemUpO1xyXG59XHJcblxyXG5cclxuLyoqKioqKioqKiBNaXhpbnMgZ8OpbsOpcmF1eCAqKioqKioqKiovXHJcbi8vQG1peGluIHRleHRTaGFkb3dlZE5vaXJ7XHJcbi8vICBjb2xvcjogJG5vaXI7XHJcbi8vICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4vL30iLCIvKipcclxuKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4qIFRBQkxFIERFUyBNQVRJw4hSRVMgLSBUeXBvZ3JhcGhpZSByZXNwb25zaXZlIChNb2JpbGUgRmlyc3QpXHJcbiogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuKiBCYXNlIGTDqWNpbWFsZVxyXG4qIEhpw6lyYXJjaGllIHJlc3BvbnNpdmVcclxuKi9cclxuXHJcblxyXG5cclxuLyoqIEJhc2UgZMOpY2ltYWxlICoqL1xyXG5odG1se1xyXG4gIGZvbnQtc2l6ZTogNjIuNSU7XHJcbn1cclxuYm9keSB7XHJcbiAgLyogMTZweCBwb3VyIHRvdXRlcyBsZXMgbGFyZ2V1cnMgZCfDqWNyYW4gKi9cclxuICBAaW5jbHVkZSBmb250U2l6ZSgxOHB4KTtcclxuICAvKiBmYWN0ZXVyIG11bHRpcGxpY2F0ZXVyIGRlIGxhIHRhaWxsZSBkZSBsYSBwb2xpY2UgMS4zNzV4MTYgPSAyMiAqL1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjM3NTtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpIHtcclxuICBib2R5IHtcclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICB9XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgYm9keSB7XHJcbiAgICBsaW5lLWhlaWdodDogMS43NTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuLyoqIEhpw6lyYXJjaGllIHJlc3BvbnNpdmUgKiovXHJcbi8qICBwbHVzIHByb2NoZSA9IHBsdXMgcGV0aXQgICYgIHBsdXMgbG9pbiA9IHBsdXMgZ3JhbmQgKi9cclxuXHJcbi8qIFRJVFJFUyBOSVZFQVUgMSAqL1xyXG5oMSxcclxuLmgxIHsgLyogPSAzMnB4ICovXHJcbiAgQGluY2x1ZGUgZm9udFNpemUoMjBweCk7XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KSB7XHJcbiAgaDEsXHJcbiAgLmgxIHsgLyogPSA0MHB4ICovXHJcbiAgICBAaW5jbHVkZSBmb250U2l6ZSgyNnB4KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vKiBUSVRSRVMgTklWRUFVIDIgKi9cclxuaDIsXHJcbi5oMiB7IC8qID0gMjRweCAqL1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0dGVQb3J0cmFpdCkge1xyXG4gIGgyLFxyXG4gIC5oMiB7IC8qID0gMzJweCAqL1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMjRweCk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBUSVRSRVMgTklWRUFVIDMgKi9cclxuaDMsXHJcbi5oMyB7IC8qID0gMThweCAqL1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0dGVQb3J0cmFpdCkge1xyXG4gIGgzLFxyXG4gIC5oMyB7ICAvKiA9IDI0cHggKi9cclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDIwcHgpO1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG4vKiBUSVRSRVMgTklWRUFVIDQgKi9cclxuaDQsXHJcbi5oNCB7IC8qID0gMTZweCAqL1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0dGVQb3J0cmFpdCkge1xyXG4gIGg0LFxyXG4gIC5oNCB7IC8qID0gMThweCAqL1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMThweCk7XHJcbiAgfVxyXG59XHJcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcclxuXHJcbi8qIVxyXG4gKiBhbmltYXRlLmNzcyAtaHR0cDovL2RhbmVkZW4ubWUvYW5pbWF0ZVxyXG4gKiBWZXJzaW9uIC0gMy43LjBcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIC0gaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggRGFuaWVsIEVkZW5cclxuICogQW5pbWF0aW9ucyBhcmUgc2xpZ2h0bHkgbW9kaWZpZWQgZnJvbSB0aGUgb3JpZ2luYWwuXHJcbiAqL1xyXG5cclxuQGtleWZyYW1lcyBwdWxzZSB7XHJcbiAgMCUsIDg2JSwgOTIlLCAxMDAlIHtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gIH1cclxuXHJcbiAgODklLCA5NiUge1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMS4wNSwgMS4wNSwgMS4wNSk7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4wNSwgMS4wNSwgMS4wNSk7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XHJcbiAgZnJvbXtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS41cyBlYXNlO1xyXG4gIH1cclxuICB0byB7XHJcbiAgICBvcGFjaXR5OjE7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQGtleWZyYW1lcyBzbGlkZUluUmlnaHQge1xyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDEwMCUsMCk7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMnMgZWFzZTtcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6MTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIH1cclxufVxyXG5cclxuLnBhZ2VBY2N1ZWlse1xyXG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAudGl0cmV7XHJcbiAgICBhbmltYXRpb246IGZhZGVJbiAycztcclxuICB9XHJcblxyXG4gIC5pbnRyb2R1Y3Rpb257XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgYW5pbWF0aW9uOiBzbGlkZUluUmlnaHQgMXMgMS41cztcclxuICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xyXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XHJcbiAgfVxyXG5cclxuICAuYnRuU291bWV0dHJle1xyXG4gICAgb3BhY2l0eTowO1xyXG4gICAgYW5pbWF0aW9uOiBmYWRlSW4gMS41cyAyLjVzLCBwdWxzZSA2LjVzIDlzIGluZmluaXRlO1xyXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XHJcbiAgfVxyXG59XHJcblxyXG4iLCIudGl0cmV7XHJcbiAgbWFyZ2luOjA7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250ZVRpdHJlO1xyXG4gIGNvbG9yOiRibGFuYztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgdGV4dC1zaGFkb3c6ICRvbWJyZTtcclxuICAvL0BpbmNsdWRlIGZvbnRTaXplKDIwcHgpO1xyXG5cclxuICAuemVsZGF7XHJcbiAgICBjb2xvcjokcm91Z2U7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi5ib3V0b257XHJcbiAgZGlzcGxheTpibG9jaztcclxuXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJG5vaXJGb25kO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRibGFuYztcclxuXHJcbiAgY29sb3I6ICRibGFuYztcclxuICBmb250LWZhbWlseTogJGZvbnRlVGl0cmU7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6MTRweCAwO1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE2cHgpO1xyXG5cclxuICB3aWR0aDpzcGFuKDQgb2YgNCk7XHJcblxyXG4gIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KXtcclxuICAgIHdpZHRoOnNwYW4oMiBvZiA0KTtcclxuICB9XHJcbiAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICB3aWR0aDpzcGFuKDMgb2YgMTIpO1xyXG4gIH1cclxuXHJcbiAgdHJhbnNpdGlvbjphbGwsIDIwMG1zIGVhc2U7XHJcblxyXG4gICY6aG92ZXIsXHJcbiAgJjpmb2N1c3tcclxuICAgIG91dGxpbmU6bm9uZTtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwLjZyZW0gJGJsYW5jO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG4uaW1nUXVlc3Rpb257XHJcbiAgaW1ne1xyXG4gICAgd2lkdGg6IHNwYW4oMiBvZiA0KTtcclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgd2lkdGg6c3Bhbig0IG9mIDEyKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmltZ3tcclxuICB3aWR0aDoxMDAlO1xyXG59XHJcblxyXG4iLCIvLy8gR3JpZCBNYXRoIEVuZ2luZVxuLy8vID09PT09PT09PT09PT09PT1cbi8vLyBUaGUgYHN1YCBmdW5jdGlvbnMgZ2l2ZSB5b3UgZGlyZWN0IGFjY2VzcyB0byB0aGUgbWF0aCBsYXllcixcbi8vLyB3aXRob3V0IGFueSBzeW50YXgtc3VnYXIgbGlrZSBzaG9ydGhhbmQgcGFyc2luZywgYW5kIG5vcm1hbGl6YXRpb24uXG4vLy8gSWYgeW91IHByZWZlciBuYW1lZCBhcmd1bWVudHMsIGFuZCBzdHJpcHBlZC1kb3duIHN5bnRheCxcbi8vLyB5b3UgY2FuIHVzZSB0aGVzZSBmdW5jdGlvbnMgZGlyZWN0bHkgaW4geW91ciBjb2RlIOKAk1xuLy8vIHJlcGxhY2luZyBgc3BhbmAsIGBndXR0ZXJgLCBhbmQgYHNsaWNlYC5cbi8vL1xuLy8vIFRoZXNlIGZ1bmN0aW9ucyBhcmUgYWxzbyB1c2VmdWxcbi8vLyBmb3IgYnVpbGRpbmcgbWl4aW5zIG9yIG90aGVyIGV4dGVuc2lvbnMgdG8gU3VzeS5cbi8vLyBBcHBseSB0aGUgU3VzeSBzeW50YXggdG8gbmV3IG1peGlucyBhbmQgZnVuY3Rpb25zLFxuLy8vIHVzaW5nIG91ciBcIlBsdWdpbiBIZWxwZXJzXCIsXG4vLy8gb3Igd3JpdGUgeW91ciBvd24gc3ludGF4IGFuZCBwYXNzIHRoZSBub3JtYWxpemVkIHJlc3VsdHMgYWxvbmdcbi8vLyB0byBgc3VgIGZvciBjb21waWxhdGlvbi5cbi8vL1xuLy8vIEBncm91cCBzdS1tYXRoXG4vLy9cbi8vLyBAc2VlIHN1LXNwYW5cbi8vLyBAc2VlIHN1LWd1dHRlclxuLy8vIEBzZWUgc3Utc2xpY2Vcbi8vLyBAaWdub3JlIF9zdS1zdW1cbi8vLyBAaWdub3JlIF9zdS1jYWxjLXNwYW5cbi8vLyBAaWdub3JlIF9zdS1jYWxjLXN1bVxuLy8vIEBpZ25vcmUgX3N1LW5lZWRzLWNhbGMtb3V0cHV0XG5cblxuXG4vLyBTdSBTcGFuXG4vLyAtLS0tLS0tXG4vLy8gQ2FsY3VsYXRlcyBhbmQgcmV0dXJucyBhIENTUy1yZWFkeSBzcGFuIHdpZHRoLFxuLy8vIGJhc2VkIG9uIG5vcm1hbGl6ZWQgc3BhbiBhbmQgY29udGV4dCBkYXRhIOKAk1xuLy8vIGEgbG93LWxldmVsIHZlcnNpb24gb2YgYHN1c3ktc3BhbmAsXG4vLy8gd2l0aCBhbGwgb2YgdGhlIGxvZ2ljIGFuZCBub25lIG9mIHRoZSBzeW50YXggc3VnYXIuXG4vLy9cbi8vLyAtIEdyaWRzIGRlZmluZWQgd2l0aCB1bml0bGVzcyBudW1iZXJzIHdpbGwgcmV0dXJuIGAlYCB2YWx1ZXMuXG4vLy8gLSBHcmlkcyBkZWZpbmVkIHdpdGggY29tcGFyYWJsZSB1bml0c1xuLy8vICAgd2lsbCByZXR1cm4gYSB2YWx1ZSBpbiB0aGUgdW5pdHMgcHJvdmlkZWQuXG4vLy8gLSBHcmlkcyBkZWZpbmVkIHdpdGggYSBtaXggb2YgdW5pdHMsXG4vLy8gICBvciBhIGNvbWJpbmF0aW9uIG9mIHVudGlsZXNzIG51bWJlcnMgYW5kIHVuaXQtbGVuZ3Rocyxcbi8vLyAgIHdpbGwgcmV0dXJuIGEgYGNhbGMoKWAgc3RyaW5nLlxuLy8vXG4vLy8gQGdyb3VwIHN1LW1hdGhcbi8vLyBAc2VlIHN1c3ktc3BhblxuLy8vXG4vLy8gQHBhcmFtIHtudW1iZXIgfCBsaXN0fSAkc3BhbiAtXG4vLy8gICBOdW1iZXIgb3IgbGlzdCBvZiBncmlkIGNvbHVtbnMgdG8gc3BhblxuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLVxuLy8vICAgTGlzdCBvZiBjb2x1bW5zIGF2YWlsYWJsZVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVycyAtXG4vLy8gICBXaWR0aCBvZiBhIGd1dHRlciBpbiBjb2x1bW4tY29tcGFyYWJsZSB1bml0c1xuLy8vIEBwYXJhbSB7MCB8IDEgfCAtMX0gJHNwcmVhZCAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYHNwYW5gIGNvdW50XG4vLy8gQHBhcmFtIHswIHwgMSB8IC0xfSAkY29udGFpbmVyLXNwcmVhZCBbJHNwcmVhZF0gLVxuLy8vICAgTnVtYmVyIG9mIGd1dHRlcnMgc3Bhbm5lZCxcbi8vLyAgIHJlbGF0aXZlIHRvIGBjb2x1bW5zYCBjb3VudFxuLy8vIEBwYXJhbSB7aW50ZWdlcn0gJGxvY2F0aW9uIFsxXSAtXG4vLy8gICBPcHRpb25hbCBwb3NpdGlvbiBvZiBzdWItc3BhbiBhbW9uZyBmdWxsIHNldCBvZiBjb2x1bW5zXG4vLy9cbi8vLyBAcmV0dXJuIHtsZW5ndGh9IC1cbi8vLyAgIFJlbGF0aXZlIG9yIHN0YXRpYyBsZW5ndGggb2YgYSBzcGFuIG9uIHRoZSBncmlkXG5AZnVuY3Rpb24gc3Utc3BhbihcbiAgJHNwYW4sXG4gICRjb2x1bW5zLFxuICAkZ3V0dGVycyxcbiAgJHNwcmVhZCxcbiAgJGNvbnRhaW5lci1zcHJlYWQ6ICRzcHJlYWQsXG4gICRsb2NhdGlvbjogMVxuKSB7XG4gICRzcGFuOiBzdS12YWxpZC1zcGFuKCRzcGFuKTtcbiAgJGNvbHVtbnM6IHN1LXZhbGlkLWNvbHVtbnMoJGNvbHVtbnMpO1xuICAkZ3V0dGVyczogc3UtdmFsaWQtZ3V0dGVycygkZ3V0dGVycyk7XG4gICRzcHJlYWQ6IHN1LXZhbGlkLXNwcmVhZCgkc3ByZWFkKTtcblxuICBAaWYgKHR5cGUtb2YoJHNwYW4pID09ICdudW1iZXInKSB7XG4gICAgQGlmIChub3QgdW5pdGxlc3MoJHNwYW4pKSB7XG4gICAgICBAcmV0dXJuICRzcGFuO1xuICAgIH1cblxuICAgICRsb2NhdGlvbjogc3UtdmFsaWQtbG9jYXRpb24oJHNwYW4sICRsb2NhdGlvbiwgJGNvbHVtbnMpO1xuICAgICRzcGFuOiBzdS1zbGljZSgkc3BhbiwgJGNvbHVtbnMsICRsb2NhdGlvbiwgJHZhbGlkYXRlOiBmYWxzZSk7XG4gIH1cblxuICBAaWYgX3N1LW5lZWRzLWNhbGMtb3V0cHV0KCRzcGFuLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQsIG5vdCAndmFsaWRhdGUnKSB7XG4gICAgQHJldHVybiBfc3UtY2FsYy1zcGFuKCRzcGFuLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQsICRjb250YWluZXItc3ByZWFkLCBub3QgJ3ZhbGlkYXRlJyk7XG4gIH1cblxuICAkc3Bhbi13aWR0aDogX3N1LXN1bSgkc3BhbiwgJGd1dHRlcnMsICRzcHJlYWQsICR2YWxpZGF0ZTogZmFsc2UpO1xuXG4gIEBpZiB1bml0bGVzcygkc3Bhbi13aWR0aCkge1xuICAgICRjb250YWluZXItc3ByZWFkOiBzdS12YWxpZC1zcHJlYWQoJGNvbnRhaW5lci1zcHJlYWQpO1xuICAgICRjb250YWluZXI6IF9zdS1zdW0oJGNvbHVtbnMsICRndXR0ZXJzLCAkY29udGFpbmVyLXNwcmVhZCwgJHZhbGlkYXRlOiBmYWxzZSk7XG4gICAgQHJldHVybiBwZXJjZW50YWdlKCRzcGFuLXdpZHRoIC8gJGNvbnRhaW5lcik7XG4gIH1cblxuICBAcmV0dXJuICRzcGFuLXdpZHRoO1xufVxuXG5cblxuLy8gU3UgR3V0dGVyXG4vLyAtLS0tLS0tLS1cbi8vLyBDYWxjdWxhdGVzIGFuZCByZXR1cm5zIGEgQ1NTLXJlYWR5IGd1dHRlciB3aWR0aCxcbi8vLyBiYXNlZCBvbiBub3JtYWxpemVkIGdyaWQgZGF0YSDigJNcbi8vLyBhIGxvdy1sZXZlbCB2ZXJzaW9uIG9mIGBzdXN5LWd1dHRlcmAsXG4vLy8gd2l0aCBhbGwgb2YgdGhlIGxvZ2ljIGFuZCBub25lIG9mIHRoZSBzeW50YXggc3VnYXIuXG4vLy9cbi8vLyAtIEdyaWRzIGRlZmluZWQgd2l0aCB1bml0bGVzcyBudW1iZXJzIHdpbGwgcmV0dXJuIGAlYCB2YWx1ZXMuXG4vLy8gLSBHcmlkcyBkZWZpbmVkIHdpdGggY29tcGFyYWJsZSB1bml0c1xuLy8vICAgd2lsbCByZXR1cm4gYSB2YWx1ZSBpbiB0aGUgdW5pdHMgcHJvdmlkZWQuXG4vLy8gLSBHcmlkcyBkZWZpbmVkIHdpdGggYSBtaXggb2YgdW5pdHMsXG4vLy8gICBvciBhIGNvbWJpbmF0aW9uIG9mIHVudGlsZXNzIG51bWJlcnMgYW5kIHVuaXQtbGVuZ3Rocyxcbi8vLyAgIHdpbGwgcmV0dXJuIGEgYGNhbGMoKWAgc3RyaW5nLlxuLy8vXG4vLy8gQGdyb3VwIHN1LW1hdGhcbi8vLyBAc2VlIHN1c3ktZ3V0dGVyXG4vLy9cbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC1cbi8vLyAgIExpc3Qgb2YgY29sdW1ucyBpbiB0aGUgZ3JpZFxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVycyAtXG4vLy8gICBXaWR0aCBvZiBhIGd1dHRlciBpbiBjb2x1bW4tY29tcGFyYWJsZSB1bml0c1xuLy8vIEBwYXJhbSB7MCB8IDEgfCAtMX0gJGNvbnRhaW5lci1zcHJlYWQgLVxuLy8vICAgTnVtYmVyIG9mIGd1dHRlcnMgc3Bhbm5lZCxcbi8vLyAgIHJlbGF0aXZlIHRvIGBjb2x1bW5zYCBjb3VudFxuLy8vXG4vLy8gQHJldHVybiB7bGVuZ3RofSAtXG4vLy8gICBSZWxhdGl2ZSBvciBzdGF0aWMgbGVuZ3RoIG9mIG9uZSBndXR0ZXIgaW4gYSBncmlkXG5AZnVuY3Rpb24gc3UtZ3V0dGVyKFxuICAkY29sdW1ucyxcbiAgJGd1dHRlcnMsXG4gICRjb250YWluZXItc3ByZWFkXG4pIHtcbiAgQGlmICh0eXBlLW9mKCRndXR0ZXJzKSA9PSAnbnVtYmVyJykge1xuICAgIEBpZiAoJGd1dHRlcnMgPT0gMCkgb3IgKG5vdCB1bml0bGVzcygkZ3V0dGVycykpIHtcbiAgICAgIEByZXR1cm4gJGd1dHRlcnM7XG4gICAgfVxuICB9XG5cbiAgQGlmIF9zdS1uZWVkcy1jYWxjLW91dHB1dCgkZ3V0dGVycywgJGNvbHVtbnMsICRndXR0ZXJzLCAtMSwgbm90ICd2YWxpZGF0ZScpIHtcbiAgICBAcmV0dXJuIF9zdS1jYWxjLXNwYW4oJGd1dHRlcnMsICRjb2x1bW5zLCAkZ3V0dGVycywgLTEsICRjb250YWluZXItc3ByZWFkLCBub3QgJ3ZhbGlkYXRlJyk7XG4gIH1cblxuICAkY29udGFpbmVyOiBfc3Utc3VtKCRjb2x1bW5zLCAkZ3V0dGVycywgJGNvbnRhaW5lci1zcHJlYWQpO1xuICBAcmV0dXJuIHBlcmNlbnRhZ2UoJGd1dHRlcnMgLyAkY29udGFpbmVyKTtcbn1cblxuXG5cbi8vIFN1IFNsaWNlXG4vLyAtLS0tLS0tLVxuLy8vIFJldHVybnMgYSBsaXN0IG9mIGNvbHVtbnNcbi8vLyBiYXNlZCBvbiBhIGdpdmVuIHNwYW4vbG9jYXRpb24gc2xpY2Ugb2YgdGhlIGdyaWQg4oCTXG4vLy8gYSBsb3ctbGV2ZWwgdmVyc2lvbiBvZiBgc3VzeS1zbGljZWAsXG4vLy8gd2l0aCBhbGwgb2YgdGhlIGxvZ2ljIGFuZCBub25lIG9mIHRoZSBzeW50YXggc3VnYXIuXG4vLy9cbi8vLyBAZ3JvdXAgc3UtbWF0aFxuLy8vIEBzZWUgc3VzeS1zbGljZVxuLy8vXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRzcGFuIC1cbi8vLyAgIE51bWJlciBvZiBncmlkIGNvbHVtbnMgdG8gc3BhblxuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLVxuLy8vICAgTGlzdCBvZiBjb2x1bW5zIGluIHRoZSBncmlkXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRsb2NhdGlvbiBbMV0gLVxuLy8vICAgU3RhcnRpbmcgaW5kZXggb2YgYSBzcGFuIGluIHRoZSBsaXN0IG9mIGNvbHVtbnNcbi8vLyBAcGFyYW0ge2Jvb2x9ICR2YWxpZGF0ZSBbdHJ1ZV0gLVxuLy8vICAgQ2hlY2sgdGhhdCBhcmd1bWVudHMgYXJlIHZhbGlkIGJlZm9yZSBwcm9jZWVkaW5nXG4vLy9cbi8vLyBAcmV0dXJuIHtsaXN0fSAtXG4vLy8gICBTdWJzZXQgbGlzdCBvZiBncmlkIGNvbHVtbnMsIGJhc2VkIG9uIHNwYW4gYW5kIGxvY2F0aW9uXG5AZnVuY3Rpb24gc3Utc2xpY2UoXG4gICRzcGFuLFxuICAkY29sdW1ucyxcbiAgJGxvY2F0aW9uOiAxLFxuICAkdmFsaWRhdGU6IHRydWVcbikge1xuICBAaWYgJHZhbGlkYXRlIHtcbiAgICAkY29sdW1uczogc3UtdmFsaWQtY29sdW1ucygkY29sdW1ucyk7XG4gICAgJGxvY2F0aW9uOiBzdS12YWxpZC1sb2NhdGlvbigkc3BhbiwgJGxvY2F0aW9uLCAkY29sdW1ucyk7XG4gIH1cblxuICAkZmxvb3I6IGZsb29yKCRzcGFuKTtcbiAgJHN1Yi1jb2x1bW5zOiAoKTtcblxuICBAZm9yICRpIGZyb20gJGxvY2F0aW9uIHRvICgkbG9jYXRpb24gKyAkZmxvb3IpIHtcbiAgICAkc3ViLWNvbHVtbnM6IGFwcGVuZCgkc3ViLWNvbHVtbnMsIG50aCgkY29sdW1ucywgJGkpKTtcbiAgfVxuXG4gIEBpZiAkZmxvb3IgIT0gJHNwYW4ge1xuICAgICRyZW1haW5kZXI6ICRzcGFuIC0gJGZsb29yO1xuICAgICRjb2x1bW46ICRsb2NhdGlvbiArICRmbG9vcjtcbiAgICAkc3ViLWNvbHVtbnM6IGFwcGVuZCgkc3ViLWNvbHVtbnMsIG50aCgkY29sdW1ucywgJGNvbHVtbikgKiAkcmVtYWluZGVyKTtcbiAgfVxuXG4gIEByZXR1cm4gJHN1Yi1jb2x1bW5zO1xufVxuXG5cblxuLy8gU3UgU3VtXG4vLyAtLS0tLS1cbi8vLyBHZXQgdGhlIHRvdGFsIHN1bSBvZiBjb2x1bW4tdW5pdHMgaW4gYSBsYXlvdXQuXG4vLy9cbi8vLyBAZ3JvdXAgc3UtbWF0aFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29sdW1ucyAtXG4vLy8gICBMaXN0IG9mIGNvbHVtbnMgaW4gdGhlIGdyaWRcbi8vLyBAcGFyYW0ge251bWJlcn0gJGd1dHRlcnMgLVxuLy8vICAgV2lkdGggb2YgYSBndXR0ZXIgaW4gY29sdW1uLWNvbXBhcmFibGUgdW5pdHNcbi8vLyBAcGFyYW0gezAgfCAxIHwgLTF9ICRzcHJlYWQgLVxuLy8vICAgTnVtYmVyIG9mIGd1dHRlcnMgc3Bhbm5lZCxcbi8vLyAgIHJlbGF0aXZlIHRvIGBjb2x1bW5zYCBjb3VudFxuLy8vIEBwYXJhbSB7Ym9vbH0gJHZhbGlkYXRlIFt0cnVlXSAtXG4vLy8gICBDaGVjayB0aGF0IGFyZ3VtZW50cyBhcmUgdmFsaWQgYmVmb3JlIHByb2NlZWRpbmdcbi8vL1xuLy8vIEByZXR1cm4ge251bWJlcn0gLVxuLy8vICAgVG90YWwgc3VtIG9mIGNvbHVtbi11bml0cyBpbiBhIGdyaWRcbkBmdW5jdGlvbiBfc3Utc3VtKFxuICAkY29sdW1ucyxcbiAgJGd1dHRlcnMsXG4gICRzcHJlYWQsXG4gICR2YWxpZGF0ZTogdHJ1ZVxuKSB7XG4gIEBpZiAkdmFsaWRhdGUge1xuICAgICRjb2x1bW5zOiBzdS12YWxpZC1zcGFuKCRjb2x1bW5zKTtcbiAgICAkZ3V0dGVyczogc3UtdmFsaWQtZ3V0dGVycygkZ3V0dGVycyk7XG4gICAgJHNwcmVhZDogc3UtdmFsaWQtc3ByZWFkKCRzcHJlYWQpO1xuICB9XG5cbiAgLy8gQ2FsY3VsYXRlIGNvbHVtbi1zdW1cbiAgJGNvbHVtbi1zdW06IDA7XG4gIEBlYWNoICRjb2x1bW4gaW4gJGNvbHVtbnMge1xuICAgICRjb2x1bW4tc3VtOiAkY29sdW1uLXN1bSArICRjb2x1bW47XG4gIH1cblxuICAkZ3V0dGVyLXN1bTogKGNlaWwobGVuZ3RoKCRjb2x1bW5zKSkgKyAkc3ByZWFkKSAqICRndXR0ZXJzO1xuICAkdG90YWw6IGlmKCgkZ3V0dGVyLXN1bSA+IDApLCAkY29sdW1uLXN1bSArICRndXR0ZXItc3VtLCAkY29sdW1uLXN1bSk7XG5cbiAgQHJldHVybiAkdG90YWw7XG59XG5cblxuXG4vLyBTdSBDYWxjXG4vLyAtLS0tLS0tXG4vLy8gUmV0dXJuIGEgdXNhYmxlIHNwYW4gd2lkdGggYXMgYSBgY2FsYygpYCBmdW5jdGlvbixcbi8vLyBpbiBvcmRlciB0byBjcmVhdGUgbWl4ZWQtdW5pdCBncmlkcy5cbi8vL1xuLy8vIEBncm91cCBzdS1tYXRoXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge251bWJlciB8IGxpc3R9ICRzcGFuIC1cbi8vLyAgIFByZS1zbGljZWQgbGlzdCBvZiBncmlkIGNvbHVtbnMgdG8gc3BhblxuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLVxuLy8vICAgTGlzdCBvZiBjb2x1bW5zIGF2YWlsYWJsZVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVycyAtXG4vLy8gICBXaWR0aCBvZiBhIGd1dHRlciBpbiBjb2x1bW4tY29tcGFyYWJsZSB1bml0c1xuLy8vIEBwYXJhbSB7MCB8IDEgfCAtMX0gJHNwcmVhZCAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYHNwYW5gIGNvdW50XG4vLy8gQHBhcmFtIHswIHwgMSB8IC0xfSAkY29udGFpbmVyLXNwcmVhZCBbJHNwcmVhZF0gLVxuLy8vICAgTnVtYmVyIG9mIGd1dHRlcnMgc3Bhbm5lZCxcbi8vLyAgIHJlbGF0aXZlIHRvIGBjb2x1bW5zYCBjb3VudFxuLy8vIEBwYXJhbSB7Ym9vbH0gJHZhbGlkYXRlIFt0cnVlXSAtXG4vLy8gICBDaGVjayB0aGF0IGFyZ3VtZW50cyBhcmUgdmFsaWQgYmVmb3JlIHByb2NlZWRpbmdcbi8vL1xuLy8vIEByZXR1cm4ge2xlbmd0aH0gLVxuLy8vICAgUmVsYXRpdmUgb3Igc3RhdGljIGxlbmd0aCBvZiBhIHNwYW4gb24gdGhlIGdyaWRcbkBmdW5jdGlvbiBfc3UtY2FsYy1zcGFuKFxuICAkc3BhbixcbiAgJGNvbHVtbnMsXG4gICRndXR0ZXJzLFxuICAkc3ByZWFkLFxuICAkY29udGFpbmVyLXNwcmVhZDogJHNwcmVhZCxcbiAgJHZhbGlkYXRlOiB0cnVlXG4pIHtcbiAgQGlmICR2YWxpZGF0ZSB7XG4gICAgJHNwYW46IHN1LXZhbGlkLXNwYW4oJHNwYW4pO1xuICAgICRjb2x1bW5zOiBzdS12YWxpZC1jb2x1bW5zKCRjb2x1bW5zKTtcbiAgICAkZ3V0dGVyczogc3UtdmFsaWQtZ3V0dGVycygkZ3V0dGVycyk7XG4gICAgJHNwcmVhZDogc3UtdmFsaWQtc3ByZWFkKCRzcHJlYWQpO1xuICAgICRjb250YWluZXItc3ByZWFkOiBzdS12YWxpZC1zcHJlYWQoJGNvbnRhaW5lci1zcHJlYWQpO1xuICB9XG5cbiAgLy8gU3BhbiBhbmQgY29udGV4dFxuICAkc3BhbjogX3N1LWNhbGMtc3VtKCRzcGFuLCAkZ3V0dGVycywgJHNwcmVhZCwgbm90ICd2YWxpZGF0ZScpO1xuICAkY29udGV4dDogX3N1LWNhbGMtc3VtKCRjb2x1bW5zLCAkZ3V0dGVycywgJGNvbnRhaW5lci1zcHJlYWQsIG5vdCAndmFsaWRhdGUnKTtcblxuICAvLyBGaXhlZCBhbmQgZmx1aWRcbiAgJGZpeGVkLXNwYW46IG1hcC1nZXQoJHNwYW4sICdmaXhlZCcpO1xuICAkZmx1aWQtc3BhbjogbWFwLWdldCgkc3BhbiwgJ2ZsdWlkJyk7XG4gICRmaXhlZC1jb250ZXh0OiBtYXAtZ2V0KCRjb250ZXh0LCAnZml4ZWQnKTtcbiAgJGZsdWlkLWNvbnRleHQ6IG1hcC1nZXQoJGNvbnRleHQsICdmbHVpZCcpO1xuXG4gICRjYWxjOiAnI3skZml4ZWQtc3Bhbn0nO1xuICAkZmx1aWQtY2FsYzogJygxMDAlIC0gI3skZml4ZWQtY29udGV4dH0pJztcblxuICAvLyBGbHVpZC12YWx1ZXNcbiAgQGlmIChub3QgJGZsdWlkLXNwYW4pIHtcbiAgICAkZmx1aWQtY2FsYzogbnVsbDtcbiAgfSBAZWxzZSBpZiAoJGZsdWlkLXNwYW4gIT0gJGZsdWlkLWNvbnRleHQpIHtcbiAgICAkZmx1aWQtc3BhbjogJyogI3skZmx1aWQtc3Bhbn0nO1xuICAgICRmbHVpZC1jb250ZXh0OiBpZigkZmx1aWQtY29udGV4dCwgJy8gI3skZmx1aWQtY29udGV4dH0nLCAnJyk7XG4gICAgJGZsdWlkLWNhbGM6ICcoI3skZmx1aWQtY2FsYyAkZmx1aWQtY29udGV4dCAkZmx1aWQtc3Bhbn0pJztcbiAgfVxuXG4gIEBpZiAkZmx1aWQtY2FsYyB7XG4gICAgJGNhbGM6IGlmKCgkY2FsYyAhPSAnJyksICcjeyRjYWxjfSArICcsICcnKTtcbiAgICAkY2FsYzogJyN7JGNhbGMgKyAkZmx1aWQtY2FsY30nO1xuICB9XG5cbiAgQHJldHVybiBjYWxjKCN7dW5xdW90ZSgkY2FsYyl9KTtcbn1cblxuXG5cbi8vIFN1IENhbGMtU3VtXG4vLyAtLS0tLS0tLS0tLVxuLy8vIEdldCB0aGUgdG90YWwgc3VtIG9mIGZpeGVkIGFuZCBmbHVpZCBjb2x1bW4tdW5pdHNcbi8vLyBmb3IgY3JlYXRpbmcgYSBtaXhlZC11bml0IGxheW91dCB3aXRoIGBjYWxjKClgIHZhbHVlcy5cbi8vL1xuLy8vIEBncm91cCBzdS1tYXRoXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC1cbi8vLyAgIExpc3Qgb2YgY29sdW1ucyBhdmFpbGFibGVcbi8vLyBAcGFyYW0ge251bWJlcn0gJGd1dHRlcnMgLVxuLy8vICAgV2lkdGggb2YgYSBndXR0ZXIgaW4gY29sdW1uLWNvbXBhcmFibGUgdW5pdHNcbi8vLyBAcGFyYW0gezAgfCAxIHwgLTF9ICRzcHJlYWQgLVxuLy8vICAgTnVtYmVyIG9mIGd1dHRlcnMgc3Bhbm5lZCxcbi8vLyAgIHJlbGF0aXZlIHRvIGBzcGFuYCBjb3VudFxuLy8vIEBwYXJhbSB7Ym9vbH0gJHZhbGlkYXRlIFt0cnVlXSAtXG4vLy8gICBDaGVjayB0aGF0IGFyZ3VtZW50cyBhcmUgdmFsaWQgYmVmb3JlIHByb2NlZWRpbmdcbi8vL1xuLy8vIEByZXR1cm4ge21hcH0gLVxuLy8vICAgTWFwIHdpdGggYGZpeGVkYCBhbmQgYGZsdWlkYCBrZXlzXG4vLy8gICBjb250YWluaW5nIHRoZSBwcm9wZXIgbWF0aCBhcyBzdHJpbmdzXG5AZnVuY3Rpb24gX3N1LWNhbGMtc3VtKFxuICAkY29sdW1ucyxcbiAgJGd1dHRlcnMsXG4gICRzcHJlYWQsXG4gICR2YWxpZGF0ZTogdHJ1ZVxuKSB7XG4gIEBpZiAkdmFsaWRhdGUge1xuICAgICRjb2x1bW5zOiBzdS12YWxpZC1zcGFuKCRjb2x1bW5zKTtcbiAgICAkZ3V0dGVyczogc3UtdmFsaWQtZ3V0dGVycygkZ3V0dGVycyk7XG4gICAgJHNwcmVhZDogc3UtdmFsaWQtc3ByZWFkKCRzcHJlYWQpO1xuICB9XG5cbiAgJGZsdWlkOiAwO1xuICAkZml4ZWQ6ICgpO1xuICAkY2FsYzogbnVsbDtcblxuICAvLyBHdXR0ZXJzXG4gICRndXR0ZXJzOiAgJGd1dHRlcnMgKiAobGVuZ3RoKCRjb2x1bW5zKSArICRzcHJlYWQpO1xuXG4gIC8vIENvbHVtbnNcbiAgQGVhY2ggJGNvbCBpbiBhcHBlbmQoJGNvbHVtbnMsICRndXR0ZXJzKSB7XG4gICAgQGlmIHVuaXRsZXNzKCRjb2wpIHtcbiAgICAgICRmbHVpZDogJGZsdWlkICsgJGNvbDtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRmaXhlZDogX3N1LW1hcC1hZGQtdW5pdHMoJGZpeGVkLCAkY29sKTtcbiAgICB9XG4gIH1cblxuICAvLyBDb21waWxlIEZpeGVkIFVuaXRzXG4gIEBlYWNoICR1bml0LCAkdG90YWwgaW4gJGZpeGVkIHtcbiAgICBAaWYgKCR0b3RhbCAhPSAoMCAqICR0b3RhbCkpIHtcbiAgICAgICRjYWxjOiBpZigkY2FsYywgJyN7JGNhbGN9ICsgI3skdG90YWx9JywgJyN7JHRvdGFsfScpO1xuICAgIH1cbiAgfVxuXG4gIC8vIENhbGMgbnVsbCBvciBzdHJpbmdcbiAgQGlmICRjYWxjIHtcbiAgICAkY2FsYzogaWYoc3RyLWluZGV4KCRjYWxjLCAnKycpLCAnKCN7JGNhbGN9KScsICcjeyRjYWxjfScpO1xuICB9XG5cbiAgLy8gRmx1aWQgMCA9PiBudWxsXG4gICRmbHVpZDogaWYoKCRmbHVpZCA9PSAwKSwgbnVsbCwgJGZsdWlkKTtcblxuXG4gIC8vIFJldHVybiBtYXBcbiAgJHJldHVybjogKFxuICAgICdmaXhlZCc6ICRjYWxjLFxuICAgICdmbHVpZCc6ICRmbHVpZCxcbiAgKTtcblxuICBAcmV0dXJuICRyZXR1cm47XG59XG5cblxuXG4vLyBOZWVkcyBDYWxjXG4vLyAtLS0tLS0tLS0tXG4vLy8gQ2hlY2sgaWYgYGNhbGMoKWAgd2lsbCBiZSBuZWVkZWQgaW4gZGVmaW5pbmcgYSBzcGFuLFxuLy8vIGlmIHRoZSBuZWNlc3NhcnkgdW5pdHMgaW4gYSBncmlkIGFyZSBub3QgY29tcGFyYWJsZS5cbi8vL1xuLy8vIEBncm91cCBzdS1tYXRoXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge2xpc3R9ICRzcGFuIC1cbi8vLyAgIFNsaWNlIG9mIGNvbHVtbnMgdG8gc3BhblxuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLVxuLy8vICAgTGlzdCBvZiBhdmFpbGFibGUgY29sdW1ucyBpbiB0aGUgZ3JpZFxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVycyAtXG4vLy8gICBXaWR0aCBvZiBhIGd1dHRlclxuLy8vIEBwYXJhbSB7MCB8IDEgfCAtMX0gJHNwcmVhZCAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYHNwYW5gIGNvdW50XG4vLy8gQHBhcmFtIHtib29sfSAkdmFsaWRhdGUgW3RydWVdIC1cbi8vLyAgIENoZWNrIHRoYXQgYXJndW1lbnRzIGFyZSB2YWxpZCBiZWZvcmUgcHJvY2VlZGluZ1xuLy8vXG4vLy8gQHJldHVybiB7Ym9vbH0gLVxuLy8vICAgYFRydWVgIHdoZW4gdW5pdHMgZG8gbm90IG1hdGNoLCBhbmQgYGNhbGMoKWAgd2lsbCBiZSByZXF1aXJlZFxuQGZ1bmN0aW9uIF9zdS1uZWVkcy1jYWxjLW91dHB1dChcbiAgJHNwYW4sXG4gICRjb2x1bW5zLFxuICAkZ3V0dGVycyxcbiAgJHNwcmVhZCxcbiAgJHZhbGlkYXRlOiB0cnVlXG4pIHtcbiAgQGlmICR2YWxpZGF0ZSB7XG4gICAgJHNwYW46IHN1LXZhbGlkLXNwYW4oJHNwYW4pO1xuICAgICRjb2x1bW5zOiBzdS12YWxpZC1jb2x1bW5zKCRjb2x1bW5zKTtcbiAgICAkZ3V0dGVyczogc3UtdmFsaWQtZ3V0dGVycygkZ3V0dGVycyk7XG4gIH1cblxuICAkaGFzLWd1dHRlcjogaWYoKGxlbmd0aCgkc3BhbikgPiAxKSBvciAoJHNwcmVhZCA+PSAwKSwgdHJ1ZSwgZmFsc2UpO1xuICAkY2hlY2s6IGlmKCRoYXMtZ3V0dGVyLCBhcHBlbmQoJHNwYW4sICRndXR0ZXJzKSwgJHNwYW4pO1xuICAkc2FmZS1zcGFuOiBfc3UtaXMtY29tcGFyYWJsZSgkY2hlY2suLi4pO1xuXG4gIEBpZiAoJHNhZmUtc3BhbiA9PSAnc3RhdGljJykge1xuICAgIEByZXR1cm4gZmFsc2U7XG4gIH0gQGVsc2UgaWYgKG5vdCAkc2FmZS1zcGFuKSB7XG4gICAgQHJldHVybiB0cnVlO1xuICB9XG5cbiAgJHNhZmUtZmx1aWQ6IF9zdS1pcy1jb21wYXJhYmxlKCRndXR0ZXJzLCAkY29sdW1ucy4uLik7XG5cbiAgQHJldHVybiBub3QgJHNhZmUtZmx1aWQ7XG59XG4iXX0= */
