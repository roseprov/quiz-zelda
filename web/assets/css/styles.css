@charset "UTF-8";
/**** BIBLIOTHÈQUES (dans le dossier bower_components) ****/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/**** utilitaires ****/
/**
 * @author Rose Provencher
 * ------------------
 * TABLE DES MATIÈRES
 * ------------------
 *
 * Polices de caractères
 * Palette de couleurs
 * Points de rupture
 **/
/** Polices de caractère **/
@font-face {
  font-family: 'cinzelDecorative';
  src: url("../polices/CinzelDecorative-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'crimsonTextBold';
  src: url("../polices/CrimsonText-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'crimsonText';
  src: url("../polices/CrimsonText-SemiBold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/** Palette de couleurs **/
/** Points de rupture **/
/******** Utilitaires de base (BoxSizing, Clearfix) *********/
/* BoxSizing */
/* Clearfix: pour contrer le problème des enfants flottants*/
.cf:after {
  content: " ";
  display: table;
  clear: both;
}

/******** Utilitaires pour accessibilité *********/
.visuallyhidden,
.screen-reader-only {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus,
.screen-reader-only.focusable:active,
.screen-reader-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}

/******** Utilitaires pour typographie *********/
/********* Mixins généraux *********/
/**** base (typo) ****/
/**
* --------------------------------------------------------
* TABLE DES MATIÈRES - Typographie responsive (Mobile First)
* --------------------------------------------------------
* Base décimale
* Hiérarchie responsive
*/
/** Base décimale **/
html {
  font-size: 62.5%;
}

body {
  /* 16px pour toutes les largeurs d'écran */
  font-size: 18px;
  font-size: 1.8rem;
  /* facteur multiplicateur de la taille de la police 1.375x16 = 22 */
  line-height: 1.375;
}

@media (min-width: 551px) {
  body {
    font-size: 18px;
    font-size: 1.8rem;
    line-height: 1.5;
  }
}

@media (min-width: 1000px) {
  body {
    line-height: 1.75;
  }
}

/** Hiérarchie responsive **/
/*  plus proche = plus petit  &  plus loin = plus grand */
/* TITRES NIVEAU 1 */
h1,
.h1 {
  /* = 32px */
  font-size: 20px;
  font-size: 2rem;
}

@media (min-width: 551px) {
  h1,
  .h1 {
    /* = 40px */
    font-size: 26px;
    font-size: 2.6rem;
  }
}

/* TITRES NIVEAU 2 */
h2,
.h2 {
  /* = 24px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h2,
  .h2 {
    /* = 32px */
    font-size: 24px;
    font-size: 2.4rem;
  }
}

/* TITRES NIVEAU 3 */
h3,
.h3 {
  /* = 18px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h3,
  .h3 {
    /* = 24px */
    font-size: 20px;
    font-size: 2rem;
  }
}

/* TITRES NIVEAU 4 */
h4,
.h4 {
  /* = 16px */
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 551px) {
  h4,
  .h4 {
    /* = 18px */
    font-size: 18px;
    font-size: 1.8rem;
  }
}

/**** modules ****/
/*!
 * animate.css -http://daneden.me/animate
 * Version - 3.7.0
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 *
 * Copyright (c) 2018 Daniel Eden
 * Animations are slightly modified from the original.
 */
@-webkit-keyframes pulse {
  0%, 86%, 92%, 100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  89%, 96% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
}
@keyframes pulse {
  0%, 86%, 92%, 100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  89%, 96% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05);
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
    -webkit-transition: all 1.5s ease;
    transition: all 1.5s ease;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    -webkit-transition: all 1.5s ease;
    transition: all 1.5s ease;
  }
  to {
    opacity: 1;
  }
}

@-webkit-keyframes slideInRight {
  from {
    opacity: 0;
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    -webkit-transition: all 2s ease;
    transition: all 2s ease;
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    -webkit-transform: translate(100%, 0);
    transform: translate(100%, 0);
    -webkit-transition: all 2s ease;
    transition: all 2s ease;
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
    transform: translate(0, 0);
  }
}

.pageAccueil .titre {
  -webkit-animation: fadeIn 2s;
  animation: fadeIn 2s;
}

.pageAccueil .introduction {
  opacity: 0;
  -webkit-animation: slideInRight 1s 1.5s;
  animation: slideInRight 1s 1.5s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.pageAccueil .btnSoumettre {
  opacity: 0;
  -webkit-animation: fadeIn 1.5s 2.5s, pulse 6.5s 9s infinite;
  animation: fadeIn 1.5s 2.5s, pulse 6.5s 9s infinite;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.titre {
  margin: 0;
  font-family: cinzelDecorative, serif;
  color: #FFFFFF;
  text-decoration: none;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.titre .zelda {
  color: #D32121;
  display: block;
}

.bouton {
  display: block;
  background-color: rgba(0, 0, 0, 0.7);
  border: 1px solid #FFFFFF;
  color: #FFFFFF;
  font-family: cinzelDecorative, serif;
  text-decoration: none;
  text-align: center;
  padding: 14px 0;
  font-size: 16px;
  font-size: 1.6rem;
  width: 100%;
  -webkit-transition: all, 200ms ease;
  transition: all, 200ms ease;
}

@media (min-width: 551px) {
  .bouton {
    width: 47.36842%;
  }
}

@media (min-width: 851px) {
  .bouton {
    width: 23.72881%;
  }
}

.bouton:hover, .bouton:focus {
  outline: none;
  -webkit-box-shadow: 0 0 0.6rem #FFFFFF;
  box-shadow: 0 0 0.6rem #FFFFFF;
}

.imgQuestion img {
  width: 47.36842%;
}

@media (min-width: 851px) {
  .imgQuestion img {
    width: 32.20339%;
  }
}

img {
  width: 100%;
}

/***** MISE EN PAGE SUSY ******/
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

@media (max-width: 850px) {
  .conteneur {
    min-width: 305px;
    padding: 0 2.63158%;
  }
}

@media (min-width: 851px) {
  .conteneur {
    max-width: 1280px;
    margin: 0 auto;
  }
}

/** Styles **/
body {
  overflow-x: hidden;
}

.header {
  background-color: rgba(0, 0, 0, 0.7);
  height: 75px;
}

.title {
  margin: 0;
}

.pageAccueil {
  font-family: crimsonTextBold, serif;
  color: white;
  background: url("../images/bg_accueil_w800.jpg") no-repeat center center fixed;
  background-size: cover;
}

@media (min-width: 851px) {
  .pageAccueil {
    background: url("../images/bg_accueil_w1280.jpg") no-repeat center center fixed;
    background-size: cover;
  }
}

@media (min-width: 1000px) {
  .pageAccueil {
    background: url("../images/bg_accueil_w2560.jpg") no-repeat center center fixed;
    background-size: cover;
  }
}

.containerAccueil {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media (min-width: 551px) {
  .containerAccueil {
    -webkit-box-align: end;
    -ms-flex-align: end;
    align-items: flex-end;
  }
}

@media (min-width: 851px) {
  .containerAccueil {
    -ms-flex-pack: distribute;
    justify-content: space-around;
  }
}

.containerAccueil .titre {
  margin: 2rem 0 0 0;
  color: #000000;
  font-size: 26px;
  font-size: 2.6rem;
}

@media (min-width: 551px) {
  .containerAccueil .titre {
    font-size: 34px;
    font-size: 3.4rem;
    width: 73.68421%;
  }
}

@media (min-width: 851px) {
  .containerAccueil .titre {
    font-size: 36px;
    font-size: 3.6rem;
    width: 49.15254%;
    margin-right: 8.47458%;
  }
}

@media (min-width: 1000px) {
  .containerAccueil .titre {
    width: 40.67797%;
  }
}

.containerAccueil .introduction {
  display: block;
  line-height: 26px;
  background-color: rgba(0, 0, 0, 0.6);
  padding: 1rem 2rem;
  margin: 5rem -2rem;
  font-size: 16px;
  font-size: 1.6rem;
}

.containerAccueil .introduction p {
  padding-right: 4rem;
  padding-left: 1rem;
}

.containerAccueil .introduction p:first-child {
  margin-bottom: 2rem;
}

@media (min-width: 551px) {
  .containerAccueil .introduction {
    width: 76.31579%;
    padding-right: 2rem;
  }
}

@media (min-width: 851px) {
  .containerAccueil .introduction {
    padding-right: 6.77966%;
    margin: 5rem 0;
    width: 57.62712%;
  }
}

@media (min-width: 1000px) {
  .containerAccueil .introduction {
    width: 40.67797%;
    padding-right: 0;
    margin-right: 8.47458%;
  }
}

@media (min-width: 851px) {
  .containerAccueil .btnSoumettre {
    margin-right: 8.47458%;
  }
}

.bg_quiz {
  background: url("../images/bg_quiz.jpg") no-repeat;
  background-size: cover;
}

.pageQuiz {
  position: relative;
  font-family: crimsonText, serif;
  text-align: center;
}

@media (min-width: 851px) {
  .pageQuiz {
    text-align: left;
  }
}

.pageQuiz .indicateurQuestion,
.pageQuiz .zonePointage {
  font-family: cinzelDecorative, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-size: 14px;
  font-size: 1.4rem;
}

.pageQuiz .indicateurQuestion {
  text-align: center;
}

.pageQuiz .zonePointage {
  text-align: right;
  margin: auto 1rem;
}

.pageQuiz .instructionQuestion {
  margin: 0;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.pageQuiz .icone-pouch {
  display: inline-block;
  background: url("../images/icones/pouch_ico.svg") no-repeat;
  width: 2.5rem;
}

.pageQuiz fieldset {
  border: none;
  padding: 0;
  margin: 0;
}

@media (min-width: 851px) {
  .pageQuiz fieldset .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .pageQuiz fieldset .flex .flexitem {
    width: 40.67797%;
  }
}

.pageQuiz .question {
  font-family: crimsonTextBold, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-size: 18px;
  font-size: 1.8rem;
}

@media (min-width: 451px) {
  .pageQuiz .question {
    font-size: 26px;
    font-size: 2.6rem;
  }
}

@media (min-width: 851px) {
  .pageQuiz .question {
    width: 79.16667%;
  }
}

.pageQuiz .q1 .imgQuestion img {
  border: solid 2px #686868;
  width: 100%;
}

@media (min-width: 551px) {
  .pageQuiz .q1 .imgQuestion img {
    width: 47.36842%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .q1 .imgQuestion img {
    width: 79.16667%;
  }
}

.pageQuiz .choixReponses {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  list-style: none;
  text-align: left;
  padding: 0;
}

@media (min-width: 851px) {
  .pageQuiz .choixReponses {
    display: block;
  }
}

.pageQuiz .choixReponses .choix {
  border: 2px solid #686868;
  background-color: rgba(255, 255, 255, 0.5);
  margin-bottom: 0.5rem;
  width: 100%;
}

@media (min-width: 551px) {
  .pageQuiz .choixReponses .choix {
    width: 57.89474%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .choixReponses .choix {
    width: 100%;
  }
}

.pageQuiz .choixReponses .choix:hover {
  -webkit-box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.16);
  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.16);
}

.pageQuiz .choixReponses .choix .label {
  display: inline-block;
  width: 100%;
  padding: 20px 0;
}

.pageQuiz .choixReponses .choix .label span {
  padding-left: 26.31579%;
}

.pageQuiz .choixReponses .choix .input {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.pageQuiz .choixReponses .choix .input.focusable:active, .pageQuiz .choixReponses .choix .input.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: normal;
  width: auto;
}

@media (min-width: 851px) {
  .pageQuiz .reponse {
    width: 40.67797%;
  }
}

.pageQuiz .reponse .retroaction {
  margin-top: 0;
}

.pageQuiz .reponse .flex {
  display: block;
  font-size: 16px;
  font-size: 1.6rem;
  text-align: center;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin: auto;
    width: 73.68421%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .flex {
    width: 100%;
  }
}

.pageQuiz .reponse .flex .explication {
  text-align: left;
  font-family: crimsonTextBold, serif;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.pageQuiz .reponse .flex .explication p {
  margin: 0 0 1rem 0;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .explication {
    width: 64.28571%;
  }
}

.pageQuiz .reponse .flex .imgReponse img {
  width: 47.36842%;
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .imgReponse img {
    width: 100%;
  }
}

@media (min-width: 551px) {
  .pageQuiz .reponse .flex .imgReponse {
    width: 28.57143%;
    margin-right: 5.26316%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .flex .imgReponse {
    width: 37.5%;
  }
}

@media (min-width: 551px) {
  .pageQuiz .reponse .btn_next {
    margin-left: 52.63158%;
  }
}

@media (min-width: 851px) {
  .pageQuiz .reponse .btn_next {
    width: 58.33333%;
    margin-left: 41.66667%;
  }
}

.footer {
  display: block;
  width: 100%;
}

.footer .creditPhoto {
  color: #FFFFFF;
  font-size: 10px;
  font-size: 1rem;
  font-family: Cabin, Helvetica, sans-serif;
}

.footer .creditPhoto a {
  text-decoration: none;
}

.footer .fond {
  text-align: center;
  background-color: #000000;
  color: #B2B2B2;
  font-family: Cabin, Helvetica, sans-serif;
  padding: 0.25rem;
  font-size: 12px;
  font-size: 1.2rem;
}

.footer .fond .attributions {
  display: block;
  color: #B2B2B2;
  font-family: Cabin, Helvetica, sans-serif;
  font-size: 10px;
  font-size: 1rem;
}

.pageAccueil .footer {
  position: fixed;
  bottom: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5jc3MiLCJzdHlsZXMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtY3NzL25vcm1hbGl6ZS5zY3NzIiwidXRpbGl0YWlyZXMvX3ZhcmlhYmxlcy5zY3NzIiwidXRpbGl0YWlyZXMvX21peGlucy5zY3NzIiwiYmFzZS9fdHlwby5zY3NzIiwibW9kdWxlcy9fYW5pbWF0aW9ucy5zY3NzIiwibW9kdWxlcy9fZ2VuZXJhbC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L19zdS1tYXRoLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCLDREQUE0RDtBQ0E1RCw0RUFBNEU7QUFFNUU7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVIO0VBQ0Usa0JBQWlCO0VBQUUsT0FBTztFQUMxQiwrQkFBOEI7RUFBRSxPQUFPO0NBQ3hDOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsVUFBUztDQUNWOztBQUVEOztHQUVHO0FBRUg7RUFDRSxlQUFjO0NBQ2Y7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxlQUFjO0VBQ2QsaUJBQWdCO0NBQ2pCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLGdDQUF1QjtFQUF2Qix3QkFBdUI7RUFBRSxPQUFPO0VBQ2hDLFVBQVM7RUFBRSxPQUFPO0VBQ2xCLGtCQUFpQjtFQUFFLE9BQU87Q0FDM0I7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPO0NBQ3hCOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQTZCO0NBQzlCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0Usb0JBQW1CO0VBQUUsT0FBTztFQUM1QiwyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLDBDQUFpQztFQUFqQyxrQ0FBaUM7RUFBRSxPQUFPO0NBQzNDOztBQUVEOztHQUVHO0FBRUg7O0VB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TjtJQXNKUSxZQUFVO0dBaUNiO0NEdW5CSjs7QUM5eUJEO0VBMEpRLGlCQUFnQjtFQUNoQixvQ0VyUzBCO0VGc1MxQiwwQ0VwUnlCO0NGOFIxQjs7QUF0S1A7RUE4SlUsbUJBQWlCO0NBQ2xCOztBQUNEO0VBaEtSO0lBaUtVLGlCT2hQc0M7R1BxUHpDO0NEd3BCTjs7QUM5ekJEO0VBMEtVLGlCT3pQc0M7Q1A2UHZDOztBQUhDO0VBM0tWO0lBNEtZLFlBQVU7R0FFYjtDRDBwQlI7O0FDenBCTztFQS9LUjtJQWdMVSxpQk8vUHNDO0lQZ1F0Qyx1Qk83TWlDO0dQa05wQztDRHlwQk47O0FDNXBCTztFQW5MUjtJQW9MVSxhT25Rc0M7R1BxUXpDO0NEK3BCTjs7QUMzcEJLO0VBMUxOO0lBMkxRLHVCTzFRd0M7R1BpUjNDO0NEeXBCSjs7QUM5cEJLO0VBN0xOO0lBK0xRLGlCTzlRd0M7SVArUXhDLHVCTy9Rd0M7R1BpUjNDO0NEZ3FCSjs7QUMzcEJEO0VBQ0UsZUFBYTtFQUNiLFlBQVU7Q0EyQlg7O0FBN0JEO0VBS0ksZUU3VVc7RUMwQmIsZ0JIdVR3QjtFR3RUeEIsZ0JBTHlCO0VINFR2QiwwQ0FBeUM7Q0FDMUM7O0FBWEg7RUFPTSxzQkFBcUI7Q0FDdEI7O0FBUkw7RUFjSSxtQkFBa0I7RUFDbEIsMEJFeFZVO0VGeVZWLGVBQWM7RUFDZCwwQ0FBeUM7RUFDekMsaUJBQWU7RUdoVWpCLGdCSGlVd0I7RUdoVXhCLGtCQUx5QjtDSDZVeEI7O0FBM0JIO0VBc0JNLGVBQWE7RUFDYixlQUFjO0VBQ2QsMENBQXlDO0VHdFU3QyxnQkh1VTBCO0VHdFUxQixnQkFMeUI7Q0g0VXRCOztBQU1MO0VBRUksZ0JBQWU7RUFDZixVQUFRO0NBQ1QiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qKioqIEJJQkxJT1RIw4hRVUVTIChkYW5zIGxlIGRvc3NpZXIgYm93ZXJfY29tcG9uZW50cykgKioqKi9cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqKiogdXRpbGl0YWlyZXMgKioqKi9cbi8qKlxyXG4gKiBAYXV0aG9yIFJvc2UgUHJvdmVuY2hlclxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICogVEFCTEUgREVTIE1BVEnDiFJFU1xyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICpcclxuICogUG9saWNlcyBkZSBjYXJhY3TDqHJlc1xyXG4gKiBQYWxldHRlIGRlIGNvdWxldXJzXHJcbiAqIFBvaW50cyBkZSBydXB0dXJlXHJcbiAqKi9cbi8qKiBQb2xpY2VzIGRlIGNhcmFjdMOocmUgKiovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdjaW56ZWxEZWNvcmF0aXZlJztcbiAgc3JjOiB1cmwoXCIuLi9wb2xpY2VzL0NpbnplbERlY29yYXRpdmUtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnY3JpbXNvblRleHRCb2xkJztcbiAgc3JjOiB1cmwoXCIuLi9wb2xpY2VzL0NyaW1zb25UZXh0LUJvbGQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2NyaW1zb25UZXh0JztcbiAgc3JjOiB1cmwoXCIuLi9wb2xpY2VzL0NyaW1zb25UZXh0LVNlbWlCb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4vKiogUGFsZXR0ZSBkZSBjb3VsZXVycyAqKi9cbi8qKiBQb2ludHMgZGUgcnVwdHVyZSAqKi9cbi8qKioqKioqKiBVdGlsaXRhaXJlcyBkZSBiYXNlIChCb3hTaXppbmcsIENsZWFyZml4KSAqKioqKioqKiovXG4vKiBCb3hTaXppbmcgKi9cbi8qIENsZWFyZml4OiBwb3VyIGNvbnRyZXIgbGUgcHJvYmzDqG1lIGRlcyBlbmZhbnRzIGZsb3R0YW50cyovXG4uY2Y6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4vKioqKioqKiogVXRpbGl0YWlyZXMgcG91ciBhY2Nlc3NpYmlsaXTDqSAqKioqKioqKiovXG4udmlzdWFsbHloaWRkZW4sXG4uc2NyZWVuLXJlYWRlci1vbmx5IHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAxcHg7XG59XG5cbi52aXN1YWxseWhpZGRlbi5mb2N1c2FibGU6YWN0aXZlLCAudmlzdWFsbHloaWRkZW4uZm9jdXNhYmxlOmZvY3VzLFxuLnNjcmVlbi1yZWFkZXItb25seS5mb2N1c2FibGU6YWN0aXZlLFxuLnNjcmVlbi1yZWFkZXItb25seS5mb2N1c2FibGU6Zm9jdXMge1xuICBjbGlwOiBhdXRvO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbjogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4vKioqKioqKiogVXRpbGl0YWlyZXMgcG91ciB0eXBvZ3JhcGhpZSAqKioqKioqKiovXG4vKioqKioqKioqIE1peGlucyBnw6luw6lyYXV4ICoqKioqKioqKi9cbi8qKioqIGJhc2UgKHR5cG8pICoqKiovXG4vKipcclxuKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4qIFRBQkxFIERFUyBNQVRJw4hSRVMgLSBUeXBvZ3JhcGhpZSByZXNwb25zaXZlIChNb2JpbGUgRmlyc3QpXHJcbiogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuKiBCYXNlIGTDqWNpbWFsZVxyXG4qIEhpw6lyYXJjaGllIHJlc3BvbnNpdmVcclxuKi9cbi8qKiBCYXNlIGTDqWNpbWFsZSAqKi9cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgLyogMTZweCBwb3VyIHRvdXRlcyBsZXMgbGFyZ2V1cnMgZCfDqWNyYW4gKi9cbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgLyogZmFjdGV1ciBtdWx0aXBsaWNhdGV1ciBkZSBsYSB0YWlsbGUgZGUgbGEgcG9saWNlIDEuMzc1eDE2ID0gMjIgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMzc1O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICBib2R5IHtcbiAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgfVxufVxuXG4vKiogSGnDqXJhcmNoaWUgcmVzcG9uc2l2ZSAqKi9cbi8qICBwbHVzIHByb2NoZSA9IHBsdXMgcGV0aXQgICYgIHBsdXMgbG9pbiA9IHBsdXMgZ3JhbmQgKi9cbi8qIFRJVFJFUyBOSVZFQVUgMSAqL1xuaDEsXG4uaDEge1xuICAvKiA9IDMycHggKi9cbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXNpemU6IDJyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICBoMSxcbiAgLmgxIHtcbiAgICAvKiA9IDQwcHggKi9cbiAgICBmb250LXNpemU6IDI2cHg7XG4gICAgZm9udC1zaXplOiAyLjZyZW07XG4gIH1cbn1cblxuLyogVElUUkVTIE5JVkVBVSAyICovXG5oMixcbi5oMiB7XG4gIC8qID0gMjRweCAqL1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgaDIsXG4gIC5oMiB7XG4gICAgLyogPSAzMnB4ICovXG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICB9XG59XG5cbi8qIFRJVFJFUyBOSVZFQVUgMyAqL1xuaDMsXG4uaDMge1xuICAvKiA9IDE4cHggKi9cbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIGgzLFxuICAuaDMge1xuICAgIC8qID0gMjRweCAqL1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbn1cblxuLyogVElUUkVTIE5JVkVBVSA0ICovXG5oNCxcbi5oNCB7XG4gIC8qID0gMTZweCAqL1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgaDQsXG4gIC5oNCB7XG4gICAgLyogPSAxOHB4ICovXG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGZvbnQtc2l6ZTogMS44cmVtO1xuICB9XG59XG5cbi8qKioqIG1vZHVsZXMgKioqKi9cbi8qIVxyXG4gKiBhbmltYXRlLmNzcyAtaHR0cDovL2RhbmVkZW4ubWUvYW5pbWF0ZVxyXG4gKiBWZXJzaW9uIC0gMy43LjBcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIC0gaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggRGFuaWVsIEVkZW5cclxuICogQW5pbWF0aW9ucyBhcmUgc2xpZ2h0bHkgbW9kaWZpZWQgZnJvbSB0aGUgb3JpZ2luYWwuXHJcbiAqL1xuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlLCA4NiUsIDkyJSwgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMSwgMSwgMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xuICB9XG4gIDg5JSwgOTYlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgxLjA1LCAxLjA1LCAxLjA1KTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4wNSwgMS4wNSwgMS4wNSk7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjVzIGVhc2U7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBzbGlkZUluUmlnaHQge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDEwMCUsIDApO1xuICAgIHRyYW5zaXRpb246IGFsbCAycyBlYXNlO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xuICB9XG59XG5cbi5wYWdlQWNjdWVpbCAudGl0cmUge1xuICBhbmltYXRpb246IGZhZGVJbiAycztcbn1cblxuLnBhZ2VBY2N1ZWlsIC5pbnRyb2R1Y3Rpb24ge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IHNsaWRlSW5SaWdodCAxcyAxLjVzO1xuICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG5cbi5wYWdlQWNjdWVpbCAuYnRuU291bWV0dHJlIHtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uOiBmYWRlSW4gMS41cyAyLjVzLCBwdWxzZSA2LjVzIDlzIGluZmluaXRlO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuLnRpdHJlIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogY2luemVsRGVjb3JhdGl2ZSwgc2VyaWY7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRleHQtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4udGl0cmUgLnplbGRhIHtcbiAgY29sb3I6ICNEMzIxMjE7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uYm91dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgYm9yZGVyOiAxcHggc29saWQgI0ZGRkZGRjtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtZmFtaWx5OiBjaW56ZWxEZWNvcmF0aXZlLCBzZXJpZjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDE0cHggMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zaXRpb246IGFsbCwgMjAwbXMgZWFzZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5ib3V0b24ge1xuICAgIHdpZHRoOiA0Ny4zNjg0MiU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5ib3V0b24ge1xuICAgIHdpZHRoOiAyMy43Mjg4MSU7XG4gIH1cbn1cblxuLmJvdXRvbjpob3ZlciwgLmJvdXRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaGFkb3c6IDAgMCAwLjZyZW0gI0ZGRkZGRjtcbn1cblxuLmltZ1F1ZXN0aW9uIGltZyB7XG4gIHdpZHRoOiA0Ny4zNjg0MiU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAuaW1nUXVlc3Rpb24gaW1nIHtcbiAgICB3aWR0aDogMzIuMjAzMzklO1xuICB9XG59XG5cbmltZyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKioqKiogTUlTRSBFTiBQQUdFIFNVU1kgKioqKioqL1xuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4NTBweCkge1xuICAuY29udGVuZXVyIHtcbiAgICBtaW4td2lkdGg6IDMwNXB4O1xuICAgIHBhZGRpbmc6IDAgMi42MzE1OCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5jb250ZW5ldXIge1xuICAgIG1heC13aWR0aDogMTI4MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5cbi8qKiBTdHlsZXMgKiovXG5ib2R5IHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBoZWlnaHQ6IDc1cHg7XG59XG5cbi50aXRsZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLnBhZ2VBY2N1ZWlsIHtcbiAgZm9udC1mYW1pbHk6IGNyaW1zb25UZXh0Qm9sZCwgc2VyaWY7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2JnX2FjY3VlaWxfdzgwMC5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgZml4ZWQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZUFjY3VlaWwge1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9iZ19hY2N1ZWlsX3cxMjgwLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDAwcHgpIHtcbiAgLnBhZ2VBY2N1ZWlsIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvYmdfYWNjdWVpbF93MjU2MC5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG4uY29udGFpbmVyQWNjdWVpbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cbn1cblxuLmNvbnRhaW5lckFjY3VlaWwgLnRpdHJlIHtcbiAgbWFyZ2luOiAycmVtIDAgMCAwO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1zaXplOiAyNnB4O1xuICBmb250LXNpemU6IDIuNnJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5jb250YWluZXJBY2N1ZWlsIC50aXRyZSB7XG4gICAgZm9udC1zaXplOiAzNHB4O1xuICAgIGZvbnQtc2l6ZTogMy40cmVtO1xuICAgIHdpZHRoOiA3My42ODQyMSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5jb250YWluZXJBY2N1ZWlsIC50aXRyZSB7XG4gICAgZm9udC1zaXplOiAzNnB4O1xuICAgIGZvbnQtc2l6ZTogMy42cmVtO1xuICAgIHdpZHRoOiA0OS4xNTI1NCU7XG4gICAgbWFyZ2luLXJpZ2h0OiA4LjQ3NDU4JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4gIC5jb250YWluZXJBY2N1ZWlsIC50aXRyZSB7XG4gICAgd2lkdGg6IDQwLjY3Nzk3JTtcbiAgfVxufVxuXG4uY29udGFpbmVyQWNjdWVpbCAuaW50cm9kdWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7XG4gIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgbWFyZ2luOiA1cmVtIC0ycmVtO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xufVxuXG4uY29udGFpbmVyQWNjdWVpbCAuaW50cm9kdWN0aW9uIHAge1xuICBwYWRkaW5nLXJpZ2h0OiA0cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG5cbi5jb250YWluZXJBY2N1ZWlsIC5pbnRyb2R1Y3Rpb24gcDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCAuaW50cm9kdWN0aW9uIHtcbiAgICB3aWR0aDogNzYuMzE1NzklO1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5jb250YWluZXJBY2N1ZWlsIC5pbnRyb2R1Y3Rpb24ge1xuICAgIHBhZGRpbmctcmlnaHQ6IDYuNzc5NjYlO1xuICAgIG1hcmdpbjogNXJlbSAwO1xuICAgIHdpZHRoOiA1Ny42MjcxMiU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAuY29udGFpbmVyQWNjdWVpbCAuaW50cm9kdWN0aW9uIHtcbiAgICB3aWR0aDogNDAuNjc3OTclO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiA4LjQ3NDU4JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLmNvbnRhaW5lckFjY3VlaWwgLmJ0blNvdW1ldHRyZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4LjQ3NDU4JTtcbiAgfVxufVxuXG4uYmdfcXVpeiB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9iZ19xdWl6LmpwZ1wiKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5wYWdlUXVpeiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1mYW1pbHk6IGNyaW1zb25UZXh0LCBzZXJpZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59XG5cbi5wYWdlUXVpeiAuaW5kaWNhdGV1clF1ZXN0aW9uLFxuLnBhZ2VRdWl6IC56b25lUG9pbnRhZ2Uge1xuICBmb250LWZhbWlseTogY2luemVsRGVjb3JhdGl2ZSwgc2VyaWY7XG4gIHRleHQtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xufVxuXG4ucGFnZVF1aXogLmluZGljYXRldXJRdWVzdGlvbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBhZ2VRdWl6IC56b25lUG9pbnRhZ2Uge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgbWFyZ2luOiBhdXRvIDFyZW07XG59XG5cbi5wYWdlUXVpeiAuaW5zdHJ1Y3Rpb25RdWVzdGlvbiB7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG59XG5cbi5wYWdlUXVpeiAuaWNvbmUtcG91Y2gge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9pY29uZXMvcG91Y2hfaWNvLnN2Z1wiKSBuby1yZXBlYXQ7XG4gIHdpZHRoOiAyLjVyZW07XG59XG5cbi5wYWdlUXVpeiBmaWVsZHNldCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IGZpZWxkc2V0IC5mbGV4IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG4gIC5wYWdlUXVpeiBmaWVsZHNldCAuZmxleCAuZmxleGl0ZW0ge1xuICAgIHdpZHRoOiA0MC42Nzc5NyU7XG4gIH1cbn1cblxuLnBhZ2VRdWl6IC5xdWVzdGlvbiB7XG4gIGZvbnQtZmFtaWx5OiBjcmltc29uVGV4dEJvbGQsIHNlcmlmO1xuICB0ZXh0LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1MXB4KSB7XG4gIC5wYWdlUXVpeiAucXVlc3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICBmb250LXNpemU6IDIuNnJlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5xdWVzdGlvbiB7XG4gICAgd2lkdGg6IDc5LjE2NjY3JTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLnExIC5pbWdRdWVzdGlvbiBpbWcge1xuICBib3JkZXI6IHNvbGlkIDJweCAjNjg2ODY4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5wYWdlUXVpeiAucTEgLmltZ1F1ZXN0aW9uIGltZyB7XG4gICAgd2lkdGg6IDQ3LjM2ODQyJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5xMSAuaW1nUXVlc3Rpb24gaW1nIHtcbiAgICB3aWR0aDogNzkuMTY2NjclO1xuICB9XG59XG5cbi5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZVF1aXogLmNob2l4UmVwb25zZXMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyAuY2hvaXgge1xuICBib3JkZXI6IDJweCBzb2xpZCAjNjg2ODY4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAucGFnZVF1aXogLmNob2l4UmVwb25zZXMgLmNob2l4IHtcbiAgICB3aWR0aDogNTcuODk0NzQlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZVF1aXogLmNob2l4UmVwb25zZXMgLmNob2l4IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLmNob2l4UmVwb25zZXMgLmNob2l4OmhvdmVyIHtcbiAgYm94LXNoYWRvdzogM3B4IDNweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE2KTtcbn1cblxuLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peCAubGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAyMHB4IDA7XG59XG5cbi5wYWdlUXVpeiAuY2hvaXhSZXBvbnNlcyAuY2hvaXggLmxhYmVsIHNwYW4ge1xuICBwYWRkaW5nLWxlZnQ6IDI2LjMxNTc5JTtcbn1cblxuLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peCAuaW5wdXQge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgd2lkdGg6IDFweDtcbn1cblxuLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peCAuaW5wdXQuZm9jdXNhYmxlOmFjdGl2ZSwgLnBhZ2VRdWl6IC5jaG9peFJlcG9uc2VzIC5jaG9peCAuaW5wdXQuZm9jdXNhYmxlOmZvY3VzIHtcbiAgY2xpcDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW46IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICBwb3NpdGlvbjogc3RhdGljO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICB3aWR0aDogYXV0bztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDg1MXB4KSB7XG4gIC5wYWdlUXVpeiAucmVwb25zZSB7XG4gICAgd2lkdGg6IDQwLjY3Nzk3JTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLnJldHJvYWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLnBhZ2VRdWl6IC5yZXBvbnNlIC5mbGV4IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5wYWdlUXVpeiAucmVwb25zZSAuZmxleCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDczLjY4NDIxJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5mbGV4IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmV4cGxpY2F0aW9uIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1mYW1pbHk6IGNyaW1zb25UZXh0Qm9sZCwgc2VyaWY7XG4gIHRleHQtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4ucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmV4cGxpY2F0aW9uIHAge1xuICBtYXJnaW46IDAgMCAxcmVtIDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NTFweCkge1xuICAucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmV4cGxpY2F0aW9uIHtcbiAgICB3aWR0aDogNjQuMjg1NzElO1xuICB9XG59XG5cbi5wYWdlUXVpeiAucmVwb25zZSAuZmxleCAuaW1nUmVwb25zZSBpbWcge1xuICB3aWR0aDogNDcuMzY4NDIlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5mbGV4IC5pbWdSZXBvbnNlIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU1MXB4KSB7XG4gIC5wYWdlUXVpeiAucmVwb25zZSAuZmxleCAuaW1nUmVwb25zZSB7XG4gICAgd2lkdGg6IDI4LjU3MTQzJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDUuMjYzMTYlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA4NTFweCkge1xuICAucGFnZVF1aXogLnJlcG9uc2UgLmZsZXggLmltZ1JlcG9uc2Uge1xuICAgIHdpZHRoOiAzNy41JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5idG5fbmV4dCB7XG4gICAgbWFyZ2luLWxlZnQ6IDUyLjYzMTU4JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogODUxcHgpIHtcbiAgLnBhZ2VRdWl6IC5yZXBvbnNlIC5idG5fbmV4dCB7XG4gICAgd2lkdGg6IDU4LjMzMzMzJTtcbiAgICBtYXJnaW4tbGVmdDogNDEuNjY2NjclO1xuICB9XG59XG5cbi5mb290ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb290ZXIgLmNyZWRpdFBob3RvIHtcbiAgY29sb3I6ICNGRkZGRkY7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbn1cblxuLmZvb3RlciAuY3JlZGl0UGhvdG8gYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmZvb3RlciAuZm9uZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgY29sb3I6ICNCMkIyQjI7XG4gIGZvbnQtZmFtaWx5OiBDYWJpbiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBwYWRkaW5nOiAwLjI1cmVtO1xuICBmb250LXNpemU6IDEycHg7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xufVxuXG4uZm9vdGVyIC5mb25kIC5hdHRyaWJ1dGlvbnMge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICNCMkIyQjI7XG4gIGZvbnQtZmFtaWx5OiBDYWJpbiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLnBhZ2VBY2N1ZWlsIC5mb290ZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbn1cbiIsIi8qKioqIEJJQkxJT1RIw4hRVUVTIChkYW5zIGxlIGRvc3NpZXIgYm93ZXJfY29tcG9uZW50cykgKioqKi9cclxuQGltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS1jc3Mvbm9ybWFsaXplJztcclxuXHJcbkBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeSc7XHJcbkBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3MvcGx1Z2lucy9zdmctZ3JpZCc7XHJcblxyXG4vKioqKiB1dGlsaXRhaXJlcyAqKioqL1xyXG5AaW1wb3J0ICd1dGlsaXRhaXJlcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICd1dGlsaXRhaXJlcy9taXhpbnMnO1xyXG5cclxuXHJcbi8qKioqIGJhc2UgKHR5cG8pICoqKiovXHJcbkBpbXBvcnQgJ2Jhc2UvdHlwbyc7XHJcblxyXG4vKioqKiBtb2R1bGVzICoqKiovXHJcbkBpbXBvcnQgJ21vZHVsZXMvYW5pbWF0aW9ucyc7XHJcbkBpbXBvcnQgJ21vZHVsZXMvZ2VuZXJhbCc7XHJcblxyXG4vKioqKiogTUlTRSBFTiBQQUdFIFNVU1kgKioqKioqL1xyXG5AaW5jbHVkZSBib3JkZXItYm94LXNpemluZztcclxuXHJcbkBtZWRpYShtYXgtd2lkdGg6IDg1MHB4KXtcclxuICAkc3VzeTogKFxyXG4gICAgICAgICAgJ2NvbHVtbnMnOiBzdXN5LXJlcGVhdCg0KSxcclxuICAgICAgICAgICdndXR0ZXJzJzogMC4yMCxcclxuICAgICAgICAgICdzcHJlYWQnOiAnbmFycm93JyxcclxuICAgICAgICAgICdjb250YWluZXItc3ByZWFkJzogJ3dpZGUnLFxyXG4gICk7XHJcbiAgLmNvbnRlbmV1ciB7XHJcbiAgICAvL21pbi13aWR0aCBkZSAzMDUgcG91ciBmYWlyZSAzMjBweCBhdmVjIGxlcyBndXR0ZXJcclxuICAgIG1pbi13aWR0aDogMzA1cHg7XHJcbiAgICBwYWRkaW5nOiAwIGd1dHRlcig0KS8yO1xyXG4gICAgLy9iYWNrZ3JvdW5kOiBzdXN5LXN2Zy1ncmlkKChcclxuICAgIC8vICAgICAgICAnY29sdW1ucyc6IHN1c3ktcmVwZWF0KDQpLFxyXG4gICAgLy8gICAgICAgICdndXR0ZXJzJzogMC4yMCxcclxuICAgIC8vICAgICAgICAnc3ByZWFkJzogJ25hcnJvdycsXHJcbiAgICAvLyAgICAgICAgJ2NvbnRhaW5lci1zcHJlYWQnOiAnd2lkZScsXHJcbiAgICAvLykpIG5vLXJlcGVhdCBzY3JvbGw7XHJcbiAgfVxyXG59XHJcbkBtZWRpYShtaW4td2lkdGg6IDg1MXB4KXtcclxuICAkc3VzeTogKFxyXG4gICAgICAgICAgJ2NvbHVtbnMnOiBzdXN5LXJlcGVhdCgxMiksXHJcbiAgICAgICAgICAnZ3V0dGVycyc6IDAuMTYsXHJcbiAgICAgICAgICAnc3ByZWFkJzogJ25hcnJvdycsXHJcbiAgICAgICAgICAnY29udGFpbmVyLXNwcmVhZCc6ICduYXJyb3cnXHJcbiAgKTtcclxuICAuY29udGVuZXVyIHtcclxuICAgIG1heC13aWR0aDoxMjgwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIC8vYmFja2dyb3VuZDogc3VzeS1zdmctZ3JpZCgoXHJcbiAgICAvLyAgICAgICAgJ2NvbHVtbnMnOiBzdXN5LXJlcGVhdCgxMiksXHJcbiAgICAvLyAgICAgICAgJ2d1dHRlcnMnOiAwLjE2LFxyXG4gICAgLy8gICAgICAgICdzcHJlYWQnOiAnbmFycm93JyxcclxuICAgIC8vICAgICAgICAnY29udGFpbmVyLXNwcmVhZCc6ICduYXJyb3cnXHJcbiAgICAvLykpIG5vLXJlcGVhdCBzY3JvbGw7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLyoqIFN0eWxlcyAqKi9cclxuXHJcbmJvZHl7XHJcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG59XHJcblxyXG4uaGVhZGVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRub2lyRm9uZDtcclxuICBoZWlnaHQ6IDc1cHg7XHJcbn1cclxuXHJcbi50aXRsZXtcclxuICBtYXJnaW46MDtcclxufVxyXG5cclxuLnBhZ2VBY2N1ZWlsIHtcclxuICBmb250LWZhbWlseTogJGZvbnRlQm9sZDtcclxuICBjb2xvcjogd2hpdGU7XHJcblxyXG4gIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2JnX2FjY3VlaWxfdzgwMC5qcGcnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG5cclxuICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9iZ19hY2N1ZWlsX3cxMjgwLmpwZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHJcbiAgfVxyXG4gIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9iZ19hY2N1ZWlsX3cyNTYwLmpwZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIGZpeGVkO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9XHJcbn1cclxuXHJcbiAgLmNvbnRhaW5lckFjY3VlaWwge1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIFxyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KSB7XHJcbiAgICAgIGFsaWduLWl0ZW1zOmZsZXgtZW5kO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6JHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgfVxyXG5cclxuICAgIC50aXRyZSB7XHJcbiAgICAgIG1hcmdpbjogMnJlbSAwIDAgMDtcclxuICAgICAgY29sb3I6ICRub2lyO1xyXG4gICAgICBAaW5jbHVkZSBmb250U2l6ZSgyNnB4KTtcclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZm9udFNpemUoMzRweCk7XHJcbiAgICAgICAgd2lkdGg6IHNwYW4oMyBvZiA0KTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZm9udFNpemUoMzZweCk7XHJcbiAgICAgICAgd2lkdGg6IHNwYW4oNiBvZiAxMik7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OnNwYW4oMSB3aWRlIG9mIDEyKTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCl7XHJcbiAgICAgICAgd2lkdGg6IHNwYW4oNSBvZiAxMik7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmludHJvZHVjdGlvbiB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBsaW5lLWhlaWdodDogMjZweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG5vaXI2MDtcclxuXHJcbiAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTtcclxuICAgICAgbWFyZ2luOiA1cmVtIC0ycmVtO1xyXG5cclxuICAgICAgQGluY2x1ZGUgZm9udFNpemUoMTZweCk7XHJcblxyXG4gICAgICBwe1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDRyZW07XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xyXG4gICAgICAgICY6Zmlyc3QtY2hpbGR7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpIHtcclxuICAgICAgICB3aWR0aDogc3BhbigzIG9mIDQpK2d1dHRlcigpLzI7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMnJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogc3BhbigxIG9mIDEyKTtcclxuICAgICAgICBtYXJnaW46ICA1cmVtIDA7XHJcbiAgICAgICAgd2lkdGg6c3Bhbig3IG9mIDEyKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3Ape1xyXG4gICAgICAgIHdpZHRoOnNwYW4oNSBvZiAxMik7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDowO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogc3BhbigxIHdpZGUgb2YgMTIpO1xyXG5cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmJ0blNvdW1ldHRyZXtcclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBzcGFuKDEgd2lkZSBvZiAxMik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4uYmdfcXVpentcclxuICBiYWNrZ3JvdW5kOnVybCgnLi4vaW1hZ2VzL2JnX3F1aXouanBnJykgbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcclxufVxyXG4ucGFnZVF1aXp7XHJcbiAgcG9zaXRpb246cmVsYXRpdmU7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250ZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIEBtZWRpYShtaW4td2lkdGg6JHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICB0ZXh0LWFsaWduOmxlZnQ7XHJcbiAgfVxyXG5cclxuICAuaW5kaWNhdGV1clF1ZXN0aW9uLFxyXG4gIC56b25lUG9pbnRhZ2V7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnRlVGl0cmU7XHJcbiAgICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMTRweCk7XHJcbiAgfVxyXG5cclxuICAuaW5kaWNhdGV1clF1ZXN0aW9ue1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAuem9uZVBvaW50YWdle1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBtYXJnaW46YXV0byAxcmVtO1xyXG4gIH1cclxuXHJcbiAgLmluc3RydWN0aW9uUXVlc3Rpb257XHJcbiAgICBtYXJnaW46MDtcclxuICAgIHRleHQtc2hhZG93OiAkb21icmU7XHJcbiAgfVxyXG5cclxuICAuaWNvbmUtcG91Y2h7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2ljb25lcy9wb3VjaF9pY28uc3ZnJykgbm8tcmVwZWF0O1xyXG4gICAgd2lkdGg6Mi41cmVtO1xyXG4gIH1cclxuXHJcbiAgZmllbGRzZXR7XHJcbiAgICBib3JkZXI6bm9uZTtcclxuICAgIHBhZGRpbmc6MDtcclxuICAgIG1hcmdpbjowO1xyXG5cclxuICAgIC5mbGV4e1xyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgIC5mbGV4aXRlbXtcclxuICAgICAgICAgIHdpZHRoOnNwYW4oNSBvZiAxMik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucXVlc3Rpb257XHJcbiAgICBmb250LWZhbWlseTogJGZvbnRlQm9sZDtcclxuICAgIHRleHQtc2hhZG93OiAkb21icmU7XHJcblxyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMThweCk7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJG1vYmlsZSl7XHJcbiAgICAgIEBpbmNsdWRlIGZvbnRTaXplKDI2cHgpO1xyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgIHdpZHRoOnNwYW4oNCBvZiA1KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5xMXtcclxuICAgIC5pbWdRdWVzdGlvbntcclxuICAgICAgaW1ne1xyXG4gICAgICAgIGJvcmRlcjpzb2xpZCAycHggJGdyaXM7XHJcbiAgICAgICAgd2lkdGg6IHNwYW4oNCBvZiA0KTtcclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpe1xyXG4gICAgICAgICAgd2lkdGg6c3BhbigyIG9mIDQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICAgIHdpZHRoOnNwYW4oNCBvZiA1KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAuY2hvaXhSZXBvbnNlc3tcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nOjA7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgZGlzcGxheTpibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAuY2hvaXgge1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAkZ3JpcztcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYW5jRm9uZDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xyXG4gICAgICB3aWR0aDogc3Bhbig0IG9mIDQpO1xyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQb3J0cmFpdCl7XHJcbiAgICAgICAgd2lkdGg6c3BhbigyIHdpZGVyIG9mIDQpO1xyXG4gICAgICB9XHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG4gICAgICAgIHdpZHRoOnNwYW4oNSBvZiA1KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjpob3ZlcntcclxuICAgICAgICBib3gtc2hhZG93OiAkb21icmVIb3ZlcjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmxhYmVse1xyXG4gICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHdpZHRoOjEwMCU7XHJcbiAgICAgICAgcGFkZGluZzogMjBweCAwO1xyXG5cclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiBzcGFuKDEgb2YgNCkrZ3V0dGVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIC5pbnB1dHtcclxuICAgICAgICBAaW5jbHVkZSB2aXN1YWxseWhpZGRlbjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnJlcG9uc2V7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgIHdpZHRoOnNwYW4oNSBvZiAxMik7XHJcbiAgICB9XHJcblxyXG4gICAgLnJldHJvYWN0aW9ue1xyXG4gICAgICBtYXJnaW4tdG9wOjA7XHJcbiAgICB9XHJcbiAgICAuZmxleHtcclxuICAgICAgZGlzcGxheTpibG9jaztcclxuICAgICAgQGluY2x1ZGUgZm9udFNpemUoMTZweCk7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQb3J0cmFpdCl7XHJcbiAgICAgICAgZGlzcGxheTpmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjphdXRvO1xyXG4gICAgICAgIHdpZHRoOnNwYW4oMyBvZiA0KTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAuZXhwbGljYXRpb257XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnRlQm9sZDtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4gICAgICAgIHB7XHJcbiAgICAgICAgICBtYXJnaW46MCAwIDFyZW0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDokdGFibGV0dGVQb3J0cmFpdCl7XHJcbiAgICAgICAgICB3aWR0aDpzcGFuKDIgb2YgMyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5pbWdSZXBvbnNle1xyXG4gICAgICAgIGltZ3tcclxuICAgICAgICAgIHdpZHRoOnNwYW4oMiBvZiA0KTtcclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6JHRhYmxldHRlUG9ydHJhaXQpe1xyXG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiR0YWJsZXR0ZVBvcnRyYWl0KXtcclxuICAgICAgICAgIHdpZHRoOnNwYW4oMSBvZiAzKTtcclxuICAgICAgICAgIG1hcmdpbi1yaWdodDpndXR0ZXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUGF5c2FnZSl7XHJcbiAgICAgICAgICB3aWR0aDpzcGFuKDIgb2YgNSlcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYnRuX25leHR7XHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KXtcclxuICAgICAgICBtYXJnaW4tbGVmdDpzcGFuKDIgd2lkZSBvZiA0KTtcclxuICAgICAgfVxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgICAgICAvL21hcmdpbi1sZWZ0OnNwYW4oOCBvZiAxMikrZ3V0dGVyKCkvMztcclxuICAgICAgICB3aWR0aDpzcGFuKDMgb2YgNSk7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6c3BhbigyIHdpZGUgb2YgNSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG4uZm9vdGVye1xyXG4gIGRpc3BsYXk6YmxvY2s7XHJcbiAgd2lkdGg6MTAwJTtcclxuXHJcbiAgLmNyZWRpdFBob3Rve1xyXG4gICAgY29sb3I6ICRibGFuYztcclxuICAgIGF7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDEwcHgpO1xyXG4gICAgZm9udC1mYW1pbHk6IENhYmluLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG5cclxuICAuZm9uZHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRub2lyO1xyXG4gICAgY29sb3I6ICNCMkIyQjI7XHJcbiAgICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIHBhZGRpbmc6MC4yNXJlbTtcclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDEycHgpO1xyXG5cclxuICAgIC5hdHRyaWJ1dGlvbnN7XHJcbiAgICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgICAgIGNvbG9yOiAjQjJCMkIyO1xyXG4gICAgICBmb250LWZhbWlseTogQ2FiaW4sIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgICAgQGluY2x1ZGUgZm9udFNpemUoMTBweCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcbi5wYWdlQWNjdWVpbHtcclxuICAuZm9vdGVye1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOjA7XHJcbiAgfVxyXG59IiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIi8qKlxyXG4gKiBAYXV0aG9yIFJvc2UgUHJvdmVuY2hlclxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICogVEFCTEUgREVTIE1BVEnDiFJFU1xyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICpcclxuICogUG9saWNlcyBkZSBjYXJhY3TDqHJlc1xyXG4gKiBQYWxldHRlIGRlIGNvdWxldXJzXHJcbiAqIFBvaW50cyBkZSBydXB0dXJlXHJcbiAqKi9cclxuXHJcbi8qKiBQb2xpY2VzIGRlIGNhcmFjdMOocmUgKiovXHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogJ2NpbnplbERlY29yYXRpdmUnO1xyXG4gIHNyYzogdXJsKCcuLi9wb2xpY2VzL0NpbnplbERlY29yYXRpdmUtQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdjcmltc29uVGV4dEJvbGQnO1xyXG4gIHNyYzogdXJsKCcuLi9wb2xpY2VzL0NyaW1zb25UZXh0LUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiAnY3JpbXNvblRleHQnO1xyXG4gIHNyYzogdXJsKCcuLi9wb2xpY2VzL0NyaW1zb25UZXh0LVNlbWlCb2xkLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuJGZvbnRlOiBjcmltc29uVGV4dCwgc2VyaWY7XHJcbiRmb250ZUJvbGQ6IGNyaW1zb25UZXh0Qm9sZCwgc2VyaWY7XHJcbiRmb250ZVRpdHJlOiBjaW56ZWxEZWNvcmF0aXZlLCBzZXJpZjtcclxuXHJcblxyXG4vKiogUGFsZXR0ZSBkZSBjb3VsZXVycyAqKi9cclxuJHZlcnQ6ICM3Q0M2NkM7XHJcbiRncmlzOiAjNjg2ODY4O1xyXG4kcm91Z2U6ICNEMzIxMjE7XHJcbiRub2lyOiAjMDAwMDAwO1xyXG4kYmxhbmM6ICNGRkZGRkY7XHJcblxyXG4kZXJyZXVyOiAjQzAzRTNFO1xyXG5cclxuJGJsYW5jRm9uZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xyXG4kbm9pckZvbmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcclxuJG5vaXI2MDogcmdiYSgwLCAwLCAwLCAwLjYpO1xyXG5cclxuJG9tYnJlSG92ZXI6IDNweCAzcHggM3B4IHJnYmEoMCwwLDAsMC4xNik7XHJcbiRvbWJyZTogMCAxcHggM3B4IHJnYmEoMCwwLDAsMC4zKTtcclxuLy9Qb3VyIHV0aWxpc2VyIC0+IGJveC1zaGFkb3c6ICRvbWJyZVBhbGU7XHJcblxyXG4vKiogUG9pbnRzIGRlIHJ1cHR1cmUgKiovXHJcbiRtb2JpbGU6IDQ1MXB4O1xyXG4kdGFibGV0dGVQb3J0cmFpdDogNTUxcHg7XHJcbiR0YWJsZXR0ZVBheXNhZ2U6IDg1MXB4O1xyXG4kZGVza3RvcDogMTAwMHB4O1xyXG4vLyRkZXNrdG9wOiAxMjgycHg7XHJcbiIsIlxyXG5cclxuXHJcblxyXG5cclxuLyoqKioqKioqIFV0aWxpdGFpcmVzIGRlIGJhc2UgKEJveFNpemluZywgQ2xlYXJmaXgpICoqKioqKioqKi9cclxuLyogQm94U2l6aW5nICovXHJcbkBtaXhpbiBib3JkZXItYm94LXNpemluZ3tcclxuICAqIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBDbGVhcmZpeDogcG91ciBjb250cmVyIGxlIHByb2Jsw6htZSBkZXMgZW5mYW50cyBmbG90dGFudHMqL1xyXG5AbWl4aW4gY2xlYXJmaXgge1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCIgXCI7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gIH1cclxufVxyXG5cclxuLmNme1xyXG4gIEBpbmNsdWRlIGNsZWFyZml4O1xyXG59XHJcblxyXG4vKioqKioqKiogVXRpbGl0YWlyZXMgcG91ciBhY2Nlc3NpYmlsaXTDqSAqKioqKioqKiovXHJcbi8vIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW5yZWFkZXJzOlxyXG4vLyBodHRwOi8vc25vb2suY2EvYXJjaGl2ZXMvaHRtbF9hbmRfY3NzL2hpZGluZy1jb250ZW50LWZvci1hY2Nlc3NpYmlsaXR5XHJcbkBtaXhpbiB2aXN1YWxseWhpZGRlbiB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB3aWR0aDogMXB4O1xyXG5cclxuICAvLyBFeHRlbmRzIHRoZSAudmlzdWFsbHloaWRkZW4gY2xhc3MgdG8gYWxsb3cgdGhlIGVsZW1lbnQgdG8gYmUgZm9jdXNhYmxlXHJcbiAgLy8gd2hlbiBuYXZpZ2F0ZWQgdG8gdmlhIHRoZSBrZXlib2FyZDogaHR0cHM6Ly93d3cuZHJ1cGFsLm9yZy9ub2RlLzg5NzYzOFxyXG4gICYuZm9jdXNhYmxlOmFjdGl2ZSxcclxuICAmLmZvY3VzYWJsZTpmb2N1cyB7XHJcbiAgICBjbGlwOiBhdXRvO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gIH1cclxufVxyXG4udmlzdWFsbHloaWRkZW4sXHJcbi5zY3JlZW4tcmVhZGVyLW9ubHl7XHJcbiAgQGluY2x1ZGUgdmlzdWFsbHloaWRkZW47XHJcbn1cclxuXHJcblxyXG5cclxuLyoqKioqKioqIFV0aWxpdGFpcmVzIHBvdXIgdHlwb2dyYXBoaWUgKioqKioqKioqL1xyXG4vLyBGb25jdGlvbiBwb3VyIGNvbnZlcnRpciB1bmUgdmFsZXVyIGRlIGZvbnQtc2l6ZSBlbiBwaXhlbHMgw6Agc29uIMOpcXVpdmFsZW50IHJlbVxyXG5AZnVuY3Rpb24gY2FsY3VsYXRlUmVtKCRzaXplKSB7XHJcbiAgJHJlbVNpemU6ICRzaXplIC8gMTBweDtcclxuICBAcmV0dXJuICN7JHJlbVNpemV9cmVtO1xyXG59XHJcbi8vIE1peGluIHF1aSBpbmNsdXMgbGEgc29sdXRpb24gZGUgcmVwbGkgZW4gcGl4ZWwgc3VpdmkgcGFyIGxhIHZhbGV1ciBjYWxjdWzDqWUgZW4gcmVtXHJcbkBtaXhpbiBmb250U2l6ZSgkc2l6ZSkge1xyXG4gIGZvbnQtc2l6ZTogJHNpemU7XHJcbiAgZm9udC1zaXplOiBjYWxjdWxhdGVSZW0oJHNpemUpO1xyXG59XHJcblxyXG5cclxuLyoqKioqKioqKiBNaXhpbnMgZ8OpbsOpcmF1eCAqKioqKioqKiovXHJcbi8vQG1peGluIHRleHRTaGFkb3dlZE5vaXJ7XHJcbi8vICBjb2xvcjogJG5vaXI7XHJcbi8vICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4vL30iLCIvKipcclxuKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4qIFRBQkxFIERFUyBNQVRJw4hSRVMgLSBUeXBvZ3JhcGhpZSByZXNwb25zaXZlIChNb2JpbGUgRmlyc3QpXHJcbiogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuKiBCYXNlIGTDqWNpbWFsZVxyXG4qIEhpw6lyYXJjaGllIHJlc3BvbnNpdmVcclxuKi9cclxuXHJcblxyXG5cclxuLyoqIEJhc2UgZMOpY2ltYWxlICoqL1xyXG5odG1se1xyXG4gIGZvbnQtc2l6ZTogNjIuNSU7XHJcbn1cclxuYm9keSB7XHJcbiAgLyogMTZweCBwb3VyIHRvdXRlcyBsZXMgbGFyZ2V1cnMgZCfDqWNyYW4gKi9cclxuICBAaW5jbHVkZSBmb250U2l6ZSgxOHB4KTtcclxuICAvKiBmYWN0ZXVyIG11bHRpcGxpY2F0ZXVyIGRlIGxhIHRhaWxsZSBkZSBsYSBwb2xpY2UgMS4zNzV4MTYgPSAyMiAqL1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjM3NTtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpIHtcclxuICBib2R5IHtcclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICB9XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgYm9keSB7XHJcbiAgICBsaW5lLWhlaWdodDogMS43NTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuLyoqIEhpw6lyYXJjaGllIHJlc3BvbnNpdmUgKiovXHJcbi8qICBwbHVzIHByb2NoZSA9IHBsdXMgcGV0aXQgICYgIHBsdXMgbG9pbiA9IHBsdXMgZ3JhbmQgKi9cclxuXHJcbi8qIFRJVFJFUyBOSVZFQVUgMSAqL1xyXG5oMSxcclxuLmgxIHsgLyogPSAzMnB4ICovXHJcbiAgQGluY2x1ZGUgZm9udFNpemUoMjBweCk7XHJcbn1cclxuQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXR0ZVBvcnRyYWl0KSB7XHJcbiAgaDEsXHJcbiAgLmgxIHsgLyogPSA0MHB4ICovXHJcbiAgICBAaW5jbHVkZSBmb250U2l6ZSgyNnB4KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vKiBUSVRSRVMgTklWRUFVIDIgKi9cclxuaDIsXHJcbi5oMiB7IC8qID0gMjRweCAqL1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0dGVQb3J0cmFpdCkge1xyXG4gIGgyLFxyXG4gIC5oMiB7IC8qID0gMzJweCAqL1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMjRweCk7XHJcbiAgfVxyXG59XHJcblxyXG4vKiBUSVRSRVMgTklWRUFVIDMgKi9cclxuaDMsXHJcbi5oMyB7IC8qID0gMThweCAqL1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0dGVQb3J0cmFpdCkge1xyXG4gIGgzLFxyXG4gIC5oMyB7ICAvKiA9IDI0cHggKi9cclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDIwcHgpO1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG4vKiBUSVRSRVMgTklWRUFVIDQgKi9cclxuaDQsXHJcbi5oNCB7IC8qID0gMTZweCAqL1xyXG4gIEBpbmNsdWRlIGZvbnRTaXplKDE4cHgpO1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0dGVQb3J0cmFpdCkge1xyXG4gIGg0LFxyXG4gIC5oNCB7IC8qID0gMThweCAqL1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoMThweCk7XHJcbiAgfVxyXG59XHJcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcclxuXHJcbi8qIVxyXG4gKiBhbmltYXRlLmNzcyAtaHR0cDovL2RhbmVkZW4ubWUvYW5pbWF0ZVxyXG4gKiBWZXJzaW9uIC0gMy43LjBcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIC0gaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggRGFuaWVsIEVkZW5cclxuICogQW5pbWF0aW9ucyBhcmUgc2xpZ2h0bHkgbW9kaWZpZWQgZnJvbSB0aGUgb3JpZ2luYWwuXHJcbiAqL1xyXG5cclxuQGtleWZyYW1lcyBwdWxzZSB7XHJcbiAgMCUsIDg2JSwgOTIlLCAxMDAlIHtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gIH1cclxuXHJcbiAgODklLCA5NiUge1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMS4wNSwgMS4wNSwgMS4wNSk7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMS4wNSwgMS4wNSwgMS4wNSk7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XHJcbiAgZnJvbXtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS41cyBlYXNlO1xyXG4gIH1cclxuICB0byB7XHJcbiAgICBvcGFjaXR5OjE7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQGtleWZyYW1lcyBzbGlkZUluUmlnaHQge1xyXG4gIGZyb20ge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDEwMCUsMCk7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMnMgZWFzZTtcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6MTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gIH1cclxufVxyXG5cclxuLnBhZ2VBY2N1ZWlse1xyXG4gIC50aXRyZXtcclxuICAgIGFuaW1hdGlvbjogZmFkZUluIDJzO1xyXG4gIH1cclxuXHJcbiAgLmludHJvZHVjdGlvbntcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBhbmltYXRpb246IHNsaWRlSW5SaWdodCAxcyAxLjVzO1xyXG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XHJcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuICB9XHJcblxyXG4gIC5idG5Tb3VtZXR0cmV7XHJcbiAgICBvcGFjaXR5OjA7XHJcbiAgICBhbmltYXRpb246IGZhZGVJbiAxLjVzIDIuNXMsIHB1bHNlIDYuNXMgOXMgaW5maW5pdGU7XHJcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuICB9XHJcbn1cclxuXHJcbiIsIi50aXRyZXtcclxuICBtYXJnaW46MDtcclxuICBmb250LWZhbWlseTogJGZvbnRlVGl0cmU7XHJcbiAgY29sb3I6JGJsYW5jO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB0ZXh0LXNoYWRvdzogJG9tYnJlO1xyXG4gIC8vQGluY2x1ZGUgZm9udFNpemUoMjBweCk7XHJcblxyXG4gIC56ZWxkYXtcclxuICAgIGNvbG9yOiRyb3VnZTtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLmJvdXRvbntcclxuICBkaXNwbGF5OmJsb2NrO1xyXG5cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9pckZvbmQ7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGJsYW5jO1xyXG5cclxuICBjb2xvcjogJGJsYW5jO1xyXG4gIGZvbnQtZmFtaWx5OiAkZm9udGVUaXRyZTtcclxuICB0ZXh0LWRlY29yYXRpb246bm9uZTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzoxNHB4IDA7XHJcbiAgQGluY2x1ZGUgZm9udFNpemUoMTZweCk7XHJcblxyXG4gIHdpZHRoOnNwYW4oNCBvZiA0KTtcclxuXHJcbiAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldHRlUG9ydHJhaXQpe1xyXG4gICAgd2lkdGg6c3BhbigyIG9mIDQpO1xyXG4gIH1cclxuICBAbWVkaWEobWluLXdpZHRoOiAkdGFibGV0dGVQYXlzYWdlKXtcclxuICAgIHdpZHRoOnNwYW4oMyBvZiAxMik7XHJcbiAgfVxyXG5cclxuICB0cmFuc2l0aW9uOmFsbCwgMjAwbXMgZWFzZTtcclxuXHJcbiAgJjpob3ZlcixcclxuICAmOmZvY3Vze1xyXG4gICAgb3V0bGluZTpub25lO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDAuNnJlbSAkYmxhbmM7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcbi5pbWdRdWVzdGlvbntcclxuICBpbWd7XHJcbiAgICB3aWR0aDogc3BhbigyIG9mIDQpO1xyXG5cclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXR0ZVBheXNhZ2Upe1xyXG4gICAgICB3aWR0aDpzcGFuKDQgb2YgMTIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuaW1ne1xyXG4gIHdpZHRoOjEwMCU7XHJcbn1cclxuXHJcbiIsIi8vLyBHcmlkIE1hdGggRW5naW5lXG4vLy8gPT09PT09PT09PT09PT09PVxuLy8vIFRoZSBgc3VgIGZ1bmN0aW9ucyBnaXZlIHlvdSBkaXJlY3QgYWNjZXNzIHRvIHRoZSBtYXRoIGxheWVyLFxuLy8vIHdpdGhvdXQgYW55IHN5bnRheC1zdWdhciBsaWtlIHNob3J0aGFuZCBwYXJzaW5nLCBhbmQgbm9ybWFsaXphdGlvbi5cbi8vLyBJZiB5b3UgcHJlZmVyIG5hbWVkIGFyZ3VtZW50cywgYW5kIHN0cmlwcGVkLWRvd24gc3ludGF4LFxuLy8vIHlvdSBjYW4gdXNlIHRoZXNlIGZ1bmN0aW9ucyBkaXJlY3RseSBpbiB5b3VyIGNvZGUg4oCTXG4vLy8gcmVwbGFjaW5nIGBzcGFuYCwgYGd1dHRlcmAsIGFuZCBgc2xpY2VgLlxuLy8vXG4vLy8gVGhlc2UgZnVuY3Rpb25zIGFyZSBhbHNvIHVzZWZ1bFxuLy8vIGZvciBidWlsZGluZyBtaXhpbnMgb3Igb3RoZXIgZXh0ZW5zaW9ucyB0byBTdXN5LlxuLy8vIEFwcGx5IHRoZSBTdXN5IHN5bnRheCB0byBuZXcgbWl4aW5zIGFuZCBmdW5jdGlvbnMsXG4vLy8gdXNpbmcgb3VyIFwiUGx1Z2luIEhlbHBlcnNcIixcbi8vLyBvciB3cml0ZSB5b3VyIG93biBzeW50YXggYW5kIHBhc3MgdGhlIG5vcm1hbGl6ZWQgcmVzdWx0cyBhbG9uZ1xuLy8vIHRvIGBzdWAgZm9yIGNvbXBpbGF0aW9uLlxuLy8vXG4vLy8gQGdyb3VwIHN1LW1hdGhcbi8vL1xuLy8vIEBzZWUgc3Utc3BhblxuLy8vIEBzZWUgc3UtZ3V0dGVyXG4vLy8gQHNlZSBzdS1zbGljZVxuLy8vIEBpZ25vcmUgX3N1LXN1bVxuLy8vIEBpZ25vcmUgX3N1LWNhbGMtc3BhblxuLy8vIEBpZ25vcmUgX3N1LWNhbGMtc3VtXG4vLy8gQGlnbm9yZSBfc3UtbmVlZHMtY2FsYy1vdXRwdXRcblxuXG5cbi8vIFN1IFNwYW5cbi8vIC0tLS0tLS1cbi8vLyBDYWxjdWxhdGVzIGFuZCByZXR1cm5zIGEgQ1NTLXJlYWR5IHNwYW4gd2lkdGgsXG4vLy8gYmFzZWQgb24gbm9ybWFsaXplZCBzcGFuIGFuZCBjb250ZXh0IGRhdGEg4oCTXG4vLy8gYSBsb3ctbGV2ZWwgdmVyc2lvbiBvZiBgc3VzeS1zcGFuYCxcbi8vLyB3aXRoIGFsbCBvZiB0aGUgbG9naWMgYW5kIG5vbmUgb2YgdGhlIHN5bnRheCBzdWdhci5cbi8vL1xuLy8vIC0gR3JpZHMgZGVmaW5lZCB3aXRoIHVuaXRsZXNzIG51bWJlcnMgd2lsbCByZXR1cm4gYCVgIHZhbHVlcy5cbi8vLyAtIEdyaWRzIGRlZmluZWQgd2l0aCBjb21wYXJhYmxlIHVuaXRzXG4vLy8gICB3aWxsIHJldHVybiBhIHZhbHVlIGluIHRoZSB1bml0cyBwcm92aWRlZC5cbi8vLyAtIEdyaWRzIGRlZmluZWQgd2l0aCBhIG1peCBvZiB1bml0cyxcbi8vLyAgIG9yIGEgY29tYmluYXRpb24gb2YgdW50aWxlc3MgbnVtYmVycyBhbmQgdW5pdC1sZW5ndGhzLFxuLy8vICAgd2lsbCByZXR1cm4gYSBgY2FsYygpYCBzdHJpbmcuXG4vLy9cbi8vLyBAZ3JvdXAgc3UtbWF0aFxuLy8vIEBzZWUgc3VzeS1zcGFuXG4vLy9cbi8vLyBAcGFyYW0ge251bWJlciB8IGxpc3R9ICRzcGFuIC1cbi8vLyAgIE51bWJlciBvciBsaXN0IG9mIGdyaWQgY29sdW1ucyB0byBzcGFuXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29sdW1ucyAtXG4vLy8gICBMaXN0IG9mIGNvbHVtbnMgYXZhaWxhYmxlXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXJzIC1cbi8vLyAgIFdpZHRoIG9mIGEgZ3V0dGVyIGluIGNvbHVtbi1jb21wYXJhYmxlIHVuaXRzXG4vLy8gQHBhcmFtIHswIHwgMSB8IC0xfSAkc3ByZWFkIC1cbi8vLyAgIE51bWJlciBvZiBndXR0ZXJzIHNwYW5uZWQsXG4vLy8gICByZWxhdGl2ZSB0byBgc3BhbmAgY291bnRcbi8vLyBAcGFyYW0gezAgfCAxIHwgLTF9ICRjb250YWluZXItc3ByZWFkIFskc3ByZWFkXSAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYGNvbHVtbnNgIGNvdW50XG4vLy8gQHBhcmFtIHtpbnRlZ2VyfSAkbG9jYXRpb24gWzFdIC1cbi8vLyAgIE9wdGlvbmFsIHBvc2l0aW9uIG9mIHN1Yi1zcGFuIGFtb25nIGZ1bGwgc2V0IG9mIGNvbHVtbnNcbi8vL1xuLy8vIEByZXR1cm4ge2xlbmd0aH0gLVxuLy8vICAgUmVsYXRpdmUgb3Igc3RhdGljIGxlbmd0aCBvZiBhIHNwYW4gb24gdGhlIGdyaWRcbkBmdW5jdGlvbiBzdS1zcGFuKFxuICAkc3BhbixcbiAgJGNvbHVtbnMsXG4gICRndXR0ZXJzLFxuICAkc3ByZWFkLFxuICAkY29udGFpbmVyLXNwcmVhZDogJHNwcmVhZCxcbiAgJGxvY2F0aW9uOiAxXG4pIHtcbiAgJHNwYW46IHN1LXZhbGlkLXNwYW4oJHNwYW4pO1xuICAkY29sdW1uczogc3UtdmFsaWQtY29sdW1ucygkY29sdW1ucyk7XG4gICRndXR0ZXJzOiBzdS12YWxpZC1ndXR0ZXJzKCRndXR0ZXJzKTtcbiAgJHNwcmVhZDogc3UtdmFsaWQtc3ByZWFkKCRzcHJlYWQpO1xuXG4gIEBpZiAodHlwZS1vZigkc3BhbikgPT0gJ251bWJlcicpIHtcbiAgICBAaWYgKG5vdCB1bml0bGVzcygkc3BhbikpIHtcbiAgICAgIEByZXR1cm4gJHNwYW47XG4gICAgfVxuXG4gICAgJGxvY2F0aW9uOiBzdS12YWxpZC1sb2NhdGlvbigkc3BhbiwgJGxvY2F0aW9uLCAkY29sdW1ucyk7XG4gICAgJHNwYW46IHN1LXNsaWNlKCRzcGFuLCAkY29sdW1ucywgJGxvY2F0aW9uLCAkdmFsaWRhdGU6IGZhbHNlKTtcbiAgfVxuXG4gIEBpZiBfc3UtbmVlZHMtY2FsYy1vdXRwdXQoJHNwYW4sICRjb2x1bW5zLCAkZ3V0dGVycywgJHNwcmVhZCwgbm90ICd2YWxpZGF0ZScpIHtcbiAgICBAcmV0dXJuIF9zdS1jYWxjLXNwYW4oJHNwYW4sICRjb2x1bW5zLCAkZ3V0dGVycywgJHNwcmVhZCwgJGNvbnRhaW5lci1zcHJlYWQsIG5vdCAndmFsaWRhdGUnKTtcbiAgfVxuXG4gICRzcGFuLXdpZHRoOiBfc3Utc3VtKCRzcGFuLCAkZ3V0dGVycywgJHNwcmVhZCwgJHZhbGlkYXRlOiBmYWxzZSk7XG5cbiAgQGlmIHVuaXRsZXNzKCRzcGFuLXdpZHRoKSB7XG4gICAgJGNvbnRhaW5lci1zcHJlYWQ6IHN1LXZhbGlkLXNwcmVhZCgkY29udGFpbmVyLXNwcmVhZCk7XG4gICAgJGNvbnRhaW5lcjogX3N1LXN1bSgkY29sdW1ucywgJGd1dHRlcnMsICRjb250YWluZXItc3ByZWFkLCAkdmFsaWRhdGU6IGZhbHNlKTtcbiAgICBAcmV0dXJuIHBlcmNlbnRhZ2UoJHNwYW4td2lkdGggLyAkY29udGFpbmVyKTtcbiAgfVxuXG4gIEByZXR1cm4gJHNwYW4td2lkdGg7XG59XG5cblxuXG4vLyBTdSBHdXR0ZXJcbi8vIC0tLS0tLS0tLVxuLy8vIENhbGN1bGF0ZXMgYW5kIHJldHVybnMgYSBDU1MtcmVhZHkgZ3V0dGVyIHdpZHRoLFxuLy8vIGJhc2VkIG9uIG5vcm1hbGl6ZWQgZ3JpZCBkYXRhIOKAk1xuLy8vIGEgbG93LWxldmVsIHZlcnNpb24gb2YgYHN1c3ktZ3V0dGVyYCxcbi8vLyB3aXRoIGFsbCBvZiB0aGUgbG9naWMgYW5kIG5vbmUgb2YgdGhlIHN5bnRheCBzdWdhci5cbi8vL1xuLy8vIC0gR3JpZHMgZGVmaW5lZCB3aXRoIHVuaXRsZXNzIG51bWJlcnMgd2lsbCByZXR1cm4gYCVgIHZhbHVlcy5cbi8vLyAtIEdyaWRzIGRlZmluZWQgd2l0aCBjb21wYXJhYmxlIHVuaXRzXG4vLy8gICB3aWxsIHJldHVybiBhIHZhbHVlIGluIHRoZSB1bml0cyBwcm92aWRlZC5cbi8vLyAtIEdyaWRzIGRlZmluZWQgd2l0aCBhIG1peCBvZiB1bml0cyxcbi8vLyAgIG9yIGEgY29tYmluYXRpb24gb2YgdW50aWxlc3MgbnVtYmVycyBhbmQgdW5pdC1sZW5ndGhzLFxuLy8vICAgd2lsbCByZXR1cm4gYSBgY2FsYygpYCBzdHJpbmcuXG4vLy9cbi8vLyBAZ3JvdXAgc3UtbWF0aFxuLy8vIEBzZWUgc3VzeS1ndXR0ZXJcbi8vL1xuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLVxuLy8vICAgTGlzdCBvZiBjb2x1bW5zIGluIHRoZSBncmlkXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXJzIC1cbi8vLyAgIFdpZHRoIG9mIGEgZ3V0dGVyIGluIGNvbHVtbi1jb21wYXJhYmxlIHVuaXRzXG4vLy8gQHBhcmFtIHswIHwgMSB8IC0xfSAkY29udGFpbmVyLXNwcmVhZCAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYGNvbHVtbnNgIGNvdW50XG4vLy9cbi8vLyBAcmV0dXJuIHtsZW5ndGh9IC1cbi8vLyAgIFJlbGF0aXZlIG9yIHN0YXRpYyBsZW5ndGggb2Ygb25lIGd1dHRlciBpbiBhIGdyaWRcbkBmdW5jdGlvbiBzdS1ndXR0ZXIoXG4gICRjb2x1bW5zLFxuICAkZ3V0dGVycyxcbiAgJGNvbnRhaW5lci1zcHJlYWRcbikge1xuICBAaWYgKHR5cGUtb2YoJGd1dHRlcnMpID09ICdudW1iZXInKSB7XG4gICAgQGlmICgkZ3V0dGVycyA9PSAwKSBvciAobm90IHVuaXRsZXNzKCRndXR0ZXJzKSkge1xuICAgICAgQHJldHVybiAkZ3V0dGVycztcbiAgICB9XG4gIH1cblxuICBAaWYgX3N1LW5lZWRzLWNhbGMtb3V0cHV0KCRndXR0ZXJzLCAkY29sdW1ucywgJGd1dHRlcnMsIC0xLCBub3QgJ3ZhbGlkYXRlJykge1xuICAgIEByZXR1cm4gX3N1LWNhbGMtc3BhbigkZ3V0dGVycywgJGNvbHVtbnMsICRndXR0ZXJzLCAtMSwgJGNvbnRhaW5lci1zcHJlYWQsIG5vdCAndmFsaWRhdGUnKTtcbiAgfVxuXG4gICRjb250YWluZXI6IF9zdS1zdW0oJGNvbHVtbnMsICRndXR0ZXJzLCAkY29udGFpbmVyLXNwcmVhZCk7XG4gIEByZXR1cm4gcGVyY2VudGFnZSgkZ3V0dGVycyAvICRjb250YWluZXIpO1xufVxuXG5cblxuLy8gU3UgU2xpY2Vcbi8vIC0tLS0tLS0tXG4vLy8gUmV0dXJucyBhIGxpc3Qgb2YgY29sdW1uc1xuLy8vIGJhc2VkIG9uIGEgZ2l2ZW4gc3Bhbi9sb2NhdGlvbiBzbGljZSBvZiB0aGUgZ3JpZCDigJNcbi8vLyBhIGxvdy1sZXZlbCB2ZXJzaW9uIG9mIGBzdXN5LXNsaWNlYCxcbi8vLyB3aXRoIGFsbCBvZiB0aGUgbG9naWMgYW5kIG5vbmUgb2YgdGhlIHN5bnRheCBzdWdhci5cbi8vL1xuLy8vIEBncm91cCBzdS1tYXRoXG4vLy8gQHNlZSBzdXN5LXNsaWNlXG4vLy9cbi8vLyBAcGFyYW0ge251bWJlcn0gJHNwYW4gLVxuLy8vICAgTnVtYmVyIG9mIGdyaWQgY29sdW1ucyB0byBzcGFuXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29sdW1ucyAtXG4vLy8gICBMaXN0IG9mIGNvbHVtbnMgaW4gdGhlIGdyaWRcbi8vLyBAcGFyYW0ge251bWJlcn0gJGxvY2F0aW9uIFsxXSAtXG4vLy8gICBTdGFydGluZyBpbmRleCBvZiBhIHNwYW4gaW4gdGhlIGxpc3Qgb2YgY29sdW1uc1xuLy8vIEBwYXJhbSB7Ym9vbH0gJHZhbGlkYXRlIFt0cnVlXSAtXG4vLy8gICBDaGVjayB0aGF0IGFyZ3VtZW50cyBhcmUgdmFsaWQgYmVmb3JlIHByb2NlZWRpbmdcbi8vL1xuLy8vIEByZXR1cm4ge2xpc3R9IC1cbi8vLyAgIFN1YnNldCBsaXN0IG9mIGdyaWQgY29sdW1ucywgYmFzZWQgb24gc3BhbiBhbmQgbG9jYXRpb25cbkBmdW5jdGlvbiBzdS1zbGljZShcbiAgJHNwYW4sXG4gICRjb2x1bW5zLFxuICAkbG9jYXRpb246IDEsXG4gICR2YWxpZGF0ZTogdHJ1ZVxuKSB7XG4gIEBpZiAkdmFsaWRhdGUge1xuICAgICRjb2x1bW5zOiBzdS12YWxpZC1jb2x1bW5zKCRjb2x1bW5zKTtcbiAgICAkbG9jYXRpb246IHN1LXZhbGlkLWxvY2F0aW9uKCRzcGFuLCAkbG9jYXRpb24sICRjb2x1bW5zKTtcbiAgfVxuXG4gICRmbG9vcjogZmxvb3IoJHNwYW4pO1xuICAkc3ViLWNvbHVtbnM6ICgpO1xuXG4gIEBmb3IgJGkgZnJvbSAkbG9jYXRpb24gdG8gKCRsb2NhdGlvbiArICRmbG9vcikge1xuICAgICRzdWItY29sdW1uczogYXBwZW5kKCRzdWItY29sdW1ucywgbnRoKCRjb2x1bW5zLCAkaSkpO1xuICB9XG5cbiAgQGlmICRmbG9vciAhPSAkc3BhbiB7XG4gICAgJHJlbWFpbmRlcjogJHNwYW4gLSAkZmxvb3I7XG4gICAgJGNvbHVtbjogJGxvY2F0aW9uICsgJGZsb29yO1xuICAgICRzdWItY29sdW1uczogYXBwZW5kKCRzdWItY29sdW1ucywgbnRoKCRjb2x1bW5zLCAkY29sdW1uKSAqICRyZW1haW5kZXIpO1xuICB9XG5cbiAgQHJldHVybiAkc3ViLWNvbHVtbnM7XG59XG5cblxuXG4vLyBTdSBTdW1cbi8vIC0tLS0tLVxuLy8vIEdldCB0aGUgdG90YWwgc3VtIG9mIGNvbHVtbi11bml0cyBpbiBhIGxheW91dC5cbi8vL1xuLy8vIEBncm91cCBzdS1tYXRoXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy9cbi8vLyBAcGFyYW0ge2xpc3R9ICRjb2x1bW5zIC1cbi8vLyAgIExpc3Qgb2YgY29sdW1ucyBpbiB0aGUgZ3JpZFxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVycyAtXG4vLy8gICBXaWR0aCBvZiBhIGd1dHRlciBpbiBjb2x1bW4tY29tcGFyYWJsZSB1bml0c1xuLy8vIEBwYXJhbSB7MCB8IDEgfCAtMX0gJHNwcmVhZCAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYGNvbHVtbnNgIGNvdW50XG4vLy8gQHBhcmFtIHtib29sfSAkdmFsaWRhdGUgW3RydWVdIC1cbi8vLyAgIENoZWNrIHRoYXQgYXJndW1lbnRzIGFyZSB2YWxpZCBiZWZvcmUgcHJvY2VlZGluZ1xuLy8vXG4vLy8gQHJldHVybiB7bnVtYmVyfSAtXG4vLy8gICBUb3RhbCBzdW0gb2YgY29sdW1uLXVuaXRzIGluIGEgZ3JpZFxuQGZ1bmN0aW9uIF9zdS1zdW0oXG4gICRjb2x1bW5zLFxuICAkZ3V0dGVycyxcbiAgJHNwcmVhZCxcbiAgJHZhbGlkYXRlOiB0cnVlXG4pIHtcbiAgQGlmICR2YWxpZGF0ZSB7XG4gICAgJGNvbHVtbnM6IHN1LXZhbGlkLXNwYW4oJGNvbHVtbnMpO1xuICAgICRndXR0ZXJzOiBzdS12YWxpZC1ndXR0ZXJzKCRndXR0ZXJzKTtcbiAgICAkc3ByZWFkOiBzdS12YWxpZC1zcHJlYWQoJHNwcmVhZCk7XG4gIH1cblxuICAvLyBDYWxjdWxhdGUgY29sdW1uLXN1bVxuICAkY29sdW1uLXN1bTogMDtcbiAgQGVhY2ggJGNvbHVtbiBpbiAkY29sdW1ucyB7XG4gICAgJGNvbHVtbi1zdW06ICRjb2x1bW4tc3VtICsgJGNvbHVtbjtcbiAgfVxuXG4gICRndXR0ZXItc3VtOiAoY2VpbChsZW5ndGgoJGNvbHVtbnMpKSArICRzcHJlYWQpICogJGd1dHRlcnM7XG4gICR0b3RhbDogaWYoKCRndXR0ZXItc3VtID4gMCksICRjb2x1bW4tc3VtICsgJGd1dHRlci1zdW0sICRjb2x1bW4tc3VtKTtcblxuICBAcmV0dXJuICR0b3RhbDtcbn1cblxuXG5cbi8vIFN1IENhbGNcbi8vIC0tLS0tLS1cbi8vLyBSZXR1cm4gYSB1c2FibGUgc3BhbiB3aWR0aCBhcyBhIGBjYWxjKClgIGZ1bmN0aW9uLFxuLy8vIGluIG9yZGVyIHRvIGNyZWF0ZSBtaXhlZC11bml0IGdyaWRzLlxuLy8vXG4vLy8gQGdyb3VwIHN1LW1hdGhcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7bnVtYmVyIHwgbGlzdH0gJHNwYW4gLVxuLy8vICAgUHJlLXNsaWNlZCBsaXN0IG9mIGdyaWQgY29sdW1ucyB0byBzcGFuXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29sdW1ucyAtXG4vLy8gICBMaXN0IG9mIGNvbHVtbnMgYXZhaWxhYmxlXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXJzIC1cbi8vLyAgIFdpZHRoIG9mIGEgZ3V0dGVyIGluIGNvbHVtbi1jb21wYXJhYmxlIHVuaXRzXG4vLy8gQHBhcmFtIHswIHwgMSB8IC0xfSAkc3ByZWFkIC1cbi8vLyAgIE51bWJlciBvZiBndXR0ZXJzIHNwYW5uZWQsXG4vLy8gICByZWxhdGl2ZSB0byBgc3BhbmAgY291bnRcbi8vLyBAcGFyYW0gezAgfCAxIHwgLTF9ICRjb250YWluZXItc3ByZWFkIFskc3ByZWFkXSAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYGNvbHVtbnNgIGNvdW50XG4vLy8gQHBhcmFtIHtib29sfSAkdmFsaWRhdGUgW3RydWVdIC1cbi8vLyAgIENoZWNrIHRoYXQgYXJndW1lbnRzIGFyZSB2YWxpZCBiZWZvcmUgcHJvY2VlZGluZ1xuLy8vXG4vLy8gQHJldHVybiB7bGVuZ3RofSAtXG4vLy8gICBSZWxhdGl2ZSBvciBzdGF0aWMgbGVuZ3RoIG9mIGEgc3BhbiBvbiB0aGUgZ3JpZFxuQGZ1bmN0aW9uIF9zdS1jYWxjLXNwYW4oXG4gICRzcGFuLFxuICAkY29sdW1ucyxcbiAgJGd1dHRlcnMsXG4gICRzcHJlYWQsXG4gICRjb250YWluZXItc3ByZWFkOiAkc3ByZWFkLFxuICAkdmFsaWRhdGU6IHRydWVcbikge1xuICBAaWYgJHZhbGlkYXRlIHtcbiAgICAkc3Bhbjogc3UtdmFsaWQtc3Bhbigkc3Bhbik7XG4gICAgJGNvbHVtbnM6IHN1LXZhbGlkLWNvbHVtbnMoJGNvbHVtbnMpO1xuICAgICRndXR0ZXJzOiBzdS12YWxpZC1ndXR0ZXJzKCRndXR0ZXJzKTtcbiAgICAkc3ByZWFkOiBzdS12YWxpZC1zcHJlYWQoJHNwcmVhZCk7XG4gICAgJGNvbnRhaW5lci1zcHJlYWQ6IHN1LXZhbGlkLXNwcmVhZCgkY29udGFpbmVyLXNwcmVhZCk7XG4gIH1cblxuICAvLyBTcGFuIGFuZCBjb250ZXh0XG4gICRzcGFuOiBfc3UtY2FsYy1zdW0oJHNwYW4sICRndXR0ZXJzLCAkc3ByZWFkLCBub3QgJ3ZhbGlkYXRlJyk7XG4gICRjb250ZXh0OiBfc3UtY2FsYy1zdW0oJGNvbHVtbnMsICRndXR0ZXJzLCAkY29udGFpbmVyLXNwcmVhZCwgbm90ICd2YWxpZGF0ZScpO1xuXG4gIC8vIEZpeGVkIGFuZCBmbHVpZFxuICAkZml4ZWQtc3BhbjogbWFwLWdldCgkc3BhbiwgJ2ZpeGVkJyk7XG4gICRmbHVpZC1zcGFuOiBtYXAtZ2V0KCRzcGFuLCAnZmx1aWQnKTtcbiAgJGZpeGVkLWNvbnRleHQ6IG1hcC1nZXQoJGNvbnRleHQsICdmaXhlZCcpO1xuICAkZmx1aWQtY29udGV4dDogbWFwLWdldCgkY29udGV4dCwgJ2ZsdWlkJyk7XG5cbiAgJGNhbGM6ICcjeyRmaXhlZC1zcGFufSc7XG4gICRmbHVpZC1jYWxjOiAnKDEwMCUgLSAjeyRmaXhlZC1jb250ZXh0fSknO1xuXG4gIC8vIEZsdWlkLXZhbHVlc1xuICBAaWYgKG5vdCAkZmx1aWQtc3Bhbikge1xuICAgICRmbHVpZC1jYWxjOiBudWxsO1xuICB9IEBlbHNlIGlmICgkZmx1aWQtc3BhbiAhPSAkZmx1aWQtY29udGV4dCkge1xuICAgICRmbHVpZC1zcGFuOiAnKiAjeyRmbHVpZC1zcGFufSc7XG4gICAgJGZsdWlkLWNvbnRleHQ6IGlmKCRmbHVpZC1jb250ZXh0LCAnLyAjeyRmbHVpZC1jb250ZXh0fScsICcnKTtcbiAgICAkZmx1aWQtY2FsYzogJygjeyRmbHVpZC1jYWxjICRmbHVpZC1jb250ZXh0ICRmbHVpZC1zcGFufSknO1xuICB9XG5cbiAgQGlmICRmbHVpZC1jYWxjIHtcbiAgICAkY2FsYzogaWYoKCRjYWxjICE9ICcnKSwgJyN7JGNhbGN9ICsgJywgJycpO1xuICAgICRjYWxjOiAnI3skY2FsYyArICRmbHVpZC1jYWxjfSc7XG4gIH1cblxuICBAcmV0dXJuIGNhbGMoI3t1bnF1b3RlKCRjYWxjKX0pO1xufVxuXG5cblxuLy8gU3UgQ2FsYy1TdW1cbi8vIC0tLS0tLS0tLS0tXG4vLy8gR2V0IHRoZSB0b3RhbCBzdW0gb2YgZml4ZWQgYW5kIGZsdWlkIGNvbHVtbi11bml0c1xuLy8vIGZvciBjcmVhdGluZyBhIG1peGVkLXVuaXQgbGF5b3V0IHdpdGggYGNhbGMoKWAgdmFsdWVzLlxuLy8vXG4vLy8gQGdyb3VwIHN1LW1hdGhcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7bGlzdH0gJGNvbHVtbnMgLVxuLy8vICAgTGlzdCBvZiBjb2x1bW5zIGF2YWlsYWJsZVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkZ3V0dGVycyAtXG4vLy8gICBXaWR0aCBvZiBhIGd1dHRlciBpbiBjb2x1bW4tY29tcGFyYWJsZSB1bml0c1xuLy8vIEBwYXJhbSB7MCB8IDEgfCAtMX0gJHNwcmVhZCAtXG4vLy8gICBOdW1iZXIgb2YgZ3V0dGVycyBzcGFubmVkLFxuLy8vICAgcmVsYXRpdmUgdG8gYHNwYW5gIGNvdW50XG4vLy8gQHBhcmFtIHtib29sfSAkdmFsaWRhdGUgW3RydWVdIC1cbi8vLyAgIENoZWNrIHRoYXQgYXJndW1lbnRzIGFyZSB2YWxpZCBiZWZvcmUgcHJvY2VlZGluZ1xuLy8vXG4vLy8gQHJldHVybiB7bWFwfSAtXG4vLy8gICBNYXAgd2l0aCBgZml4ZWRgIGFuZCBgZmx1aWRgIGtleXNcbi8vLyAgIGNvbnRhaW5pbmcgdGhlIHByb3BlciBtYXRoIGFzIHN0cmluZ3NcbkBmdW5jdGlvbiBfc3UtY2FsYy1zdW0oXG4gICRjb2x1bW5zLFxuICAkZ3V0dGVycyxcbiAgJHNwcmVhZCxcbiAgJHZhbGlkYXRlOiB0cnVlXG4pIHtcbiAgQGlmICR2YWxpZGF0ZSB7XG4gICAgJGNvbHVtbnM6IHN1LXZhbGlkLXNwYW4oJGNvbHVtbnMpO1xuICAgICRndXR0ZXJzOiBzdS12YWxpZC1ndXR0ZXJzKCRndXR0ZXJzKTtcbiAgICAkc3ByZWFkOiBzdS12YWxpZC1zcHJlYWQoJHNwcmVhZCk7XG4gIH1cblxuICAkZmx1aWQ6IDA7XG4gICRmaXhlZDogKCk7XG4gICRjYWxjOiBudWxsO1xuXG4gIC8vIEd1dHRlcnNcbiAgJGd1dHRlcnM6ICAkZ3V0dGVycyAqIChsZW5ndGgoJGNvbHVtbnMpICsgJHNwcmVhZCk7XG5cbiAgLy8gQ29sdW1uc1xuICBAZWFjaCAkY29sIGluIGFwcGVuZCgkY29sdW1ucywgJGd1dHRlcnMpIHtcbiAgICBAaWYgdW5pdGxlc3MoJGNvbCkge1xuICAgICAgJGZsdWlkOiAkZmx1aWQgKyAkY29sO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGZpeGVkOiBfc3UtbWFwLWFkZC11bml0cygkZml4ZWQsICRjb2wpO1xuICAgIH1cbiAgfVxuXG4gIC8vIENvbXBpbGUgRml4ZWQgVW5pdHNcbiAgQGVhY2ggJHVuaXQsICR0b3RhbCBpbiAkZml4ZWQge1xuICAgIEBpZiAoJHRvdGFsICE9ICgwICogJHRvdGFsKSkge1xuICAgICAgJGNhbGM6IGlmKCRjYWxjLCAnI3skY2FsY30gKyAjeyR0b3RhbH0nLCAnI3skdG90YWx9Jyk7XG4gICAgfVxuICB9XG5cbiAgLy8gQ2FsYyBudWxsIG9yIHN0cmluZ1xuICBAaWYgJGNhbGMge1xuICAgICRjYWxjOiBpZihzdHItaW5kZXgoJGNhbGMsICcrJyksICcoI3skY2FsY30pJywgJyN7JGNhbGN9Jyk7XG4gIH1cblxuICAvLyBGbHVpZCAwID0+IG51bGxcbiAgJGZsdWlkOiBpZigoJGZsdWlkID09IDApLCBudWxsLCAkZmx1aWQpO1xuXG5cbiAgLy8gUmV0dXJuIG1hcFxuICAkcmV0dXJuOiAoXG4gICAgJ2ZpeGVkJzogJGNhbGMsXG4gICAgJ2ZsdWlkJzogJGZsdWlkLFxuICApO1xuXG4gIEByZXR1cm4gJHJldHVybjtcbn1cblxuXG5cbi8vIE5lZWRzIENhbGNcbi8vIC0tLS0tLS0tLS1cbi8vLyBDaGVjayBpZiBgY2FsYygpYCB3aWxsIGJlIG5lZWRlZCBpbiBkZWZpbmluZyBhIHNwYW4sXG4vLy8gaWYgdGhlIG5lY2Vzc2FyeSB1bml0cyBpbiBhIGdyaWQgYXJlIG5vdCBjb21wYXJhYmxlLlxuLy8vXG4vLy8gQGdyb3VwIHN1LW1hdGhcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7bGlzdH0gJHNwYW4gLVxuLy8vICAgU2xpY2Ugb2YgY29sdW1ucyB0byBzcGFuXG4vLy8gQHBhcmFtIHtsaXN0fSAkY29sdW1ucyAtXG4vLy8gICBMaXN0IG9mIGF2YWlsYWJsZSBjb2x1bW5zIGluIHRoZSBncmlkXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRndXR0ZXJzIC1cbi8vLyAgIFdpZHRoIG9mIGEgZ3V0dGVyXG4vLy8gQHBhcmFtIHswIHwgMSB8IC0xfSAkc3ByZWFkIC1cbi8vLyAgIE51bWJlciBvZiBndXR0ZXJzIHNwYW5uZWQsXG4vLy8gICByZWxhdGl2ZSB0byBgc3BhbmAgY291bnRcbi8vLyBAcGFyYW0ge2Jvb2x9ICR2YWxpZGF0ZSBbdHJ1ZV0gLVxuLy8vICAgQ2hlY2sgdGhhdCBhcmd1bWVudHMgYXJlIHZhbGlkIGJlZm9yZSBwcm9jZWVkaW5nXG4vLy9cbi8vLyBAcmV0dXJuIHtib29sfSAtXG4vLy8gICBgVHJ1ZWAgd2hlbiB1bml0cyBkbyBub3QgbWF0Y2gsIGFuZCBgY2FsYygpYCB3aWxsIGJlIHJlcXVpcmVkXG5AZnVuY3Rpb24gX3N1LW5lZWRzLWNhbGMtb3V0cHV0KFxuICAkc3BhbixcbiAgJGNvbHVtbnMsXG4gICRndXR0ZXJzLFxuICAkc3ByZWFkLFxuICAkdmFsaWRhdGU6IHRydWVcbikge1xuICBAaWYgJHZhbGlkYXRlIHtcbiAgICAkc3Bhbjogc3UtdmFsaWQtc3Bhbigkc3Bhbik7XG4gICAgJGNvbHVtbnM6IHN1LXZhbGlkLWNvbHVtbnMoJGNvbHVtbnMpO1xuICAgICRndXR0ZXJzOiBzdS12YWxpZC1ndXR0ZXJzKCRndXR0ZXJzKTtcbiAgfVxuXG4gICRoYXMtZ3V0dGVyOiBpZigobGVuZ3RoKCRzcGFuKSA+IDEpIG9yICgkc3ByZWFkID49IDApLCB0cnVlLCBmYWxzZSk7XG4gICRjaGVjazogaWYoJGhhcy1ndXR0ZXIsIGFwcGVuZCgkc3BhbiwgJGd1dHRlcnMpLCAkc3Bhbik7XG4gICRzYWZlLXNwYW46IF9zdS1pcy1jb21wYXJhYmxlKCRjaGVjay4uLik7XG5cbiAgQGlmICgkc2FmZS1zcGFuID09ICdzdGF0aWMnKSB7XG4gICAgQHJldHVybiBmYWxzZTtcbiAgfSBAZWxzZSBpZiAobm90ICRzYWZlLXNwYW4pIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cblxuICAkc2FmZS1mbHVpZDogX3N1LWlzLWNvbXBhcmFibGUoJGd1dHRlcnMsICRjb2x1bW5zLi4uKTtcblxuICBAcmV0dXJuIG5vdCAkc2FmZS1mbHVpZDtcbn1cbiJdfQ== */
